{
  "openapi": "3.0.1",
  "info": {
    "title": "Credit Solutions - Network International",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api-sandbox.network.global"
    }
  ],
  "paths": {
     "/v1/tokenkc/generate": {
      "post": {"tags": [
          "Token Generate"
        ],
        "summary": "Generate Token",
        "operationId": "generateToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "Specifies the type of grant",
                    "example": "client_credentials"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Client ID",
                    "example": "cd1c8c3d-3764-4c07-9efb-8efcd77d3275506282"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Client Secret",
                    "example": "2xJsANXQpf2bjyLOmiNGr7DkuHSzBOSC"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Access token issued by the server"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of the token, typically 'Bearer'"
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "Time in seconds before the token expires"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/V2/cardservices/ClientCreate": {
      "post": {
        "tags": [
          "ClientCreate"
        ],
        "summary": "ClientCreate",
        "description": "The Client Create API is a tool for financial institutions to easily create and manage client records. It stores important details like personal info and addresses. This forms the foundation for accounts and transactions, Client record is the first level or highest level in the hierarchy.\n\n\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1001&v=V2",
        "operationId": "post-CardServices-Transaction-V2-ClientCreate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestClientCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseClientCreate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardCreate": {
      "post": {
        "tags": [
          "CardCreate"
        ],
        "summary": "CardCreate",
        "description": "The Card Create API is used to cards for customers. It accepts various parameters such as customer information, account information, card type, and custom fields.\n\n\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1003&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardCreate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardCreate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/ClientUpdate": {
      "post": {
        "tags": [
          "ClientUpdate"
        ],
        "summary": "ClientUpdate",
        "description": "client update API allows users to update information for an existing client account in the payment processing system. This API is typically used by merchants or other businesses that want to update their client's information in the payment processing system.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1021&v=V2",
        "operationId": "post-CardServices-Transaction-V2-ClientUpdate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestClientUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseClientUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardActivation": {
      "post": {
        "tags": [
          "CardActivation"
        ],
        "summary": "CardActivation",
        "description": "This API enables the activation of cards, allowing them to be used for transactions. New or replaced/renewed cards are initially locked by the system, preventing any transactions from being made with them. Through this API, cardholders can activate their cards, making them fully functional for both online and physical Point of Sale transactions. The API handles all necessary internal processes to activate the card.\n\n\n  Dev Portla Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1004&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardActivation",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardActivation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardActivation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardStatusChange": {
      "post": {
        "tags": [
          "CardStatusChange"
        ],
        "summary": "CardStatusChange",
        "description": "This API allows for the change of status of a card or account. It is primarily used for blocking or unblocking a card, in cases where a cardholder has reported their card as lost or stolen, for example. This API can also be used for other status changes such as activating or deactivating a card. The API requires proper authentication and authorization to ensure that only authorized parties are able to make these changes.  \n\n\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1017&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardStatusChange",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardStatusChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardStatusChange"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardReplacement": {
      "post": {
        "tags": [
          "CardReplacement"
        ],
        "summary": "CardReplacement",
        "description": "This API will allow a cardholder to request a replacement for a card that has been lost, stolen, damaged, or has expired. The API will take the cardholder's identifying information and the reason for the replacement as inputs, and will process the request to order a new card to be issued to the cardholder. This API can also be used to update the card details in the card management system, such as updating the card expiry date or replacing the card with a new one with different features.  \n\n\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1020&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardReplacement",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardReplacement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardReplacement"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/PinTriesCounterReset": {
      "post": {
        "tags": [
          "PinTriesCounterReset"
        ],
        "summary": "PinTriesCounterReset",
        "description": "The \"Reset PIN Try Counter\" API allows consumers to manually reset the counter that tracks the number of consecutive times a cardholder has entered an incorrect PIN. This API is useful in situations where a cardholder has exceeded the predefined limit of incorrect PIN attempts and is unable to make transactions as a result. When a cardholder enters an incorrect PIN, the card's PIN Try Counter is incremented by one. Cards have a predefined limit for the number of incorrect PIN attempts before being blocked for transactions. If a cardholder exceeds this threshold and is unable to transact, this API can be utilized to reset the counter and restore the ability for the cardholder to make transactions.  \n\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/pin-management?categoryid=1007&apiid=apiid-1008&v=V2",
        "operationId": "post-CardServices-Transaction-V2-PinTriesCounterReset",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestPinTriesCounterReset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponsePinTriesCounterReset"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardSetPin": {
      "post": {
        "tags": [
          "CardSetPin"
        ],
        "summary": "CardSetPin",
        "description": "Card Set PIN API is used for setting the PIN for a new card, It can also be used for resetting a PIN of existing card. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/pin-management?categoryid=1007&apiid=apiid-1005&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardSetPin",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardSetPin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardSetPin"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/LookupCardIdentifier": {
      "post": {
        "tags": [
          "LookupCardIdentifier"
        ],
        "summary": "LookupCardIdentifier",
        "description": "Our API provides a solution for obtaining alternative identifiers for a given card identifier. It is one of the key APIs that enables our customers to avoid maintaining card numbers in their own system, thus reducing their PCI-DSS scope. By using this API, customers can dynamically retrieve clear or encrypted PAN by using our tokenized card identifier. This allows them to avoid the strict guidelines of PCI-DSS while still being able to perform transactions securely. To utilize this feature, the card identifier must be provided as an input to the API. The API then uses this input to query the card records and returns a response containing the requested identifier in a structured format.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1013&v=V2",
        "operationId": "post-CardServices-Transaction-V2-LookupCardIdentifier",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestLookupCardIdentifier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseLookupCardIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/GetCardTransactions": {
      "post": {
        "tags": [
          "GetCardTransactions"
        ],
        "summary": "GetCardTransactions",
        "description": "This API allows developers to retrieve transaction history for a specific card. It requires one of the supported card identifier as an input and returns all transaction details within a specified date range. The API connects to the card issuer's management system and retrieves the transaction history for the provided card number. The returned information includes details such as transaction amount, merchant name, and transaction date. API has capability to list posted transactions, authorized transactions or statement transactions.  \n\n\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/transactions?categoryid=1003&apiid=apiid-1018&v=V2",
        "operationId": "post-CardServices-Transaction-V2-GetCardTransactions",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetCardTransactions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetCardTransactions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/GetListOfCards": {
      "post": {
        "tags": [
          "GetListOfCards"
        ],
        "summary": "GetListOfCards",
        "description": "This API enables financial institutions to retrieve a comprehensive list of all cards associated with a specific cardholder, regardless of the card product type (Prepaid, Credit, or Debit). This API is an essential component of Mobile Banking or Home Banking applications, allowing institutions to input a client ID or account ID and retrieve all associated cards. The API response includes key information such as the masked PAN, expiration date, card product details, and status of each card. \n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1011&v=V2",
        "operationId": "post-CardServices-Transaction-V2-GetListOfCards",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetListOfCards"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetListOfCards"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CustomerDetails": {
      "post": {
        "tags": [
          "CustomerDetails"
        ],
        "summary": "CustomerDetails",
        "description": "This API allows users to retrieve detailed information about a particular customer or client. This API is typically used by financial institutions to view detailed information about a particular customer, for example, to view the personal details, contact details or address of the customer.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/account-services?categoryid=1002&apiid=apiid-1014&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CustomerDetails",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCustomerDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCustomerDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CustomerDetailsUpdate": {
      "post": {
        "tags": [
          "CustomerDetailsUpdate"
        ],
        "summary": "Customer Demographic Update",
        "description": "Customer Demographic update service is used for updating the demographic details of customer. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Customer_Demographic_Update",
        "operationId": "post-CardServices-Transaction-V2-CustomerDetailsUpdate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCustomerDetailsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCustomerDetailsUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/LoanOnCallQuickCash": {
      "post": {
        "tags": [
          "LoanOnCallQuickCash"
        ],
        "summary": "postLoanOnCallQuickCash",
        "description": "This API Provides a cash amount to the cardholder, by issuing a manager's check or transferring amount to his current account.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/buy_now_pay_later/version2/Loan_on_Call__QuickCash",
        "operationId": "post-CardServices-Transaction-V2-LoanOnCallQuickCash",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestLoanonCallQuickCash"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseLoanonCallQuickCash"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardLimitChange": {
      "post": {
        "tags": [
          "CardLimitChange"
        ],
        "summary": "postCardLimitChange",
        "description": "Card Limit Change service is used for changing the credit limit of primary and supplementary cards. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Card_Limit_Update",
        "operationId": "post-CardServices-Transaction-V2-CardLimitChange",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardLimitChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardLimitChange"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardPinVerification": {
      "post": {
        "tags": [
          "CardPinVerification"
        ],
        "summary": "postCardPinVerification",
        "description": "Card PIN Verification service is used for verifying the PIN of an existing card. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/pin-management?categoryid=1007&apiid=apiid-1006&v=V2",
        "operationId": "post-cardservices-enquiry-v2-cardpinverification",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestPinVerification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponsePinVerification"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardPinChange": {
      "post": {
        "tags": [
          "CardPinChange"
        ],
        "summary": "postCardPinChange",
        "description": "Card Change PIN service is used for updating the PIN of an existing card. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/pin-management?categoryid=1007&apiid=apiid-1007&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardPinChange",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardPinChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardPinChange"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/BalanceTransfer": {
      "post": {
        "tags": [
          "BalanceTransfer"
        ],
        "summary": "postBalanceTransfer",
        "description": "This API used for refinancing the new cardholder's balance of a card in other bank from the new card account.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/buy_now_pay_later/version2/Balance_Transfer",
        "operationId": "post-CardServices-Transaction-V2-BalanceTransfer",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestBalanceTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseBalanceTransfer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/BalanceConversion": {
      "post": {
        "tags": [
          "BalanceConversion"
        ],
        "summary": "BalanceConversion",
        "description": "New document with transaction type=â€™IPP Balance Conversionâ€™ is posted in the system and moving an amount from the outstanding principal (LOAN UNB) bucket of the IPP plan (debit) and credit â€˜Retail Instalment (technical)â€™ allocating it to the  LOAN buckets of the RETAIL plan, where priority will be defined as BIL_PREV, then BIL_LAST then CUR.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/buy_now_pay_later/version2/Balance_Conversion",
        "operationId": "post-CardServices-Transaction-V2-BalanceConversion",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestBalanceConversion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseBalanceConversion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/GetCVV2": {
      "post": {
        "tags": [
          "GetCVV2"
        ],
        "summary": "postGetCVV2",
        "description": "Get CVV2 service is used to retrieve CVV2 for the card of a customer.\n\nDev Portal Link | https://developer.network.global/apis/pin-management?categoryid=1007&apiid=apiid-1009&v=V2",
        "operationId": "post-CardServices-Transaction-V2-GetCVV2",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetCVV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetCVV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/ListOfCards": {
      "post": {
        "tags": [
          "ListOfCards"
        ],
        "summary": "postListOfCards",
        "description": "This API enables financial institutions to retrieve a comprehensive list of all cards associated with a specific cardholder, regardless of the card product type (Prepaid, Credit, or Debit). This API is an essential component of Mobile Banking or Home Banking applications, allowing institutions to input a client ID or account ID and retrieve all associated cards. The API response includes key information such as the masked PAN, expiration date, card product details, and status of each card.  \n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1011&v=V2",
        "operationId": "post-cardservices-enquiry-v2-listofcards",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/GetEligiblePlans": {
      "post": {
        "tags": [
          "GetEligiblePlans"
        ],
        "summary": "postGetEligiblePlans",
        "description": "Get Eligible Plans API can be used for Transaction Conversion, Balance Conversion and New Balance Booking(Balance Transfer & Loan On Call/Quick Cash)\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/buy_now_pay_later/version2/Get_Eligible_Plans",
        "operationId": "post-CardServices-Enquiry-V2-GetEligiblePlans",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetEligiblePlans"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetEligiblePlans"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardTransaction": {
      "post": {
        "tags": [
          "CardTransaction"
        ],
        "summary": "postCardTransaction",
        "description": "This API logs financial transactions with identifiers, type, amount, and currency, enabling debits or credits for various purposes and monitoring activity for accounting/compliance.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/transactions?categoryid=1003&apiid=apiid-1015&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardTransaction",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardTransactions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardTransactions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardBalanceEnquiry": {
      "post": {
        "tags": [
          "CardBalanceEnquiry"
        ],
        "summary": "postCardBalanceEnquiry",
        "description": "This API, designed to retrieve balances for a specified card, retrieves information such as the available amount, blocked or memo amount, due amount, and overdue amount. It should be noted that this API can only be utilized when the balances are stored in Network International's systems. It is not applicable for debit cards or prepaid cards with external store of value or wallets.  \n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1029&v=V2",
        "operationId": "post-CardServices-Enquiry-V2-CardBalanceEnquiry",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardBalances"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardBalanceEnquiry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardStatementSummary": {
      "post": {
        "tags": [
          "CardStatementSummary"
        ],
        "summary": "postCardStatementSummary",
        "description": "Card statement summary service is used for fetching the online card statement for a given card. This service is applicable only for Credit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1016&v=V2",
        "operationId": "post-cardservices-enquiry-v2-cardstatementsummary",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardStatementSummary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardStatementSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardUpdate": {
      "post": {
        "tags": [
          "CardUpdate"
        ],
        "summary": "postCardUpdate",
        "description": "The API provides the capability to update an existing card associated with a specific account and cardholder. This includes updating card information such as the expiration date, card status, etc. The API requires specific information to be provided such as the card identifier in order to update the card. This feature allows businesses to keep their customer's card information updated, ensuring smooth transaction processing and reducing the risk of fraudulent activities. The functionality provided by this API can be useful for updating cards.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1023&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardUpdate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/GetPlanList": {
      "post": {
        "tags": [
          "GetPlanList"
        ],
        "summary": "postGetPlanList",
        "description": "This service is used for fetching the Summary of all instalment plans for specified card.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/buy_now_pay_later/version2/Get_Plan_List",
        "operationId": "post-CardServices-Enquiry-V2-GetPlanList",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetPlanList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetPlanList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/GetPlanDetailsByID": {
      "post": {
        "tags": [
          "GetPlanDetailsByID"
        ],
        "summary": "postGetPlanDetailsByID",
        "description": "Get plan details will get all plan details for a specific plan ID.\n\nDev Portal Link | https://developer.network.ae/docs/read/buy_now_pay_later/version2/Get_Plan_Details_By_Id",
        "operationId": "post-CardServices-Enquiry-V2-GetPlanDetailsByID",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetPlanDetailsByID"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetPlanDetailsByID"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/RefinanceTransaction": {
      "post": {
        "tags": [
          "RefinanceTransaction"
        ],
        "summary": "postRefinanceTransaction",
        "description": "Sample Description\n\nDev Portal Link | https://developer.network.ae/docs/read/buy_now_pay_later/version2/Refinance_Transaction",
        "operationId": "post-CardServices-Transaction-V2-RefinanceTransaction",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestRefinanceTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseRefinanceTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardDetailsEnquiry": {
      "post": {
        "tags": [
          "CardDetailsEnquiry"
        ],
        "summary": "CardDetailsEnquiry",
        "description": "The Card Details API enables businesses to obtain detailed information about a specific card. The API requires the card identifier as an input parameter and returns the requested information in a JSON format. The information returned by the API includes the primary account number (PAN), the product associated with the card, various statuses and balances associated with the card, and other relevant details. This feature allows businesses to access and utilize the card information to support various card-related operations, such as transactions, card management, and customer service.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-1013&v=V2",
        "operationId": "post-CardServices-Transaction-V2-CardDetailsEnquiry",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardDetailsEnquiry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardVerification": {
      "post": {
        "tags": [
          "CardVerification"
        ],
        "summary": "CardVerification",
        "description": "Card Verification service is used for checking the validity of the card.\n\nDev Portal Link | https://developer.network.ae/docs/read/card_services/version_2/Card_Verification",
        "operationId": "post-CardServices-Transaction-V2-CardVerification",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardVerificationEnquiry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardVerification"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardInsuranceProduct": {
      "post": {
        "tags": [
          "CardInsuranceProduct"
        ],
        "summary": "CardInsuranceProduct",
        "description": "Card Insurance Products service is used to fetch details about insurance products for the card details provided. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Card_Insurance_Product",
        "operationId": "post-CardServices-Transaction-V2-CardInsuranceProduct",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardInsuranceProductEnquiry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardInsuranceProduct"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardInsuranceProductUpdate": {
      "post": {
        "tags": [
          "CardInsuranceProductUpdate"
        ],
        "summary": "CardInsuranceProductUpdate",
        "description": "This service is used by bank to update Insurance product of particular Account. \n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Card_Insurance_Product_Update",
        "operationId": "post-CardServices-Transaction-V2-CardInsuranceProductUpdate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardInsuranceProductUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardInsuranceProductUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardDirectDebit": {
      "post": {
        "tags": [
          "CardDirectDebit"
        ],
        "summary": "CardDirectDebit",
        "description": "Card Direct Debit service is used to fetch details about debit for the card details provided. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Card_Direct_Debit",
        "operationId": "post-CardServices-Transaction-V2-CardDirectDebit",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardDirectDebit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardDirectDebit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardDirectDebitUpdate": {
      "post": {
        "tags": [
          "CardDirectDebitUpdate"
        ],
        "summary": "CardDirectDebitUpdate",
        "description": "Update Card Direct Debit service is used to update details about direct debit for the card details provided. This service is applicable for Credit and Debit Cards.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Card_Direct_Debit_Update",
        "operationId": "post-CardServices-Transaction-V2-CardDirectDebitUpdate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardDirectDebitUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardDirectDebitUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/CardContactDetails": {
      "post": {
        "tags": [
          "CardContactDetails"
        ],
        "summary": "CardContactDetails",
        "description": "This API will return list of contact details of a given card such as Alternative ID, Client Number, Mobile Phone and more.\n\n\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Card_Contact_Details",
        "operationId": "post-CardServices-Enquiry-V2-CardContactDetails",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestCardContactDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseCardContactDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/GetTariffDetails": {
      "post": {
        "tags": [
          "GetTariffDetails"
        ],
        "summary": "GetTariffDetails",
        "description": "This API Provides businesses detailed card info via card identifier input in JSON format, supporting transactions and customer service.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Card_Details",
        "operationId": "post-CardServices-Enquiry-V2-GetTariffDetails",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestTariffDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseTariffDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardservices/NotificationService": {
      "post": {
        "tags": [
          "NotificationService"
        ],
        "summary": "NotificationService",
        "description": "Send Notification API is be used to send an email or SMS or both to the cardholder.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Notification_Service",
        "operationId": "post-CardServices-Transaction-V2-NotificationService",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestNotificationService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseNotificationService"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/CardServices/Transaction/V2/ReleasePendingAuth": {
      "post": {
        "tags": [
          "Release Pending Authorization"
        ],
        "summary": "Release Pending Authorization",
        "description": "This service will be used to cancel pending authorization. This service will search only for pending authorization.",
        "operationId": "post-CardServices-Transaction-V2-ReleasePendingAuth",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestReleasePendingAuth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseReleasePendingAuth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/BulkCardIssuance/Transaction/V2/CardCreate": {
      "post": {
        "tags": [
          "BulkCardCreate"
        ],
        "summary": "BulkCardCreate",
        "description": "This API allows issuing a number of no-name plastics that can be used for the instant issuance process.\n\n\nDev Portal Link | https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-4038&v=V2",
        "operationId": "post-CardServices-Transaction-V2-BulkCardCreate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestBulkCardCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseBulkCardCreate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/BulkCardIssuance/Enquiry/V2/ListOfCards": {
      "post": {
        "tags": [
          "BulkListOfCards"
        ],
        "summary": "BulkListOfCards",
        "description": "Bulk list of cards can be used for stock management, which lists all generated pre-embossed cards.\n\nDev Portal Link | https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-4039&v=V2",
        "operationId": "post-CardServices-Transaction-V2-BulkListOfCards",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestBulkListOfCards"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseBulkListOfCards"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/BulkCardIssuance/Enquiry/V2/CardSummary": {
      "post": {
        "tags": [
          "BulkCardSummary"
        ],
        "summary": "BulkCardSummary",
        "description": "Bulk Card Summary can be used for stock management, this will give you statistics of your stock. For example you will be able to know the number of cards available under a given product.\n\nDev Portal Link | https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-4040&v=V2",
        "operationId": "post-CardServices-Transaction-V2-BulkCardSummary",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestBulkCardSummary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseBulkCardSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/BulkCardIssuance/Transaction/V2/MoveCards": {
      "post": {
        "tags": [
          "BulkMoveCards"
        ],
        "summary": "BulkMoveCards",
        "description": "The Bulk Pre-embossed Card Client Move API request is a designed for streamlined processing of large-scale card movements within a client's system. This application operates through an online API, allowing you to move card/list of cards from one client, branch, agent to another.\n\nDev Portal Link | https://developer.network.global/apis/card-services?categoryid=1001&apiid=apiid-4041&v=V2",
        "operationId": "post-CardServices-Transaction-V2-BulkMoveCards",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestBulkMoveCards"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseBulkMoveCards"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Transaction/V2/AccountCreate": {
      "post": {
        "tags": [
          "AccountCreate"
        ],
        "summary": "AccountCreate",
        "description": "The Account Create API allows for the creation of new customer accounts. Parameters include customer ID, card type, branch code, product code, currency, and custom fields. These custom fields allow for the addition of unique information, such as contract numbers. Once the parameters are set, the API executes the creation of the new account and returns a response indicating the success or failure of the process.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/account-services?categoryid=1002&apiid=apiid-1002&v=V2",
        "operationId": "post-AccountServices-Transaction-V2-AccountCreate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountCreate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Transaction/V2/AccountUpdate": {
      "post": {
        "tags": [
          "AccountUpdate"
        ],
        "summary": "AccountUpdate",
        "description": "Update Account API allows for the updating of an existing account for a specific client, and this account will be linked to a specific product.\n\n\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/account-services?categoryid=1002&apiid=apiid-1022&v=V2",
        "operationId": "post-AccountServices-Transaction-V2-AccountUpdate",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Transaction/V2/AccountTransfer": {
      "post": {
        "tags": [
          "AccountTransfer"
        ],
        "summary": "AccountTransfer",
        "description": "This API is used to change the product of the account.",
        "operationId": "post-AccountServices-Transaction-V2-AccountTransfer",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountTransfer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Enquiry/V2/ListOfAccounts": {
      "post": {
        "tags": [
          "ListOfAccounts"
        ],
        "summary": "postListOfAccounts",
        "description": "List Of Accounts API allows users to retrieve a list of all client accounts for a particular client. This API is typically used by merchants or other businesses that want to view a list of all accounts that are registered in the payment processing system.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/account-services?categoryid=1002&apiid=apiid-1012&v=V2",
        "operationId": "post-cardservices-enquiry-v2-listofaccounts",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Transaction/V2/AccountStatusChange": {
      "post": {
        "tags": [
          "AccountStatusChange"
        ],
        "summary": "AccountStatusChange",
        "description": "Update Account Status API is used for updating the status of the account. Status can be updated to active, blocked etc.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Account_Status_Change",
        "operationId": "post-AccountServices-Transaction-V2-AccountStatusChange",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountStatusChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountStatusChange"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Enquiry/V2/AccountHierarchy": {
      "post": {
        "tags": [
          "AccountHierarchyEnquiry"
        ],
        "summary": "AccountHierarchyEnquiry",
        "description": "Account hierarchy API will be used to get all accounts for commercial or multi-currency hierarchy under specific client id or account number.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Account_Hierarchy",
        "operationId": "post-AccountServices-Enquiry-V2-AccountHierarchy",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountHierarchyEnquiry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountHierarchyEnquiry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Transaction/V2/AccountTransaction": {
      "post": {
        "tags": [
          "AccountTransaction"
        ],
        "summary": "postAccountTransaction",
        "description": "Account Transaction API logs financial transactions on account level with identifiers such as type, amount, and currency.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Account_Transaction",
        "operationId": "post-AccountServices-Transaction-V2-AccountTransaction",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountTransactions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountTransactions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Enquiry/V2/GetAccountTransactions": {
      "post": {
        "tags": [
          "GetAccountTransaction"
        ],
        "summary": "Account Transaction Details",
        "description": "Account Transaction Details API is used to get transactions details on account.\n\n\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Account_Transaction_Details",
        "operationId": "post-accountservices-Transaction-V2-GetAccountTransaction",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetAccountTransactions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetAccountTransactions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Transaction/V2/P2PTransfer": {
      "post": {
        "tags": [
          "P2PTransfer"
        ],
        "summary": "P2PTransfer",
        "description": "P2P Transaction API is used to transfer money from source (account or card) to target (account or card), it can be used when transferring amounts between different levels in a corporate hierarchy.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/P2P_Transfer",
        "operationId": "post-AccountServices-Transaction-V2-P2PTransfer",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestP2PTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseP2PTransfer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/AccountServices/Enquiry/V2/AccountBalanceEnquiry": {
      "post": {
        "tags": [
          "AccountBalanceEnquiry"
        ],
        "summary": "postAccountBalanceEnquiry",
        "description": "Balance Enquiry Account service is used for getting the balance details of a given account. This service is applicable only when balance in On-Us.\n\n\n  Dev Portal Link |\n  https://developer.network.ae/docs/read/card_services/version_2/Get_Account_Balance",
        "operationId": "post-AccountServices-Enquiry-V2-AccountBalanceEnquiry",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestAccountBalances"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseAccountBalanceEnquiry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardcontrol/GetLimits": {
      "post": {
        "tags": [
          "GetLimitUsageDetails"
        ],
        "summary": "postGetLimiteUsageDetails",
        "description": "This API provides a way for users to retrieve specific limit information related to a given card, with options to filter results and specify query scope and channel.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-control-services?categoryid=1008&apiid=apiid-1024&v=V2",
        "operationId": "post-cardservices-enquiry-v2-getlimits",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetLimitUsageDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetLimitUsageDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardcontrol/UpdateLimits": {
      "post": {
        "tags": [
          "UpdateLimitUsageDetails"
        ],
        "summary": "postUpdateLimiteUsageDetails",
        "description": "This API is an essential tool for payment processing companies that provide credit or debit card services to their customers. This API allows customers to update their card limit quickly and easily, providing them with greater control over their spending and finances.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-control-services?categoryid=1008&apiid=apiid-1036&v=V2",
        "operationId": "post-cardservices-enquiry-v2-updatelimits",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestUpdateLimitUsageDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseUpdateLimitUsageDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardcontrol/SwitchRestrictions": {
      "post": {
        "tags": [
          "SwitchRestrictions"
        ],
        "summary": "SwitchRestrictions",
        "description": "This API enables customers to quickly and easily switch restrictions on their credit or debit cards, helping them to make changes on the go.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-control-services?categoryid=1008&apiid=apiid-1034&v=V2",
        "operationId": "post-cardservices-enquiry-v2-SwitchRestrictions",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestSwitchRestrictionsUsageDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseSwitchRestrictionsUsageDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardcontrol/SwitchMCC": {
      "post": {
        "tags": [
          "SwitchMCC"
        ],
        "summary": "SwitchMCC",
        "description": "This API enables and desables specific groups of merchants based on thier code (e.g. hotels)\n\nDev Portal Link | https://developer.network.ae/docs/read/card_limits/Switch_MCC",
        "operationId": "post-cardservices-transaction-V2-SwitchMCC",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestSwitchMCC"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseSwitchMCC"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/CardControl/Enquiry/V2/GetMCCControls": {
      "post": {
        "tags": [
          "GetMCCControls"
        ],
        "summary": "GetMCCControls",
        "description": "This API will be used to get all Blocked/Allowed MCC groups and codes.",
        "operationId": "post-cardservices-Enquiry-V2-GetMCCControls",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetMCCControls"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetMCCControls"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/V2/cardcontrol/GetRestrictions": {
      "post": {
        "tags": [
          "GetRestrictionsUsageDetails"
        ],
        "summary": "GetRestrictionsUsageDetails",
        "description": "This API enables customers to quickly and easily view any restrictions on their credit or debit cards, helping them to make informed decisions about their spending.\n\n\n  Dev Portal Link |\n  https://developer.network.global/apis/card-control-services?categoryid=1008&apiid=apiid-1037&v=V2",
        "operationId": "post-cardservices-enquiry-v2-GetRestrictions",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestGetRestrictions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseGetRestrictions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/CardServices/Transaction/V2/OnlineEmbossing": {
      "post": {
        "tags": [
          "OnlineEmbossing"
        ],
        "summary": "OnlineEmbossing",
        "description": "This service is used to generate security values for a card and update its status.",
        "operationId": "post-cardservices-transaction-V2-OnlineEmbossing",
        "requestBody": {
          "description": "Sample Description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NISrvRequestOnlineEmbossing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NISrvResponseOnlineEmbossing"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/dictionaries/products": {
      "get": {
        "tags": [
          "GetProductDictionary"
        ],
        "summary": "GetProductDictionary",
        "description": "This service will be used to get all products for a given FI, with the option to filter on Product Contract (Account|Card).",
        "operationId": "get-dictionaries-products",
        "parameters": [
          {
            "in": "header",
            "name": "Unique-Reference-Code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "32422412"
            }
          },
          {
            "in": "query",
            "name": "productContract",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Account",
              "minLength": 1,
              "maxLength": 7
            },
            "description": "Account Or Card"
          }
        ],
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionaries_product"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    },
    "/dictionaries/mcc": {
      "get": {
        "tags": [
          "GetDictionariesMCC"
        ],
        "summary": "GetDictionariesMCC",
        "description": "This service will be used to get all available MCC Groups available for a given FI, with the option to get related MCC codes by sending include_code = true and the option to filter on: MCC Group: this can be specific MCC group code, or list of MCC group codes comma separated (ex: C,U).\n\n\n    Dev Portal Link |\n    https://developer.network.ae/docs/read/card_services/version_2/GetDictionariesMCC",
        "operationId": "get-dictionaries-mcc",
        "parameters": [
          {
            "in": "header",
            "name": "Unique-Reference-Code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Req-008"
            }
          },
          {
            "in": "header",
            "name": "Financial-Id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "NIC"
            }
          },
          {
            "in": "header",
            "name": "Channel-Id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IVR"
            }
          },
          {
            "in": "query",
            "name": "include_codes",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "mcc_group",
            "required": false,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sample Description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionaries_mcc"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          },
          "502": {
            "description": "Bad gateway",
            "content": {}
          },
          "503": {
            "description": "Scheduled Maintenance",
            "content": {}
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {}
          },
          "596": {
            "description": "Service Not Found",
            "content": {}
          }
        }
      }
    }
  },
  
  "components": {
    
    "schemas": {
      "NISrvRequestAccountList": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountListReq"
          }
        }
      },
      "NISrvResponseAccountList": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountListRes"
          }
        }
      },
      "NISrvRequestCardLimitChange": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardLimitChangeReq"
          }
        }
      },
      "NISrvResponseCardLimitChange": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardLimitChangeRes"
          }
        }
      },
      "NISrvRequestPinVerification": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardPinVerifcationReq"
          }
        }
      },
      "NISrvResponsePinVerification": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardPinVerifcationRes"
          }
        }
      },
      "NISrvRequestCardPinChange": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardPinChangeReq"
          }
        }
      },
      "NISrvResponseCardPinChange": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardPinChangeRes"
          }
        }
      },
      "NISrvRequestGetCVV2": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetCVV2Req"
          }
        }
      },
      "NISrvResponseGetCVV2": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetCVV2Res"
          }
        }
      },
      "NISrvRequestGetEligiblePlans": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetEligiblePlansReq"
          }
        }
      },
      "NISrvResponseGetEligiblePlans": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetEligiblePlansRes"
          }
        }
      },
      "NISrvRequestCardTransactions": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardTransactionsReq"
          }
        }
      },
      "NISrvResponseCardTransactions": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardTransactionsRes"
          }
        }
      },
      "NISrvRequestAccountTransactions": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountTransactionsReq"
          }
        }
      },
      "NISrvResponseAccountTransactions": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountTransactionsRes"
          }
        }
      },
      "NISrvRequestP2PTransfer": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/P2PTransferReq"
          }
        }
      },
      "NISrvResponseP2PTransfer": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/P2PTransferRes"
          }
        }
      },
      "NISrvRequestCardBalances": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardBalancesReq"
          }
        }
      },
      "NISrvResponseCardBalanceEnquiry": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardbalanceEnquiryRes"
          }
        }
      },
      "NISrvRequestAccountBalances": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountBalancesReq"
          }
        }
      },
      "NISrvResponseAccountBalanceEnquiry": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountbalanceEnquiryRes"
          }
        }
      },
      "NISrvRequestCardStatementSummary": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardStatementSummaryReq"
          }
        }
      },
      "NISrvResponseCardStatementSummary": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardStatementSummaryRes"
          }
        }
      },
      "NISrvRequestGetLimitUsageDetails": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetLimitUsageDetailsReq"
          }
        }
      },
      "NISrvResponseGetLimitUsageDetails": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetLimitUsageDetailsRes"
          }
        }
      },
      "NISrvRequestCardUpdate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardUpdateReq"
          }
        }
      },
      "NISrvResponseCardUpdate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardUpdateRes"
          }
        }
      },
      "NISrvRequestGetRestrictions": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetRestrictionsReq"
          }
        }
      },
      "NISrvResponseGetRestrictions": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetRestrictionsRes"
          }
        }
      },
      "NISrvRequestSwitchRestrictionsUsageDetails": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/SwitchRestrictionsUsageDetailsReq"
          }
        }
      },
      "NISrvResponseSwitchRestrictionsUsageDetails": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/SwitchRestrictionsUsageDetailsRes"
          }
        }
      },
      "NISrvRequestRefinanceTransaction": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/RefinanceTransactionReq"
          }
        }
      },
      "NISrvResponseRefinanceTransaction": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/RefinanceTransactionRes"
          }
        }
      },
      "NISrvRequestGetPlanList": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetPlanListReq"
          }
        }
      },
      "NISrvResponseGetPlanList": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetPlanListRes"
          }
        }
      },
      "NISrvRequestGetPlanDetailsByID": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetPlanDetailsByIDReq"
          }
        }
      },
      "NISrvResponseGetPlanDetailsByID": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetPlanDetailsByIDRes"
          }
        }
      },
      "NISrvRequestCardCreate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardCreateReq"
          }
        }
      },
      "NISrvResponseCardCreate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardCreateRes"
          }
        }
      },
      "NISrvRequestClientUpdate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/ClientUpdateReq"
          }
        }
      },
      "NISrvResponseClientUpdate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/ClientUpdateRes"
          }
        }
      },
      "NISrvRequestCardActivation": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardActivationReq"
          }
        }
      },
      "NISrvResponseCardActivation": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardActivationRes"
          }
        }
      },
      "NISrvRequestAccountUpdate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountUpdateReq"
          }
        }
      },
      "NISrvResponseAccountUpdate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountUpdateRes"
          }
        }
      },
      "NISrvRequestLookupCardIdentifier": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/lookupcardidentifierReq"
          }
        }
      },
      "NISrvResponseLookupCardIdentifier": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/lookupcardidentifierRes"
          }
        }
      },
      "NISrvRequestPinTriesCounterReset": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/PinTriesCounterResetReq"
          }
        }
      },
      "NISrvResponsePinTriesCounterReset": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/PinTriesCounterResetRes"
          }
        }
      },
      "NISrvRequestCardReplacement": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardReplacementReq"
          }
        }
      },
      "NISrvResponseCardReplacement": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardReplacementRes"
          }
        }
      },
      "NISrvRequestGetCardTransactions": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetCardTransactionsReq"
          }
        }
      },
      "NISrvResponseGetCardTransactions": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetCardTransactionsRes"
          }
        }
      },
      "NISrvRequestGetAccountTransactions": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetAccountTransactionsReq"
          }
        }
      },
      "NISrvResponseGetAccountTransactions": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetAccountTransactionsRes"
          }
        }
      },
      "NISrvRequestCardStatusChange": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardStatusChangeReq"
          }
        }
      },
      "NISrvResponseCardStatusChange": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardStatusChangeRes"
          }
        }
      },
      "NISrvRequestAccountStatusChange": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountStatusChangeReq"
          }
        }
      },
      "NISrvResponseAccountStatusChange": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountStatusChangeRes"
          }
        }
      },
      "NISrvRequestNotificationService": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/NotificationServiceReq"
          }
        }
      },
      "NISrvResponseNotificationService": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/NotificationServiceRes"
          }
        }
      },
      "NISrvRequestReleasePendingAuth": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/ReleasePendingAuthReq"
          }
        }
      },
      "NISrvResponseReleasePendingAuth": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/ReleasePendingAuthRes"
          }
        }
      },
      "NISrvRequestCardDetailsEnquiry": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardDetailsEnquiryReq"
          }
        }
      },
      "NISrvRequestCardVerificationEnquiry": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardVerificationEnquiryReq"
          }
        }
      },
      "NISrvRequestCardInsuranceProductEnquiry": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardInsuranceProductEnquiryReq"
          }
        }
      },
      "NISrvRequestCardInsuranceProductUpdate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardInsuranceProductUpdateReq"
          }
        }
      },
      "NISrvRequestCardDirectDebit": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardDirectDebitReq"
          }
        }
      },
      "NISrvRequestCardDirectDebitUpdate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardDirectDebitUpdateReq"
          }
        }
      },
      "NISrvRequestCustomerDetails": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CustomerDetailsReq"
          }
        }
      },
      "NISrvResponseCustomerDetails": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CustomerDetailsRes"
          }
        }
      },
      "NISrvRequestCustomerDetailsUpdate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CustomerDetailsUpdateReq"
          }
        }
      },
      "NISrvResponseCustomerDetailsUpdate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CustomerDetailsUpdateRes"
          }
        }
      },
      "NISrvRequestGetListOfCards": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetListOfCardsReq"
          }
        }
      },
      "NISrvResponseGetListOfCards": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetListOfCardsRes"
          }
        }
      },
      "NISrvRequestBalanceTransfer": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BalanceTransferReq"
          }
        }
      },
      "NISrvResponseBalanceTransfer": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BalanceTransferRes"
          }
        }
      },
      "NISrvRequestBalanceConversion": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BalanceConversionReq"
          }
        }
      },
      "NISrvResponseBalanceConversion": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BalanceConversionRes"
          }
        }
      },
      "NISrvRequestLoanonCallQuickCash": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/LoanonCallQuickCashReq"
          }
        }
      },
      "NISrvResponseLoanonCallQuickCash": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/LoanonCallQuickCashRes"
          }
        }
      },
      "NISrvRequestCardList": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardListReq"
          }
        }
      },
      "NISrvResponseCardList": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardListRes"
          }
        }
      },
      "NISrvRequestUpdateLimitUsageDetails": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/UpdateLimitUsageDetailsReq"
          }
        }
      },
      "NISrvResponseUpdateLimitUsageDetails": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/UpdateLimitUsageDetailsRes"
          }
        }
      },
      "NISrvRequestAccountCreate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountCreateReq"
          }
        }
      },
      "NISrvResponseAccountCreate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountCreateRes"
          }
        }
      },
      "NISrvRequestAccountTransfer": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountTransferReq"
          }
        }
      },
      "NISrvResponseAccountTransfer": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountTransferRes"
          }
        }
      },
      "NISrvRequestClientCreate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/ClientCreateReq"
          }
        }
      },
      "NISrvResponseClientCreate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/ClientCreateRes"
          }
        }
      },
      "NISrvResponseCardDetails": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardDetailsRes"
          }
        }
      },
      "NISrvResponseCardVerification": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardVerificationRes"
          }
        }
      },
      "NISrvResponseCardInsuranceProduct": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardInsuranceProductRes"
          }
        }
      },
      "NISrvResponseCardInsuranceProductUpdate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardInsuranceProductUpdateRes"
          }
        }
      },
      "NISrvResponseCardDirectDebit": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardDirectDebitRes"
          }
        }
      },
      "NISrvResponseCardDirectDebitUpdate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardDirectDebitUpdateRes"
          }
        }
      },
      "NISrvRequestCardSetPin": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardSetPinReq"
          }
        }
      },
      "NISrvResponseCardSetPin": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardSetPinRes"
          }
        }
      },
      "NISrvRequestTariffDetails": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/TariffDetailsReq"
          }
        }
      },
      "NISrvResponseTariffDetails": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/TariffDetailsRes"
          }
        }
      },
      "NISrvRequestAccountHierarchyEnquiry": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/AccountHierarchyEnquiryReq"
          }
        }
      },
      "NISrvResponseAccountHierarchyEnquiry": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/AccountHierarchyEnquiryRes"
          }
        }
      },
      "NISrvRequestBulkCardCreate": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/BulkCardCreateReq"
          }
        }
      },
      "NISrvResponseBulkCardCreate": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BulkCardCreateRes"
          }
        }
      },
      "NISrvRequestBulkListOfCards": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/BulkListOfCardsReq"
          }
        }
      },
      "NISrvResponseBulkListOfCards": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BulkListOfCardsRes"
          }
        }
      },
      "NISrvRequestBulkCardSummary": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/BulkCardSummaryReq"
          }
        }
      },
      "NISrvResponseBulkCardSummary": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BulkCardSummaryRes"
          }
        }
      },
      "NISrvRequestBulkMoveCards": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/BulkMoveCardsReq"
          }
        }
      },
      "NISrvResponseBulkMoveCards": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/BulkMoveCardsRes"
          }
        }
      },
      "AccountHierarchyEnquiryReq": {
        "required": [
          "request_account_hierarchy"
        ],
        "type": "object",
        "properties": {
          "request_account_hierarchy": {
            "$ref": "#/components/schemas/request_account_hierarchy"
          }
        }
      },
      "AccountHierarchyEnquiryRes": {
        "required": [
          "response_account_hierarchy"
        ],
        "type": "object",
        "properties": {
          "response_account_hierarchy": {
            "$ref": "#/components/schemas/response_account_hierarchy"
          }
        }
      },
      "BulkCardCreateReq": {
        "required": [
          "request_bulk_card_create"
        ],
        "type": "object",
        "properties": {
          "request_bulk_card_create": {
            "$ref": "#/components/schemas/request_bulk_card_create"
          }
        }
      },
      "BulkCardCreateRes": {
        "required": [
          "response_bulk_card_create"
        ],
        "type": "object",
        "properties": {
          "response_bulk_card_create": {
            "$ref": "#/components/schemas/response_bulk_card_create"
          }
        }
      },
      "BulkListOfCardsReq": {
        "required": [
          "request_bulk_card_list"
        ],
        "type": "object",
        "properties": {
          "request_bulk_card_list": {
            "$ref": "#/components/schemas/request_bulk_card_list"
          }
        }
      },
      "BulkListOfCardsRes": {
        "required": [
          "response_bulk_card_list"
        ],
        "type": "object",
        "properties": {
          "response_bulk_card_list": {
            "$ref": "#/components/schemas/response_bulk_card_list"
          }
        }
      },
      "BulkCardSummaryReq": {
        "required": [
          "request_bulk_card_summary"
        ],
        "type": "object",
        "properties": {
          "request_bulk_card_summary": {
            "$ref": "#/components/schemas/request_bulk_card_summary"
          }
        }
      },
      "BulkCardSummaryRes": {
        "required": [
          "response_bulk_card_summary"
        ],
        "type": "object",
        "properties": {
          "response_bulk_card_summary": {
            "$ref": "#/components/schemas/response_bulk_card_summary"
          }
        }
      },
      "BulkMoveCardsReq": {
        "required": [
          "request_bulk_move_cards"
        ],
        "type": "object",
        "properties": {
          "request_bulk_move_cards": {
            "$ref": "#/components/schemas/request_bulk_move_cards"
          }
        }
      },
      "BulkMoveCardsRes": {
        "required": [
          "response_bulk_move_cards"
        ],
        "type": "object",
        "properties": {
          "response_bulk_move_cards": {
            "$ref": "#/components/schemas/response_bulk_move_cards"
          }
        }
      },
      "request_account_hierarchy": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountHierarchyEnquiryHeader"
          },
          "body": {
            "$ref": "#/components/schemas/AccountHierarchyEnquiryBody"
          }
        }
      },
      "response_account_hierarchy": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountHierarchyEnquiryResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/AccountHierarchyEnquiryResBody"
          }
        }
      },
      "request_bulk_card_create": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkCardCreateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/BulkCardCreateBody"
          }
        }
      },
      "response_bulk_card_create": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkCardCreateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/BulkCardCreateResBody"
          }
        }
      },
      "request_bulk_card_list": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkListOfCardsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/BulkListOfCardsBody"
          }
        }
      },
      "response_bulk_card_list": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkListOfCardsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BulkListOfCardsResBody"
              },
              {
                "$ref": "#/components/schemas/BulkListOfCardsStatusResBody"
              }
            ]
          }
        }
      },
      "request_bulk_card_summary": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkCardSummaryHeader"
          },
          "body": {
            "$ref": "#/components/schemas/BulkCardSummaryBody"
          }
        }
      },
      "response_bulk_card_summary": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkCardSummaryResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/BulkCardSummaryResBody"
          }
        }
      },
      "request_bulk_move_cards": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkMoveCardsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/BulkMoveCardsBody"
          }
        }
      },
      "response_bulk_move_cards": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BulkMoveCardsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "NISrvRequestSwitchMCC": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/SwitchMCCReq"
          }
        }
      },
      "NISrvResponseSwitchMCC": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/SwitchMCCRes"
          }
        }
      },
      "NISrvRequestGetMCCControls": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/GetMCCControlsReq"
          }
        }
      },
      "NISrvResponseGetMCCControls": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/GetMCCControlsRes"
          }
        }
      },
      "NISrvRequestOnlineEmbossing": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/OnlineEmbossingReq"
          }
        }
      },
      "NISrvResponseOnlineEmbossing": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/OnlineEmbossingRes"
          }
        }
      },
      "SwitchMCCReq": {
        "required": [
          "request_enable_disable_mcc"
        ],
        "type": "object",
        "properties": {
          "request_enable_disable_mcc": {
            "$ref": "#/components/schemas/request_enable_disable_mcc"
          }
        }
      },
      "SwitchMCCRes": {
        "required": [
          "response_enable_disable_mcc"
        ],
        "type": "object",
        "properties": {
          "response_enable_disable_mcc": {
            "$ref": "#/components/schemas/response_enable_disable_mcc"
          }
        }
      },
      "GetMCCControlsReq": {
        "required": [
          "request_get_mcc_controls"
        ],
        "type": "object",
        "properties": {
          "request_get_mcc_controls": {
            "$ref": "#/components/schemas/request_get_mcc_controls"
          }
        }
      },
      "GetMCCControlsRes": {
        "required": [
          "response_get_mcc_controls"
        ],
        "type": "object",
        "properties": {
          "response_get_mcc_controls": {
            "$ref": "#/components/schemas/response_get_mcc_controls"
          }
        }
      },
      "OnlineEmbossingReq": {
        "required": [
          "request_online_embossing"
        ],
        "type": "object",
        "properties": {
          "request_online_embossing": {
            "$ref": "#/components/schemas/request_online_embossing"
          }
        }
      },
      "OnlineEmbossingRes": {
        "required": [
          "response_online_embossing"
        ],
        "type": "object",
        "properties": {
          "response_online_embossing": {
            "$ref": "#/components/schemas/response_online_embossing"
          }
        }
      },
      "request_enable_disable_mcc": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/SwitchMCCHeader"
          },
          "body": {
            "$ref": "#/components/schemas/SwitchMCCBody"
          }
        }
      },
      "response_enable_disable_mcc": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/SwitchMCCResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_get_mcc_controls": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetMCCControlsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetMCCControlsBody"
          }
        }
      },
      "response_get_mcc_controls": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetMCCControlsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetMCCControlsResBody"
          }
        }
      },
      "request_online_embossing": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/OnlineEmbossingHeader"
          },
          "body": {
            "$ref": "#/components/schemas/OnlineEmbossingBody"
          }
        }
      },
      "response_online_embossing": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/OnlineEmbossingResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/OnlineEmbossingResBody"
          }
        }
      },
      "TariffDetailsReq": {
        "required": [
          "request_tariff_details"
        ],
        "type": "object",
        "properties": {
          "request_tariff_details": {
            "$ref": "#/components/schemas/request_tariff_details"
          }
        }
      },
      "TariffDetailsRes": {
        "required": [
          "response_tariff_details"
        ],
        "type": "object",
        "properties": {
          "response_tariff_details": {
            "$ref": "#/components/schemas/response_tariff_details"
          }
        }
      },
      "request_tariff_details": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetTariffDetailsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetTariffDetailsBody"
          }
        }
      },
      "response_tariff_details": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetTariffDetailsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetTariffDetailsResBody"
          }
        }
      },
      "ClientCreateReq": {
        "required": [
          "request_client_create"
        ],
        "type": "object",
        "properties": {
          "request_client_create": {
            "$ref": "#/components/schemas/request_client_create"
          }
        }
      },
      "ClientCreateRes": {
        "required": [
          "response_client_create"
        ],
        "type": "object",
        "properties": {
          "response_client_create": {
            "$ref": "#/components/schemas/response_client_create"
          }
        }
      },
      "ClientUpdateReq": {
        "required": [
          "request_client_update"
        ],
        "type": "object",
        "properties": {
          "request_client_update": {
            "$ref": "#/components/schemas/request_client_update"
          }
        }
      },
      "ClientUpdateRes": {
        "required": [
          "response_client_update"
        ],
        "type": "object",
        "properties": {
          "response_client_update": {
            "$ref": "#/components/schemas/response_client_update"
          }
        }
      },
      "AccountCreateReq": {
        "required": [
          "request_account_create"
        ],
        "type": "object",
        "properties": {
          "request_account_create": {
            "$ref": "#/components/schemas/request_account_create"
          }
        }
      },
      "AccountCreateRes": {
        "required": [
          "response_account_create"
        ],
        "type": "object",
        "properties": {
          "response_account_create": {
            "$ref": "#/components/schemas/response_account_create"
          }
        }
      },
      "AccountUpdateReq": {
        "required": [
          "request_account_update"
        ],
        "type": "object",
        "properties": {
          "request_account_update": {
            "$ref": "#/components/schemas/request_account_update"
          }
        }
      },
      "AccountUpdateRes": {
        "required": [
          "response_account_update"
        ],
        "type": "object",
        "properties": {
          "response_account_update": {
            "$ref": "#/components/schemas/response_account_update"
          }
        }
      },
      "AccountTransferReq": {
        "required": [
          "request_account_transfer"
        ],
        "type": "object",
        "properties": {
          "request_account_transfer": {
            "$ref": "#/components/schemas/request_account_transfer"
          }
        }
      },
      "AccountTransferRes": {
        "required": [
          "response_account_transfer"
        ],
        "type": "object",
        "properties": {
          "response_account_transfer": {
            "$ref": "#/components/schemas/response_account_transfer"
          }
        }
      },
      "AccountListReq": {
        "required": [
          "request_list_of_accounts"
        ],
        "type": "object",
        "properties": {
          "request_list_of_accounts": {
            "$ref": "#/components/schemas/request_list_of_accounts"
          }
        }
      },
      "AccountListRes": {
        "required": [
          "response_list_of_accounts"
        ],
        "type": "object",
        "properties": {
          "response_list_of_accounts": {
            "$ref": "#/components/schemas/response_list_of_accounts"
          }
        }
      },
      "CardCreateReq": {
        "required": [
          "request_card_create"
        ],
        "type": "object",
        "properties": {
          "request_card_create": {
            "$ref": "#/components/schemas/request_card_create"
          }
        }
      },
      "CardCreateRes": {
        "required": [
          "response_card_create"
        ],
        "type": "object",
        "properties": {
          "response_card_create": {
            "$ref": "#/components/schemas/response_card_create"
          }
        }
      },
      "CardUpdateReq": {
        "required": [
          "request_card_update"
        ],
        "type": "object",
        "properties": {
          "request_card_update": {
            "$ref": "#/components/schemas/request_card_update"
          }
        }
      },
      "CardUpdateRes": {
        "required": [
          "response_card_update"
        ],
        "type": "object",
        "properties": {
          "response_card_update": {
            "$ref": "#/components/schemas/response_card_update"
          }
        }
      },
      "CardReplacementReq": {
        "required": [
          "request_card_replacement"
        ],
        "type": "object",
        "properties": {
          "request_card_replacement": {
            "$ref": "#/components/schemas/request_card_replacement"
          }
        }
      },
      "CardReplacementRes": {
        "required": [
          "response_card_replacement"
        ],
        "type": "object",
        "properties": {
          "response_card_replacement": {
            "$ref": "#/components/schemas/response_card_replacement"
          }
        }
      },
      "CardListReq": {
        "required": [
          "request_list_of_cards"
        ],
        "type": "object",
        "properties": {
          "request_list_of_cards": {
            "$ref": "#/components/schemas/request_list_of_cards"
          }
        }
      },
      "CardListRes": {
        "required": [
          "response_list_of_cards"
        ],
        "type": "object",
        "properties": {
          "response_list_of_cards": {
            "$ref": "#/components/schemas/response_list_of_cards"
          }
        }
      },
      "GetCVV2Req": {
        "required": [
          "request_get_cvv2"
        ],
        "type": "object",
        "properties": {
          "request_get_cvv2": {
            "$ref": "#/components/schemas/request_get_cvv2"
          }
        }
      },
      "GetCVV2Res": {
        "required": [
          "response_get_cvv2"
        ],
        "type": "object",
        "properties": {
          "response_get_cvv2": {
            "$ref": "#/components/schemas/response_get_cvv2"
          }
        }
      },
      "CardActivationReq": {
        "required": [
          "request_card_activation"
        ],
        "type": "object",
        "properties": {
          "request_card_activation": {
            "$ref": "#/components/schemas/request_card_activation"
          }
        }
      },
      "CardActivationRes": {
        "required": [
          "response_card_activation"
        ],
        "type": "object",
        "properties": {
          "response_card_activation": {
            "$ref": "#/components/schemas/response_card_activation"
          }
        }
      },
      "CardPinChangeReq": {
        "required": [
          "request_card_pin_change"
        ],
        "type": "object",
        "properties": {
          "request_card_pin_change": {
            "$ref": "#/components/schemas/request_card_pin_change"
          }
        }
      },
      "CardPinChangeRes": {
        "required": [
          "response_card_pin_change"
        ],
        "type": "object",
        "properties": {
          "response_card_pin_change": {
            "$ref": "#/components/schemas/response_card_pin_change"
          }
        }
      },
      "CardPinVerifcationReq": {
        "required": [
          "request_card_pin_verification"
        ],
        "type": "object",
        "properties": {
          "request_card_pin_verification": {
            "$ref": "#/components/schemas/request_card_pin_verification"
          }
        }
      },
      "CardPinVerifcationRes": {
        "required": [
          "response_card_pin_verification"
        ],
        "type": "object",
        "properties": {
          "response_card_pin_verification": {
            "$ref": "#/components/schemas/response_card_pin_verification"
          }
        }
      },
      "CardSetPinReq": {
        "required": [
          "request_card_set_pin"
        ],
        "type": "object",
        "properties": {
          "request_card_set_pin": {
            "$ref": "#/components/schemas/request_card_set_pin"
          }
        }
      },
      "CardSetPinRes": {
        "required": [
          "response_card_set_pin"
        ],
        "type": "object",
        "properties": {
          "response_card_set_pin": {
            "$ref": "#/components/schemas/response_card_set_pin"
          }
        }
      },
      "PinTriesCounterResetReq": {
        "required": [
          "request_pin_counter_reset"
        ],
        "type": "object",
        "properties": {
          "request_pin_counter_reset": {
            "$ref": "#/components/schemas/request_pin_counter_reset"
          }
        }
      },
      "PinTriesCounterResetRes": {
        "required": [
          "response_pin_counter_reset"
        ],
        "type": "object",
        "properties": {
          "response_pin_counter_reset": {
            "$ref": "#/components/schemas/response_pin_counter_reset"
          }
        }
      },
      "CardStatusChangeReq": {
        "required": [
          "request_card_status_change"
        ],
        "type": "object",
        "properties": {
          "request_card_status_change": {
            "$ref": "#/components/schemas/request_card_status_change"
          }
        }
      },
      "CardStatusChangeRes": {
        "required": [
          "response_card_status_change"
        ],
        "type": "object",
        "properties": {
          "response_card_status_change": {
            "$ref": "#/components/schemas/response_card_status_change"
          }
        }
      },
      "AccountStatusChangeReq": {
        "required": [
          "request_account_status_change"
        ],
        "type": "object",
        "properties": {
          "request_account_status_change": {
            "$ref": "#/components/schemas/request_account_status_change"
          }
        }
      },
      "AccountStatusChangeRes": {
        "required": [
          "response_account_status_change"
        ],
        "type": "object",
        "properties": {
          "response_account_status_change": {
            "$ref": "#/components/schemas/response_account_status_change"
          }
        }
      },
      "NotificationServiceReq": {
        "required": [
          "request_notification_service_change"
        ],
        "type": "object",
        "properties": {
          "request_notification_service_change": {
            "$ref": "#/components/schemas/request_notification_service_change"
          }
        }
      },
      "NotificationServiceRes": {
        "required": [
          "response_notification_service_change"
        ],
        "type": "object",
        "properties": {
          "response_notification_service_change": {
            "$ref": "#/components/schemas/response_notification_service_change"
          }
        }
      },
      "ReleasePendingAuthReq": {
        "required": [
          "request_release_pending_authorization"
        ],
        "type": "object",
        "properties": {
          "request_release_pending_authorization": {
            "$ref": "#/components/schemas/request_release_pending_authorization"
          }
        }
      },
      "ReleasePendingAuthRes": {
        "required": [
          "response_release_pending_authorization"
        ],
        "type": "object",
        "properties": {
          "response_release_pending_authorization": {
            "$ref": "#/components/schemas/response_release_pending_authorization"
          }
        }
      },
      "lookupcardidentifierReq": {
        "required": [
          "request_lookup_card_identifier"
        ],
        "type": "object",
        "properties": {
          "request_lookup_card_identifier": {
            "$ref": "#/components/schemas/request_lookup_card_identifier"
          }
        }
      },
      "lookupcardidentifierRes": {
        "required": [
          "response_lookup_card_identifier"
        ],
        "type": "object",
        "properties": {
          "response_lookup_card_identifier": {
            "$ref": "#/components/schemas/response_lookup_card_identifier"
          }
        }
      },
      "CardDetailsEnquiryReq": {
        "required": [
          "request_card_details"
        ],
        "type": "object",
        "properties": {
          "request_card_details": {
            "$ref": "#/components/schemas/request_card_details"
          }
        }
      },
      "CardDetailsRes": {
        "required": [
          "response_card_details"
        ],
        "type": "object",
        "properties": {
          "response_card_details": {
            "$ref": "#/components/schemas/response_card_details"
          }
        }
      },
      "CardVerificationEnquiryReq": {
        "required": [
          "request_card_verification"
        ],
        "type": "object",
        "properties": {
          "request_card_details": {
            "$ref": "#/components/schemas/request_card_verification"
          }
        }
      },
      "CardVerificationRes": {
        "required": [
          "response_card_verification"
        ],
        "type": "object",
        "properties": {
          "response_card_verification": {
            "$ref": "#/components/schemas/response_card_verification"
          }
        }
      },
      "CardInsuranceProductEnquiryReq": {
        "required": [
          "request_card_insurance_product"
        ],
        "type": "object",
        "properties": {
          "request_card_insurance_product": {
            "$ref": "#/components/schemas/request_card_insurance_product"
          }
        }
      },
      "CardInsuranceProductRes": {
        "required": [
          "response_card_insurance_product"
        ],
        "type": "object",
        "properties": {
          "response_card_insurance_product": {
            "$ref": "#/components/schemas/response_card_insurance_product"
          }
        }
      },
      "CardInsuranceProductUpdateReq": {
        "required": [
          "request_card_insurance_product_update"
        ],
        "type": "object",
        "properties": {
          "request_card_insurance_product_update": {
            "$ref": "#/components/schemas/request_card_insurance_product_update"
          }
        }
      },
      "CardInsuranceProductUpdateRes": {
        "required": [
          "response_card_insurance_product_update"
        ],
        "type": "object",
        "properties": {
          "response_card_insurance_product_update": {
            "$ref": "#/components/schemas/response_card_insurance_product_update"
          }
        }
      },
      "CardDirectDebitReq": {
        "required": [
          "request_card_direct_debit"
        ],
        "type": "object",
        "properties": {
          "request_card_direct_debit": {
            "$ref": "#/components/schemas/request_card_direct_debit"
          }
        }
      },
      "CardDirectDebitRes": {
        "required": [
          "response_card_direct_debit"
        ],
        "type": "object",
        "properties": {
          "response_card_direct_debit": {
            "$ref": "#/components/schemas/response_card_direct_debit"
          }
        }
      },
      "CardDirectDebitUpdateReq": {
        "required": [
          "request_card_direct_debit_update"
        ],
        "type": "object",
        "properties": {
          "request_card_direct_debit_update": {
            "$ref": "#/components/schemas/request_card_direct_debit_update"
          }
        }
      },
      "CardDirectDebitUpdateRes": {
        "required": [
          "response_card_direct_debit_update"
        ],
        "type": "object",
        "properties": {
          "response_card_direct_debit_update": {
            "$ref": "#/components/schemas/response_card_direct_debit_update"
          }
        }
      },
      "CardBalancesReq": {
        "required": [
          "request_card_balance_enquiry"
        ],
        "type": "object",
        "properties": {
          "request_card_balance_enquiry": {
            "$ref": "#/components/schemas/request_card_balance_enquiry"
          }
        }
      },
      "CardbalanceEnquiryRes": {
        "required": [
          "response_card_balance_enquiry"
        ],
        "type": "object",
        "properties": {
          "response_card_balance_enquiry": {
            "$ref": "#/components/schemas/response_card_balance_enquiry"
          }
        }
      },
      "AccountBalancesReq": {
        "required": [
          "request_account_balance_enquiry"
        ],
        "type": "object",
        "properties": {
          "request_account_balance_enquiry": {
            "$ref": "#/components/schemas/request_account_balance_enquiry"
          }
        }
      },
      "AccountbalanceEnquiryRes": {
        "required": [
          "response_Account_balance_enquiry"
        ],
        "type": "object",
        "properties": {
          "response_Account_balance_enquiry": {
            "$ref": "#/components/schemas/response_Account_balance_enquiry"
          }
        }
      },
      "CardStatementSummaryReq": {
        "required": [
          "request_card_statement_summary"
        ],
        "type": "object",
        "properties": {
          "request_card_statement_summary": {
            "$ref": "#/components/schemas/request_card_statement_summary"
          }
        }
      },
      "CardStatementSummaryRes": {
        "required": [
          "response_card_statement_summary"
        ],
        "type": "object",
        "properties": {
          "response_card_statement_summary": {
            "$ref": "#/components/schemas/response_card_statement_summary"
          }
        }
      },
      "GetCardTransactionsReq": {
        "required": [
          "request_get_card_transactions"
        ],
        "type": "object",
        "properties": {
          "request_get_card_transactions": {
            "$ref": "#/components/schemas/request_get_card_transactions"
          }
        }
      },
      "GetCardTransactionsRes": {
        "required": [
          "response_get_card_transactions"
        ],
        "type": "object",
        "properties": {
          "response_get_card_transactions": {
            "$ref": "#/components/schemas/response_get_card_transactions"
          }
        }
      },
      "GetAccountTransactionsReq": {
        "required": [
          "request_get_account_transactions"
        ],
        "type": "object",
        "properties": {
          "request_get_account_transactions": {
            "$ref": "#/components/schemas/request_get_account_transactions"
          }
        }
      },
      "GetAccountTransactionsRes": {
        "required": [
          "response_get_account_transactions"
        ],
        "type": "object",
        "properties": {
          "response_get_account_transactions": {
            "$ref": "#/components/schemas/response_get_account_transactions"
          }
        }
      },
      "GetListOfCardsReq": {
        "required": [
          "request_list_of_cards"
        ],
        "type": "object",
        "properties": {
          "request_list_of_cards": {
            "$ref": "#/components/schemas/request_list_of_cards"
          }
        }
      },
      "GetListOfCardsRes": {
        "required": [
          "response_list_of_cards"
        ],
        "type": "object",
        "properties": {
          "response_list_of_cards": {
            "$ref": "#/components/schemas/response_list_of_cards"
          }
        }
      },
      "CustomerDetailsReq": {
        "required": [
          "request_generic_customer_details"
        ],
        "type": "object",
        "properties": {
          "request_generic_customer_details": {
            "$ref": "#/components/schemas/request_generic_customer_details"
          }
        }
      },
      "CustomerDetailsRes": {
        "required": [
          "response_generic_customer_details"
        ],
        "type": "object",
        "properties": {
          "response_generic_customer_details": {
            "$ref": "#/components/schemas/response_generic_customer_details"
          }
        }
      },
      "CustomerDetailsUpdateReq": {
        "required": [
          "request_generic_customer_details_update"
        ],
        "type": "object",
        "properties": {
          "request_generic_customer_details_update": {
            "$ref": "#/components/schemas/request_generic_customer_details_update"
          }
        }
      },
      "CustomerDetailsUpdateRes": {
        "required": [
          "response_generic_customer_details_update"
        ],
        "type": "object",
        "properties": {
          "response_generic_customer_details_update": {
            "$ref": "#/components/schemas/response_generic_customer_details_update"
          }
        }
      },
      "CardTransactionsReq": {
        "required": [
          "request_card_transaction"
        ],
        "type": "object",
        "properties": {
          "request_card_transaction": {
            "$ref": "#/components/schemas/request_card_transaction"
          }
        }
      },
      "CardTransactionsRes": {
        "required": [
          "response_card_transaction"
        ],
        "type": "object",
        "properties": {
          "response_card_transaction": {
            "$ref": "#/components/schemas/response_card_transaction"
          }
        }
      },
      "AccountTransactionsReq": {
        "required": [
          "request_account_transaction"
        ],
        "type": "object",
        "properties": {
          "request_account_transaction": {
            "$ref": "#/components/schemas/request_account_transaction"
          }
        }
      },
      "AccountTransactionsRes": {
        "required": [
          "response_account_transaction"
        ],
        "type": "object",
        "properties": {
          "response_account_transaction": {
            "$ref": "#/components/schemas/response_account_transaction"
          }
        }
      },
      "P2PTransferReq": {
        "required": [
          "request_P2P_transfer"
        ],
        "type": "object",
        "properties": {
          "request_P2P_transfer": {
            "$ref": "#/components/schemas/request_P2P_transfer"
          }
        }
      },
      "P2PTransferRes": {
        "required": [
          "response_P2P_transfer"
        ],
        "type": "object",
        "properties": {
          "response_P2P_transfer": {
            "$ref": "#/components/schemas/response_P2P_transfer"
          }
        }
      },
      "CardLimitChangeReq": {
        "required": [
          "request_card_limit_change"
        ],
        "type": "object",
        "properties": {
          "request_card_limit_change": {
            "$ref": "#/components/schemas/request_card_limit_change"
          }
        }
      },
      "CardLimitChangeRes": {
        "required": [
          "response_card_limit_change"
        ],
        "type": "object",
        "properties": {
          "response_card_limit_change": {
            "$ref": "#/components/schemas/response_card_limit_change"
          }
        }
      },
      "BalanceTransferReq": {
        "required": [
          "request_balance_transfer"
        ],
        "type": "object",
        "properties": {
          "request_balance_transfer": {
            "$ref": "#/components/schemas/request_balance_transfer"
          }
        }
      },
      "BalanceTransferRes": {
        "required": [
          "response_balance_transfer"
        ],
        "type": "object",
        "properties": {
          "response_balance_transfer": {
            "$ref": "#/components/schemas/response_balance_transfer"
          }
        }
      },
      "BalanceConversionReq": {
        "required": [
          "request_balance_conversion"
        ],
        "type": "object",
        "properties": {
          "request_balance_conversion": {
            "$ref": "#/components/schemas/request_balance_conversion"
          }
        }
      },
      "BalanceConversionRes": {
        "required": [
          "response_balance_conversion"
        ],
        "type": "object",
        "properties": {
          "response_balance_conversion": {
            "$ref": "#/components/schemas/response_balance_conversion"
          }
        }
      },
      "LoanonCallQuickCashReq": {
        "required": [
          "request_loanoncall_quickcash"
        ],
        "type": "object",
        "properties": {
          "request_loanoncall_quickcash": {
            "$ref": "#/components/schemas/request_loanoncall_quickcash"
          }
        }
      },
      "LoanonCallQuickCashRes": {
        "required": [
          "response_loanoncall_quickcash"
        ],
        "type": "object",
        "properties": {
          "response_loanoncall_quickcash": {
            "$ref": "#/components/schemas/response_loanoncall_quickcash"
          }
        }
      },
      "GetPlanListReq": {
        "required": [
          "request_get_plan_list"
        ],
        "type": "object",
        "properties": {
          "request_get_plan_list": {
            "$ref": "#/components/schemas/request_get_plan_list"
          }
        }
      },
      "GetPlanListRes": {
        "required": [
          "response_get_plan_list"
        ],
        "type": "object",
        "properties": {
          "response_get_plan_list": {
            "$ref": "#/components/schemas/response_get_plan_list"
          }
        }
      },
      "GetPlanDetailsByIDReq": {
        "required": [
          "request_get_plan_details_byid"
        ],
        "type": "object",
        "properties": {
          "request_get_plan_details_byid": {
            "$ref": "#/components/schemas/request_get_plan_details_byid"
          }
        }
      },
      "GetPlanDetailsByIDRes": {
        "required": [
          "response_get_details_byid"
        ],
        "type": "object",
        "properties": {
          "response_get_details_byid": {
            "$ref": "#/components/schemas/response_get_plan_details_byid"
          }
        }
      },
      "GetEligiblePlansReq": {
        "required": [
          "request_get_eligible_plans"
        ],
        "type": "object",
        "properties": {
          "request_get_eligible_plans": {
            "$ref": "#/components/schemas/request_get_eligible_plans"
          }
        }
      },
      "GetEligiblePlansRes": {
        "required": [
          "response_get_eligible_plans"
        ],
        "type": "object",
        "properties": {
          "response_get_eligible_plans": {
            "$ref": "#/components/schemas/response_get_eligible_plans"
          }
        }
      },
      "GetLimitUsageDetailsReq": {
        "required": [
          "request_get_limiter_usage_details"
        ],
        "type": "object",
        "properties": {
          "request_get_limiter_usage_details": {
            "$ref": "#/components/schemas/request_get_limiter_usage_details"
          }
        }
      },
      "GetLimitUsageDetailsRes": {
        "required": [
          "response_get_limiter_usage_details"
        ],
        "type": "object",
        "properties": {
          "response_get_limiter_usage_details": {
            "$ref": "#/components/schemas/response_get_limiter_usage_details"
          }
        }
      },
      "GetRestrictionsReq": {
        "required": [
          "request_get_restriction_usage_details"
        ],
        "type": "object",
        "properties": {
          "request_get_restriction_usage_details": {
            "$ref": "#/components/schemas/request_get_restrictions"
          }
        }
      },
      "GetRestrictionsRes": {
        "required": [
          "response_get_restriction_usage_details"
        ],
        "type": "object",
        "properties": {
          "response_get_restriction_usage_details": {
            "$ref": "#/components/schemas/response_get_restrictions"
          }
        }
      },
      "SwitchRestrictionsUsageDetailsReq": {
        "required": [
          "request_enable_disable_restriction"
        ],
        "type": "object",
        "properties": {
          "request_enable_disable_restriction": {
            "$ref": "#/components/schemas/request_switch_restrictions_usage_details"
          }
        }
      },
      "SwitchRestrictionsUsageDetailsRes": {
        "required": [
          "response_enable_disable_restriction"
        ],
        "type": "object",
        "properties": {
          "response_enable_disable_restriction": {
            "$ref": "#/components/schemas/response_switch_restrictions_usage_details"
          }
        }
      },
      "RefinanceTransactionReq": {
        "required": [
          "request_refinance_transaction"
        ],
        "type": "object",
        "properties": {
          "request_refinance_transaction": {
            "$ref": "#/components/schemas/request_refinance_transaction"
          }
        }
      },
      "RefinanceTransactionRes": {
        "required": [
          "response_refinance_transaction"
        ],
        "type": "object",
        "properties": {
          "response_refinance_transaction": {
            "$ref": "#/components/schemas/response_refinance_transaction"
          }
        }
      },
      "UpdateLimitUsageDetailsReq": {
        "required": [
          "request_update_usage_limiter"
        ],
        "type": "object",
        "properties": {
          "request_update_usage_limiter": {
            "$ref": "#/components/schemas/request_update_limiter_usage_details"
          }
        }
      },
      "UpdateLimitUsageDetailsRes": {
        "required": [
          "respons_update_usage_limiter"
        ],
        "type": "object",
        "properties": {
          "respons_update_usage_limiter": {
            "$ref": "#/components/schemas/response_update_limiter_usage_details"
          }
        }
      },
      "request_card_limit_change": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardLimitChangeHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardLimitChangeBody"
          }
        }
      },
      "response_card_limit_change": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardLimitChangeResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_pin_verification": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardPinverficationHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardPinverficationBody"
          }
        }
      },
      "response_card_pin_verification": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardPinverficationResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_pin_change": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardPinChangeHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardPinChangeBody"
          }
        }
      },
      "response_card_pin_change": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardPinChangeResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_balance_transfer": {
        "required": [
          "header",
          "body"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BalanceTransferHeader"
          },
          "body": {
            "$ref": "#/components/schemas/BalanceTransferBody"
          }
        }
      },
      "response_balance_transfer": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BalanceTransferResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_balance_conversion": {
        "required": [
          "header",
          "body"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BalanceConversionHeader"
          },
          "body": {
            "$ref": "#/components/schemas/BalanceConversionBody"
          }
        }
      },
      "response_balance_conversion": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BalanceConversionResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_loanoncall_quickcash": {
        "required": [
          "header",
          "body"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/LoanonCallQuickCashHeader"
          },
          "body": {
            "$ref": "#/components/schemas/LoanonCallQuickCashBody"
          }
        }
      },
      "response_loanoncall_quickcash": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/LoanonCallQuickCashResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_get_cvv2": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/getCvv2Header"
          },
          "body": {
            "$ref": "#/components/schemas/getCvv2Body"
          }
        }
      },
      "response_get_cvv2": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/getCvv2ResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/getCvv2ResBody"
          }
        }
      },
      "request_get_eligible_plans": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetEligiblePlansHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetEligiblePlansBody"
          }
        }
      },
      "response_get_eligible_plans": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetEligiblePlansResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetEligiblePlansResBody"
          }
        }
      },
      "request_card_transaction": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardTransactionsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardTransactionsBody"
          }
        }
      },
      "response_card_transaction": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardTransactionsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardTransactionsResBody"
          }
        }
      },
      "request_account_transaction": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountTransactionsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/AccountTransactionsBody"
          }
        }
      },
      "response_account_transaction": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountTransactionsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/AccountTransactionsResBody"
          }
        }
      },
      "request_P2P_transfer": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/P2PTransferHeader"
          },
          "body": {
            "$ref": "#/components/schemas/P2PTransferBody"
          }
        }
      },
      "response_P2P_transfer": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/P2PTransferResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/P2PTransferResBody"
          }
        }
      },
      "request_card_balance_enquiry": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardBalanceHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardBalanceBody"
          }
        }
      },
      "response_card_balance_enquiry": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardBalancesResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardBalancesResBody"
          }
        }
      },
      "request_account_balance_enquiry": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountBalanceHeader"
          },
          "body": {
            "$ref": "#/components/schemas/AccountBalanceBody"
          }
        }
      },
      "response_Account_balance_enquiry": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountBalancesResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/AccountBalancesResBody"
          }
        }
      },
      "request_card_statement_summary": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardStatementSummaryHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardStatementSummaryBody"
          }
        }
      },
      "response_card_statement_summary": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardStatementSummaryResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardStatementSummaryResBody"
          }
        }
      },
      "request_card_update": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardUpdateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardUpdateBody"
          }
        }
      },
      "response_card_update": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardUpdateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardUpdateResBody"
          }
        }
      },
      "request_get_limiter_usage_details": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetLimitUsageDetailsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetLimitUsageDetailsBody"
          }
        }
      },
      "response_get_limiter_usage_details": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetLimitUsageDetailsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetLimitUsageDetailsResBody"
          }
        }
      },
      "request_update_limiter_usage_details": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/UpdateLimitUsageDetailsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/UpdateLimitUsageDetailsBody"
          }
        }
      },
      "response_update_limiter_usage_details": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/UpdateLimitUsageDetailsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_get_restrictions": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetRestrictionsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetRestrictionsBody"
          }
        }
      },
      "response_get_restrictions": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetRestrictionsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetRestrictionsResBody"
          }
        }
      },
      "request_switch_restrictions_usage_details": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/SwitchRestrictionsUsageDetailsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/SwitchRestrictionsUsageDetailsBody"
          }
        }
      },
      "response_switch_restrictions_usage_details": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/SwitchRestrictionsUsageDetailsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_lookup_card_identifier": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/LookupCardIdentifierHeader"
          },
          "body": {
            "$ref": "#/components/schemas/LookupCardIdentifierBody"
          }
        }
      },
      "response_lookup_card_identifier": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/LookupCardIdentifierResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/LookupCardIdentifierResBody"
          }
        }
      },
      "request_refinance_transaction": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/RefinanceTransactionHeader"
          },
          "body": {
            "$ref": "#/components/schemas/RefinanceTransactionBody"
          }
        }
      },
      "response_refinance_transaction": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/RefinanceTransactionResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_create": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardCreateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardCreateBody"
          }
        }
      },
      "response_card_create": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardCreateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardCreateResBody"
          }
        }
      },
      "request_account_update": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountUpdateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/AccountUpdateBody"
          }
        }
      },
      "response_account_update": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountUpdateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/AccountUpdateResBody"
          }
        }
      },
      "request_client_update": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ClientUpdateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/ClientUpdateBody"
          }
        }
      },
      "response_client_update": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ClientUpdateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/ClientUpdateResBody"
          }
        }
      },
      "request_card_activation": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardActivationHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardActivationBody"
          }
        }
      },
      "response_card_activation": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardActivationResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_status_change": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardStatusChangeHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardStatusChangeBody"
          }
        }
      },
      "response_card_status_change": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardStatusChangeResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_account_status_change": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountStatusChangeHeader"
          },
          "body": {
            "$ref": "#/components/schemas/AccountStatusChangeBody"
          }
        }
      },
      "response_account_status_change": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountStatusChangeResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_notification_service_change": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/NotificationServiceHeader"
          },
          "body": {
            "$ref": "#/components/schemas/NotificationServiceBody"
          }
        }
      },
      "response_notification_service_change": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/NotificationServiceResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_release_pending_authorization": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ReleasePendingAuthHeader"
          },
          "body": {
            "$ref": "#/components/schemas/ReleasePendingAuthBody"
          }
        }
      },
      "response_release_pending_authorization": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ReleasePendingAuthResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_replacement": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardReplacementHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardReplacementBody"
          }
        }
      },
      "response_card_replacement": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardReplacementResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardReplacementResBody"
          }
        }
      },
      "request_pin_counter_reset": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/PinTriesCounterResetHeader"
          },
          "body": {
            "$ref": "#/components/schemas/PinTriesCounterResetBody"
          }
        }
      },
      "response_pin_counter_reset": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/PinTriesCounterResetResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_list_of_accounts": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetListOfAccountsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetListOfAccountsBody"
          }
        }
      },
      "response_list_of_accounts": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetListOfAccountsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetListOfAccountsResBody"
          }
        }
      },
      "request_generic_customer_details": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CustomerDetailsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CustomerDetailsBody"
          }
        }
      },
      "response_generic_customer_details": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CustomerDetailsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CustomerDetailsResBody"
          }
        }
      },
      "request_generic_customer_details_update": {
        "required": [
          "header",
          "body"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CustomerDetailsUpdateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CustomerDetailsUpdateBody"
          }
        }
      },
      "response_generic_customer_details_update": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CustomerDetailsUpdateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_details": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardDetailsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardDetailsEnquiryBody"
          }
        }
      },
      "response_card_details": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardDetailsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardDetailsResBody"
          }
        }
      },
      "request_card_verification": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardVerificationHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardVerificationBody"
          }
        }
      },
      "response_card_verification": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardVerificationResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_insurance_product": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardInsuranceProductHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardInsuranceProductBody"
          }
        }
      },
      "response_card_insurance_product": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardInsuranceProductResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardInsuranceProductResBody"
          }
        }
      },
      "request_card_insurance_product_update": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardInsuranceProductUpdateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardInsuranceProductUpdateBody"
          }
        }
      },
      "response_card_insurance_product_update": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardInsuranceProductUpdateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_direct_debit": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardDirectDebitHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardDirectDebitBody"
          }
        }
      },
      "response_card_direct_debit": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardDirectDebitResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardDirectDebitResBody"
          }
        }
      },
      "request_card_direct_debit_update": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardDirectDebitUpdateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardDirectDebitUpdateBody"
          }
        }
      },
      "response_card_direct_debit_update": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardDirectDebitUpdateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_client_create": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ClientCreateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/ClientCreateBody"
          }
        }
      },
      "response_client_create": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ClientCreateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/ClientCreateResBody"
          }
        }
      },
      "request_account_create": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountCreateHeader"
          },
          "body": {
            "$ref": "#/components/schemas/AccountCreateBody"
          }
        }
      },
      "response_account_create": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountCreateResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/AccountCreateResBody"
          }
        }
      },
      "request_account_transfer": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountTransferHeader"
          },
          "body": {
            "$ref": "#/components/schemas/AccountTransferBody"
          }
        }
      },
      "response_account_transfer": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/AccountTransferResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_card_set_pin": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardSetPinHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardSetPinBody"
          }
        }
      },
      "response_card_set_pin": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardSetPinResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          }
        }
      },
      "request_get_card_transactions": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetCardTransactionsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetCardTransactionsBody"
          }
        }
      },
      "response_get_card_transactions": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetCardTransactionsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetCardTransactionsResBody"
          }
        }
      },
      "request_get_account_transactions": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetAccountTransactionsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetAccountTransactionsBody"
          }
        }
      },
      "response_get_account_transactions": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetAccountTransactionsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetAccountTransactionsResBody"
          }
        }
      },
      "request_list_of_cards": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetListOfCardsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetListOfCardsBody"
          }
        }
      },
      "response_list_of_cards": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetListOfCardsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetListOfCardsResBody"
          }
        }
      },
      "request_get_plan_list": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetPlanListHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetPlanListBody"
          }
        }
      },
      "response_get_plan_list": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetPlanListResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetPlanListResBody"
          }
        }
      },
      "request_get_plan_details_byid": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetPlanDetailsByIDHeader"
          },
          "body": {
            "$ref": "#/components/schemas/GetPlanDetailsByIDBody"
          }
        }
      },
      "response_get_plan_details_byid": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/GetPlanDetailsByIDResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/GetPlanDetailsByIDResBody"
          }
        }
      },
      "ClientCreateHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CLIENT_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CLIENT_CREATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "ClientCreateBody": {
        "required": [
          "customer_id",
          "bank_code",
          "card_name",
          "card_type"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique identifier of the client. The value should be unique for each transaction, else the API will be errored out with error message - â€œDuplicate client numberâ€.\n\n100000027 is sample value for reference please use different values for testing."
          },
          "bank_code": {
            "type": "string",
            "example": "982",
            "minLength": 1,
            "maxLength": 3,
            "description": "Bank code is Unique Id 3 digit number for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ â€œ982â€ is used."
          },
          "external_client_number": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "This is additional unique identifier for the client."
          },
          "card_name": {
            "type": "string",
            "example": "JAMES ROBERT",
            "minLength": 1,
            "maxLength": 21,
            "description": "Card embossing name defined on client level should be in Upper case"
          },
          "card_type": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 7,
            "description": "Informative value to the request, does not have any functional impact, the value can be PREPAID/CREDIT/DEBIT "
          },
          "personal_details": {
            "required": [
              "first_name",
              "last_name",
              "date_of_birth"
            ],
            "properties": {
              "gender": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 6,
                "description": "Gender of the client. \nThe given options are -\nM: Male \nF: Female \nN: Not specified."
              },
              "title": {
                "type": "string",
                "example": "MR",
                "minLength": 1,
                "maxLength": 4,
                "description": "The Title of the client. The expected options are -\nMR, MRS, MISS, MS, DR, Shaikh, Shaikha"
              },
              "first_name": {
                "type": "string",
                "example": "James",
                "minLength": 1,
                "maxLength": 255,
                "description": "First Name of the client"
              },
              "last_name": {
                "type": "string",
                "example": "Robert",
                "minLength": 1,
                "maxLength": 255,
                "description": "Last Name of the client"
              },
              "middle_name": {
                "type": "string",
                "example": "Ivich",
                "minLength": 1,
                "maxLength": 255,
                "description": "Middle Name of the client"
              },
              "citizenship": {
                "type": "string",
                "example": "ARE",
                "minLength": 1,
                "maxLength": 3,
                "description": "Citizenship of the client"
              },
              "marital_status": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 18,
                "description": "Marital status of the client\n Expected values are - \n S: Single, \n M: Married, \n D: Divorced, \n X: Misc., \n W: Widow"
              },
              "date_of_birth": {
                "type": "string",
                "example": "1955-08-25",
                "minLength": 1,
                "maxLength": 15,
                "description": "Birth Date of the client in the following format yyyy-mm-dd"
              },
              "place_of_birth": {
                "type": "string",
                "example": "Dubai",
                "minLength": 1,
                "maxLength": 255,
                "description": "Birth place of the client"
              },
              "language": {
                "type": "string",
                "example": "ENG",
                "minLength": 1,
                "maxLength": 3,
                "description": "This defines the language in which the user would like to recieve 3D secure OTP or any transactional notifications. By default notifications will be sent in English language. The value should be provided in ISO language format."
              },
              "security_name": {
                "type": "string",
                "example": "Tima",
                "minLength": 1,
                "maxLength": 255,
                "description": "This field is used by Fraud monitoring agents to validate cardholder's verification on the call. This is not mandatory for issuers who are not using Fraud monitoring service"
              }
            },
            "type": "object"
          },
          "contact_details": {
            "required": [
              "mobile_phone"
            ],
            "properties": {
              "home_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Home phone number of the client, its recommended to pass the value with country code"
              },
              "work_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Work phone number of the client, its recommended to pass the value with country code"
              },
              "mobile_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Mobile phone of the client, its recommended to pass the value with country code"
              },
              "email": {
                "type": "string",
                "example": "James.Robert@network.global",
                "minLength": 1,
                "maxLength": 255,
                "description": "Valid email address of the client"
              }
            },
            "type": "object"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/addresses_clientcreate"
            }
          },
          "identity_proof_document": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/identity_proof_document"
            }
          },
          "supplementary_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/supplementary_documents"
            }
          },
          "employment_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/employment_details"
            }
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_client_create"
            }
          }
        }
      },
      "custom_fields_client_create": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "client_type",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag"
          },
          "value": {
            "type": "string",
            "example": "CLIENT_PRIV",
            "minLength": 1,
            "maxLength": 128,
            "description": "Tag value"
          }
        }
      },
      "addresses_clientcreate": {
        "required": [
          "address_type",
          "address_line_1",
          "city",
          "country"
        ],
        "type": "object",
        "properties": {
          "address_type": {
            "type": "string",
            "example": "PERMANENT",
            "minLength": 1,
            "maxLength": 20,
            "description": "The type of the address, just like multiple phone number types, we can have multiple addresses type . Ex PERMANENT/PRESENT/WORK/HOME"
          },
          "address_line_1": {
            "type": "string",
            "example": "Al Mahata Towers",
            "minLength": 1,
            "maxLength": 255,
            "description": "Building Name of the address"
          },
          "address_line_2": {
            "type": "string",
            "example": "LandLord",
            "minLength": 1,
            "maxLength": 255,
            "description": "This defines wheather the address belongs to the Landlord or the Tenant."
          },
          "address_line_3": {
            "type": "string",
            "example": "House no - 1105",
            "minLength": 1,
            "maxLength": 255,
            "description": "House Name or House Number of the address"
          },
          "address_line_4": {
            "type": "string",
            "example": "Al Qasmia",
            "minLength": 1,
            "maxLength": 255,
            "description": "Street Name of the address"
          },
          "email": {
            "type": "string",
            "example": "James.Robert@network.global",
            "minLength": 1,
            "maxLength": 255,
            "description": "Valid email address of the client"
          },
          "phone": {
            "type": "string",
            "example": 919702310992,
            "minLength": 1,
            "maxLength": 32,
            "description": "Phone number"
          },
          "city": {
            "type": "string",
            "example": "Dubai",
            "minLength": 1,
            "maxLength": 255,
            "description": "City name"
          },
          "country": {
            "type": "string",
            "example": "ARE",
            "minLength": 1,
            "maxLength": 255,
            "description": "Country Code Ex SAU"
          },
          "zip": {
            "type": "string",
            "example": "24537",
            "minLength": 1,
            "maxLength": 32,
            "description": "Zip Code"
          },
          "state": {
            "type": "string",
            "example": "Dubai",
            "minLength": 1,
            "maxLength": 32,
            "description": "State"
          }
        }
      },
      "ClientCreateResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CLIENT_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_CLIENT_CREATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "ClientCreateResBody": {
        "required": [
          "customer_id",
          "bank_code",
          "card_name"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "bank_code": {
            "type": "string",
            "example": "982",
            "minLength": 1,
            "maxLength": 3,
            "description": "Bank code is Unique Id 3 digit number for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ â€œ982â€ is used"
          },
          "external_client_number": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "additional identifier for the client that is generated by FI system"
          },
          "card_name": {
            "type": "string",
            "example": "JAMES ROBERT",
            "minLength": 1,
            "maxLength": 21,
            "description": "Card embossing name defined on client level (Upper case)"
          },
          "personal_details": {
            "required": [
              "first_name",
              "last_name",
              "date_of_birth",
              "citizenship"
            ],
            "properties": {
              "gender": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 6,
                "description": "Gender of the client. \nThe given options are -\nM: Male \nF: Female \nN: Not specified."
              },
              "title": {
                "type": "string",
                "example": "Mr",
                "minLength": 1,
                "maxLength": 4,
                "description": "The Title of the client. The expected options are -\nMR, MRS, MISS, MS, DR, Shaikh, Shaikha"
              },
              "first_name": {
                "type": "string",
                "example": "James",
                "minLength": 1,
                "maxLength": 255,
                "description": "First Name ex James"
              },
              "last_name": {
                "type": "string",
                "example": "Robert",
                "minLength": 1,
                "maxLength": 255,
                "description": "Last Name ex Robert"
              },
              "middle_name": {
                "type": "string",
                "example": "Ivich",
                "minLength": 1,
                "maxLength": 255,
                "description": "Last Name ex Ivich"
              },
              "citizenship": {
                "type": "string",
                "example": "ARE",
                "minLength": 1,
                "maxLength": 3,
                "description": "Citizenship"
              },
              "marital_status": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 18,
                "description": "Marital Status"
              },
              "date_of_birth": {
                "type": "string",
                "example": "1968-08-25",
                "minLength": 1,
                "maxLength": 20,
                "description": "Date of birth"
              },
              "place_of_birth": {
                "type": "string",
                "example": "Dubai",
                "minLength": 1,
                "maxLength": 255,
                "description": "Place of birth"
              },
              "language": {
                "type": "string",
                "example": "ENG",
                "minLength": 1,
                "maxLength": 3,
                "description": "Language ISO code"
              },
              "security_name": {
                "type": "string",
                "example": "Tima",
                "minLength": 1,
                "maxLength": 255,
                "description": "Security Name"
              }
            },
            "type": "object"
          },
          "contact_details": {
            "properties": {
              "home_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Home Phone Number"
              },
              "work_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Work Phone Number"
              },
              "mobile_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Mobile Number"
              },
              "email": {
                "type": "string",
                "example": "James.Robert@network.global",
                "minLength": 1,
                "maxLength": 255,
                "description": "Email address"
              }
            },
            "type": "object"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/addresses"
            }
          },
          "identity_proof_document": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/identity_proof_document"
            }
          },
          "supplementary_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/supplementary_documents"
            }
          },
          "employment_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/employment_details"
            }
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_client_create"
            }
          }
        }
      },
      "AccountCreateHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ACCOUNT_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_ACCOUNT_CREATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountCreateBody": {
        "required": [
          "customer_id",
          "card_type",
          "account"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "card_type": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 7,
            "description": "Informative value to the request, does not have any functional impact, the value can be PREPAID/CREDIT/DEBIT"
          },
          "account": {
            "required": [
              "customer_id",
              "branch_code",
              "product_code",
              "currency"
            ],
            "properties": {
              "customer_id": {
                "type": "string",
                "example": "100000027",
                "minLength": 1,
                "maxLength": 20,
                "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
              },
              "account_number": {
                "type": "string",
                "example": "0009821110000000008",
                "minLength": 1,
                "maxLength": 64,
                "description": "Account number, if not provided CMS will generate it"
              },
              "parent_account_number": {
                "type": "string",
                "example": "0009821110000000008",
                "minLength": 1,
                "maxLength": 64,
                "description": "Parent account number - Applicable only for Corporate products"
              },
              "branch_code": {
                "type": "string",
                "example": "982",
                "minLength": 1,
                "maxLength": 10,
                "description": "Branch Code, if no branches are used, the code must be same as bank_code"
              },
              "product_code": {
                "type": "string",
                "example": "982_AED_042_A",
                "minLength": 1,
                "maxLength": 32,
                "description": "Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_002_A is just used as an example in Sandbox"
              },
              "billing_day": {
                "type": "string",
                "example": "",
                "minLength": 1,
                "maxLength": 10,
                "description": "Billing date, applicable only for credit card products"
              },
              "currency": {
                "type": "string",
                "example": "AED",
                "minLength": 1,
                "maxLength": 3,
                "description": "Informative value to the request, does not have any functional impact, the currency will be taken from the product"
              },
              "limit": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "FIN_LIMIT",
                    "minLength": 1,
                    "maxLength": 32,
                    "description": "Credit limit type - applicable only for credit card products"
                  },
                  "currency": {
                    "type": "string",
                    "example": "AED",
                    "minLength": 1,
                    "maxLength": 3,
                    "description": "Credit limit currency - applicable only for credit card products"
                  },
                  "value": {
                    "type": "string",
                    "example": 55000,
                    "minLength": 1,
                    "maxLength": 20,
                    "description": "Credit limit value - applicable only for credit card products"
                  }
                }
              },
              "custom_fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/custom_fields_card_create"
                }
              }
            },
            "type": "object"
          }
        }
      },
      "AccountCreateResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ACCOUNT_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_ACCOUNT_CREATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountCreateResBody": {
        "required": [
          "account_number"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_card_create"
            }
          }
        }
      },
      "AccountUpdateHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ACCOUNT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_ACCOUNT_UPDATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountUpdateBody": {
        "required": [
          "account_number",
          "card_type",
          "account"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "card_type": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 7,
            "description": "Informative value to the request, does not have any functional impact, the value can be PREPAID/CREDIT/DEBIT"
          },
          "account": {
            "required": [
              "customer_id",
              "branch_code",
              "account_number"
            ],
            "properties": {
              "customer_id": {
                "type": "string",
                "example": "100000027",
                "minLength": 1,
                "maxLength": 20,
                "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
              },
              "branch_code": {
                "type": "string",
                "example": "982",
                "minLength": 1,
                "maxLength": 10,
                "description": "Branch Code, if no branches are used, the code must be same as bank_code"
              },
              "account_number": {
                "type": "string",
                "example": "0009821110000000008",
                "minLength": 1,
                "maxLength": 64,
                "description": "Account number (This can not be updated)"
              },
              "custom_fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/custom_fields_account_update"
                }
              }
            },
            "type": "object"
          }
        }
      },
      "AccountUpdateResBody": {
        "required": [
          "account_number"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_account_update"
            }
          }
        }
      },
      "AccountTransferHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ACCOUNT_TRANSFER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_ACCOUNT_TRANSFERâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountTransferBody": {
        "required": [
          "account_number",
          "product_code"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_042_A",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_002_A is just used as an example in Sandbox"
          },
          "product_profile": {
            "type": "string",
            "example": "PCT_001",
            "minLength": 1,
            "maxLength": 7,
            "description": "Pricing Control Tables"
          },
          "limit": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "FIN_LIMIT",
                "minLength": 1,
                "maxLength": 32,
                "description": "Credit limit type - applicable only for credit card products"
              },
              "currency": {
                "type": "string",
                "example": "784",
                "minLength": 1,
                "maxLength": 3,
                "description": "Credit limit currency - applicable only for credit card products"
              },
              "value": {
                "type": "string",
                "example": 55000,
                "minLength": 1,
                "maxLength": 20,
                "description": "Credit limit value - applicable only for credit card products"
              }
            }
          },
          "request_details": {
            "type": "object",
            "properties": {
              "src_app_code": {
                "type": "string",
                "example": "SRC_APP_CODE",
                "minLength": 1,
                "maxLength": 32,
                "description": "Client Additional info"
              },
              "src_app_name": {
                "type": "string",
                "example": "Source Application Name",
                "minLength": 1,
                "maxLength": 64,
                "description": "Client Additional info"
              },
              "ext_user_id": {
                "type": "string",
                "example": "u123",
                "minLength": 1,
                "maxLength": 32,
                "description": "Client Additional info"
              }
            }
          },
          "production_parameters": {
            "type": "object",
            "properties": {
              "preemb": {
                "type": "string",
                "example": "",
                "minLength": 1,
                "maxLength": 1,
                "description": "Indicator for Pre-Emboss (Mandatory for Virtual Cards)"
              },
              "keep_pin": {
                "type": "string",
                "example": "",
                "minLength": 1,
                "maxLength": 1,
                "description": "Indicator to Keep the existing PIN"
              },
              "set_pin": {
                "type": "string",
                "example": "",
                "minLength": 1,
                "maxLength": 1,
                "description": "Indicator to Set  new PIN   "
              },
              "fee": {
                "type": "string",
                "example": "",
                "minLength": 1,
                "maxLength": 1,
                "description": "Indicator for Fee to be applied "
              },
              "sde": {
                "type": "string",
                "example": "",
                "minLength": 1,
                "maxLength": 1,
                "description": "Indicator for Same Day Embossing"
              }
            }
          }
        }
      },
      "AccountTransferResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ACCOUNT_TRANSFER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_ACCOUNT_TRANSFERâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "custom_fields_account_update": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "CN-RBS_NUMBER",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag"
          },
          "value": {
            "type": "string",
            "example": 9998881110000000,
            "minLength": 1,
            "maxLength": 128,
            "description": "Tag value"
          }
        }
      },
      "AccountUpdateResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ACCOUNT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_ACCOUNT_UPDATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetListOfAccountsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_LIST_OF_ACCOUNTS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_LIST_OF_ACCOUNTSâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+0:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "GetListOfAccountsBody": {
        "required": [
          "customer_id",
          "card_type"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "card_type": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 20,
            "description": "Informative value to the request, does not have any functional impact, the value can be PREPAID/CREDIT/DEBIT "
          }
        }
      },
      "GetListOfAccountsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_LIST_OF_ACCOUNTS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_LIST_OF_ACCOUNTSâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "GetListOfAccountsResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "9927230000508669",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 4,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          }
        }
      },
      "CardCreateHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CARD_CREATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardCreateBody": {
        "required": [
          "customer_id",
          "account_number",
          "card_type",
          "card"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": 100000027,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "card_type": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 7,
            "description": "Informative value to the request, does not have any functional impact, the value can be PREPAID/CREDIT/DEBIT"
          },
          "card": {
            "required": [
              "customer_id",
              "account_number",
              "institution_id",
              "cardholder_name",
              "product_code",
              "currency",
              "card_virtual_indicator"
            ],
            "properties": {
              "customer_id": {
                "type": "string",
                "example": 100000027,
                "minLength": 1,
                "maxLength": 20,
                "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
              },
              "account_number": {
                "type": "string",
                "example": "0009821110000000008",
                "minLength": 1,
                "maxLength": 64,
                "description": "Account number"
              },
              "institution_id": {
                "type": "string",
                "example": "982",
                "minLength": 1,
                "maxLength": 5,
                "description": "institution id is the code that is created for each bank or FI(it is the same value as bank code), 982 value is just used as an example in Sandbox"
              },
              "card_identifier_type": {
                "type": "string",
                "example": "EXID",
                "minLength": 1,
                "maxLength": 20,
                "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
              },
              "card_identifier_id": {
                "type": "string",
                "example": "99985101161390700708",
                "minLength": 1,
                "maxLength": 32,
                "description": "Clear card number generated by FI system. If it was not provided, CMS will generate it"
              },
              "card_expiry_date": {
                "type": "string",
                "example": "0528",
                "minLength": 1,
                "maxLength": 4,
                "description": "Format YYMM. If it was not provided, CMS will generate it"
              },
              "cardholder_name": {
                "type": "string",
                "example": "JOHN DOE",
                "minLength": 1,
                "maxLength": 21,
                "description": "Cardholder name"
              },
              "product_code": {
                "type": "string",
                "example": "982_AED_042_P",
                "minLength": 1,
                "maxLength": 32,
                "description": "Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_002_P is just used as an example in Sandbox\""
              },
              "card_date_open": {
                "type": "string",
                "example": "2022-01-01",
                "minLength": 1,
                "maxLength": 10,
                "description": "Date of card contract creation"
              },
              "currency": {
                "type": "string",
                "example": "AED",
                "minLength": 1,
                "maxLength": 3,
                "description": "Informative value to the request, does not have any functional impact, the currency will be taken from the product"
              },
              "card_virtual_indicator": {
                "type": "string",
                "example": "V",
                "minLength": 1,
                "maxLength": 1,
                "description": "V - Virtual P - Physical"
              },
              "instant_issuance": {
                "$ref": "#/components/schemas/instant_issuance"
              },
              "limit": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "CR_LIMIT_PCNT",
                    "minLength": 1,
                    "maxLength": 32,
                    "description": "Credit limit, applicable only for credit cards, Type of limit: FIN_LIMIT, CR_LIMIT_PCNT (Supplementary card only)"
                  },
                  "currency": {
                    "type": "string",
                    "example": "AED",
                    "minLength": 1,
                    "maxLength": 3,
                    "description": "Credit limit currency"
                  },
                  "value": {
                    "type": "string",
                    "example": 5,
                    "minLength": 1,
                    "maxLength": 20,
                    "description": "Credit limit value"
                  }
                }
              },
              "custom_fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/custom_fields_card_create"
                }
              }
            },
            "type": "object"
          }
        }
      },
      "CardCreateResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_CARD_CREATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardCreateResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "masked_pan",
          "card_virtual_indicator"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "CardValue of card number, Token number, Ext_number"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "masked_pan": {
            "type": "string",
            "example": "999851XXXXXX8349",
            "minLength": 1,
            "maxLength": 16,
            "description": "Masked PAN"
          },
          "card_virtual_indicator": {
            "type": "string",
            "example": "V",
            "minLength": 1,
            "maxLength": 1,
            "description": "P- Physical V- Virtual"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_card_create"
            }
          }
        }
      },
      "CardUpdateHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CARD_UPDATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "PCMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardUpdateBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "card"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 20,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 32,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card": {
            "$ref": "#/components/schemas/card"
          }
        }
      },
      "CardUpdateResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_CARD_UPDATEâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "PCMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardUpdateResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card_update_custom_fields"
            }
          }
        }
      },
      "CardReplacementHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_REPLACEMENT",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CARD_REPLACEMENTâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardReplacementBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "action_type",
          "custom_fields"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier ID"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2712",
            "minLength": 1,
            "maxLength": 4,
            "description": "Card's expiry date format is YYMM"
          },
          "card_sequence_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 2,
            "description": "Sample 01"
          },
          "action_type": {
            "type": "string",
            "example": "Replacement",
            "minLength": 1,
            "maxLength": 20,
            "description": "Action of the API ex - Renewal, Replacement, Reissue (for Credit and Debit Cards)"
          },
          "new_card_identifier_id": {
            "type": "string",
            "example": "9927230000508669",
            "minLength": 1,
            "maxLength": 32,
            "description": "Clear Card number. If it was not provided, CMS will generate it"
          },
          "new_card_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number"
          },
          "instant_issuance": {
            "$ref": "#/components/schemas/instant_issuance"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_card_replacement"
            }
          }
        }
      },
      "CardReplacementResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_REPLACEMENT",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_CARD_REPLACEMENTâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "LookupCardIdentifierResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_LOOKUP_CARD_IDENTIFIER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_LOOKUP_CARD_IDENTIFIERâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardReplacementResBody": {
        "required": [
          "new_card_identifier_id",
          "new_card_identifier_type",
          "new_card_expiry_date",
          "new_masked_pan"
        ],
        "type": "object",
        "properties": {
          "new_card_identifier_id": {
            "type": "string",
            "example": "9927230000508669",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "new_card_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "new_card_expiry_date": {
            "type": "string",
            "example": "0723",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM"
          },
          "new_masked_pan": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "Masked card number"
          }
        }
      },
      "GetListOfCardsHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_LIST_OF_CARDS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_LIST_OF_CARDS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetListOfCardsResBody": {
        "required": [
          "account_number",
          "customer_id"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Either cusomer_id or account_number"
          },
          "account_number": {
            "type": "string",
            "example": "0009821110000000049",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cards"
            }
          }
        }
      },
      "GetListOfCardsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_LIST_OF_CARDS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_LIST_OF_CARDS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetListOfCardsBody": {
        "required": [
          "customer_id",
          "card_type"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Either customer_id or account_number has to be sent"
          },
          "account_number": {
            "type": "string",
            "example": "0009821110000000049",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "card_type": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 20,
            "description": "Informative value to the request, does not have any functional impact, the value can be PREPAID/CREDIT/DEBIT "
          }
        }
      },
      "getCvv2Header": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_CVV2",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_GET_CVV2"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "getCvv2Body": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "expiry_date"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_sequence_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 2,
            "description": "Sample 01"
          },
          "expiry_date": {
            "type": "string",
            "example": "2701",
            "minLength": 1,
            "maxLength": 4,
            "description": "Expiry date of the card YYMM ex: 2310"
          }
        }
      },
      "getCvv2ResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_GET_CVV2",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  RES_GET_CVV2"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "getCvv2ResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "cvv2",
          "expiry_date"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "cvv2": {
            "type": "string",
            "example": "xxxxxxxxxx",
            "minLength": 1,
            "maxLength": 16,
            "description": "Cvv2 encrypted Value"
          },
          "expiry_date": {
            "type": "string",
            "example": 2701,
            "minLength": 1,
            "maxLength": 4,
            "description": "Expiry Date"
          }
        }
      },
      "CardLimitChangeHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_LIMIT_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CARD_LIMIT_CHANGEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardLimitChangeBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "limit",
          "card_role",
          "reason_details"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_role": {
            "type": "string",
            "example": "S",
            "minLength": 1,
            "maxLength": 1,
            "description": "Role it can have 2 values - P (Primary) / S (Supplementary)"
          },
          "limit": {
            "type": "object",
            "properties": {
              "limit_type": {
                "type": "string",
                "example": "online_atm_limit",
                "minLength": 1,
                "maxLength": 32,
                "description": "Refer to limits"
              },
              "currency": {
                "type": "string",
                "example": "AED",
                "minLength": 1,
                "maxLength": 3,
                "description": "Currency code Ex AED"
              },
              "value": {
                "type": "string",
                "example": "100000",
                "minLength": 1,
                "maxLength": 20,
                "description": "Value"
              },
              "date_from": {
                "type": "string",
                "example": "10/10/2021",
                "minLength": 1,
                "maxLength": 10,
                "description": "DD/MM/YYYY If Temporary Limit"
              },
              "date_to": {
                "type": "string",
                "example": "10/10/2021",
                "minLength": 1,
                "maxLength": 10,
                "description": "DD/MM/YYYY If Temporary Limit"
              }
            }
          },
          "reason_details": {
            "type": "string",
            "example": "Credit Limit Amendment",
            "minLength": 1,
            "maxLength": 256,
            "description": "Reason for limit change"
          }
        }
      },
      "CardLimitChangeResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_LIMIT_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_CARD_LIMIT_CHANGEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardPinverficationHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "12345",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_PIN_VERIFICATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CARD_PIN_VERIFICATIONâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "PCMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-05-21T15:13:18.853+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardPinverficationBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "encrypted_pin"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2310",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM Ex: 2310"
          },
          "encrypted_pin": {
            "type": "string",
            "example": "F41AB9C3974FE7B9",
            "minLength": 1,
            "maxLength": 20,
            "description": "Encrypted Pin block of the pin"
          },
          "encryption_method": {
            "type": "string",
            "example": "SYMMETRIC_ENC",
            "minLength": 1,
            "maxLength": 20,
            "description": "Encryption Method to be used for the encryption of the pin"
          }
        }
      },
      "CardPinverficationResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_CARD_PIN_VERIFICATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œRES_CARD_PIN_VERIFICATIONâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardPinChangeHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "12345",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_PIN_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CARD_PIN_CHANGEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "CardPinChangeBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "card_expiry_date",
          "encrypted_new_pin",
          "encrypted_old_pin",
          "encryption_method"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2711",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM Ex: 2310"
          },
          "encrypted_old_pin": {
            "type": "string",
            "example": "9C74D3321D4A5E36",
            "minLength": 1,
            "maxLength": 20,
            "description": "Encrypted Pin block of new pin to be set.\nEx: 7B47D3321D4A5F63"
          },
          "encrypted_new_pin": {
            "type": "string",
            "example": "7B47D3321D4A5F63",
            "minLength": 1,
            "maxLength": 20,
            "description": "Encrypted Pin block of new pin to be set. Ex: 7B47D3321D4A5F63"
          },
          "encryption_method": {
            "type": "string",
            "example": "SYMMETRIC",
            "minLength": 1,
            "maxLength": 20,
            "description": "ASYNC_ENC,SYMMETRIC_ENC,SYMMETRIC"
          }
        }
      },
      "CardPinChangeResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_CARD_PIN_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default RES_CARD_PIN_CHANGE"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "BalanceTransferHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "The msg_id sent in the request will be sent back in response in this field"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_BALANCE_TRANSFER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_BALANCE_TRANSFER"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "CMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BalanceTransferBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "currency",
          "amount",
          "description",
          "transaction_ref_number",
          "plan_number",
          "override_options"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID/CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "currency": {
            "type": "string",
            "example": "AED"
          },
          "amount": {
            "type": "string",
            "example": "3000.00"
          },
          "description": {
            "type": "string",
            "example": "Balance Transfer 270620221110"
          },
          "transaction_ref_number": {
            "type": "string",
            "example": "11100521"
          },
          "plan_number": {
            "type": "string",
            "example": "00166"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BNPLOptions"
            }
          },
          "override_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/override_options"
            }
          }
        }
      },
      "BalanceTransferResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_BALANCE_TRANSFER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default RES_BALANCE_TRANSFER"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BalanceConversionHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "The msg_id sent in the request will be sent back in response in this field"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_BALANCE_CONVERSION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_CARD_BALANCE_CONVERSION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "CMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BalanceConversionBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "currency",
          "amount",
          "description",
          "transaction_ref_number",
          "plan_number",
          "override_options"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID/CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "currency": {
            "type": "string",
            "example": "AED"
          },
          "amount": {
            "type": "string",
            "example": "3000.00"
          },
          "instalment_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Balance Conversion"
          },
          "transaction_ref_number": {
            "type": "string",
            "example": "11100521"
          },
          "plan_number": {
            "type": "string",
            "example": "00166"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BNPLOptions"
            }
          },
          "override_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/override_options"
            }
          }
        }
      },
      "BalanceConversionResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_BALANCE_CONVERSION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_CARD_BALANCE_CONVERSION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "LoanonCallQuickCashHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "The msg_id sent in the request will be sent back in response in this field"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_LOANONCALL_QUICKCASH",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_LOANONCALL_QUICKCASH"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "CMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "LoanonCallQuickCashBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "currency",
          "amount",
          "description",
          "transaction_ref_number",
          "plan_number",
          "override_options"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID/CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "currency": {
            "type": "string",
            "example": "AED"
          },
          "amount": {
            "type": "string",
            "example": "3000.00"
          },
          "description": {
            "type": "string",
            "example": "Balance Transfer 270620221110"
          },
          "transaction_ref_number": {
            "type": "string",
            "example": "11100521"
          },
          "plan_number": {
            "type": "string",
            "example": "00166"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BNPLOptions"
            }
          },
          "override_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/override_options"
            }
          }
        }
      },
      "LoanonCallQuickCashResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_LOANONCALL_QUICKCASH",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_LOANONCALL_QUICKCASH"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetEligiblePlansHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_ELIGIBLE_PLANS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_GET_ELIGIBLE_PLANS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetEligiblePlansBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "trans_id": {
            "type": "string",
            "example": 23254,
            "minLength": 1,
            "maxLength": 20,
            "description": "Transaction Id"
          },
          "action": {
            "type": "string",
            "example": "balance_transfer",
            "minLength": 1,
            "maxLength": 15,
            "description": "This describes the action for which the elibilge plans should be checked ex - balance_conversion, balance_transfer, loan"
          },
          "balance_amount": {
            "type": "string",
            "example": 2000,
            "minLength": 1,
            "maxLength": 28,
            "description": "Balance amount"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BNPLOptions"
            }
          }
        }
      },
      "GetEligiblePlansResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_GET_ELIGIBLE_PLANS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  RES_GET_ELIGIBLE_PLANS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetEligiblePlansResBody": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/plans"
            }
          }
        }
      },
      "BNPLOptions": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "BOOK_TYPE",
            "minLength": 1,
            "maxLength": 20,
            "description": "custom key"
          },
          "value": {
            "type": "string",
            "example": "SR02",
            "minLength": 1,
            "maxLength": 128,
            "description": "custom value"
          }
        }
      },
      "CardTransactionsHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "6546126",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_TRANSACTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -                 REQ_CARD_TRANSACTION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardTransactionsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "wallet_id": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 20,
            "description": "Wallet id, Mandatory for prepaid cards only"
          },
          "transaction": {
            "$ref": "#/components/schemas/CardTransactions"
          }
        }
      },
      "CardTransactions": {
        "required": [
          "transaction_code",
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "transaction_code": {
            "type": "string",
            "example": "PAYCC",
            "minLength": 1,
            "maxLength": 32,
            "description": "Transaction code\nFor Payment- PAYCC\nFor Reversal- PAYACC-REV\nFor Debit- DEBITCC\nFor Debit  Reversal- DEBITCC-REV"
          },
          "amount": {
            "type": "string",
            "example": 500,
            "minLength": 1,
            "maxLength": 20,
            "description": "Amount"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency"
          },
          "description": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 255,
            "description": "Transaction description"
          },
          "counter_party_number": {
            "type": "string",
            "example": 500,
            "minLength": 1,
            "maxLength": 20,
            "description": "Source Number"
          },
          "transaction_ref_number": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 12,
            "description": "Transaction reference number"
          },
          "transaction_date": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 19,
            "description": "Date of transactions"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/CardTransactionsCustomFields"
          }
        }
      },
      "CardTransactionsCustomFields": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag"
          },
          "value": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 128,
            "description": "Tag value"
          }
        }
      },
      "CardTransactionsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_CARD_TRANSACTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default RES_CARD_TRANSACTION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardTransactionsResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "response_code",
          "status"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER/EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "response_code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "S",
            "minLength": 1,
            "maxLength": 1,
            "description": "Status of the request"
          }
        }
      },
      "AccountTransactionsHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "6546126",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ACCOUNT_TRANSACTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -                 REQ_ACCOUNT_TRANSACTION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountTransactionsBody": {
        "required": [
          "account_identifier_id",
          "account_identifier_type",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99985100130368965685",
            "minLength": 1,
            "maxLength": 32,
            "description": "account identifier"
          },
          "account_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER"
          },
          "transaction": {
            "$ref": "#/components/schemas/AccountTransactions"
          }
        }
      },
      "AccountTransactions": {
        "required": [
          "transaction_code",
          "amount",
          "currency",
          "transaction_ref_number"
        ],
        "type": "object",
        "properties": {
          "transaction_code": {
            "type": "string",
            "example": "PAYCC",
            "minLength": 1,
            "maxLength": 32,
            "description": "Transaction code\nFor Payment- PAYCC\nFor Reversal- PAYACC-REV\nFor Debit- DEBITCC\nFor Debit  Reversal- DEBITCC-REV"
          },
          "amount": {
            "type": "string",
            "example": 500,
            "minLength": 1,
            "maxLength": 20,
            "description": "Amount"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency"
          },
          "description": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 255,
            "description": "Transaction description"
          },
          "billing_amount": {
            "type": "string",
            "example": 500,
            "minLength": 1,
            "maxLength": 20,
            "description": "Billing Amount"
          },
          "billing_currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Billing Currency"
          },
          "auth_code": {
            "type": "string",
            "example": "123456",
            "minLength": 1,
            "maxLength": 6,
            "description": "Auth Code"
          },
          "country": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Country"
          },
          "city": {
            "type": "string",
            "example": "Dubai",
            "minLength": 1,
            "maxLength": 200,
            "description": "City"
          },
          "counter_party_number": {
            "type": "string",
            "example": 500,
            "minLength": 1,
            "maxLength": 20,
            "description": "Source Number"
          },
          "transaction_ref_number": {
            "type": "string",
            "example": "787686809930",
            "minLength": 1,
            "maxLength": 12,
            "description": "Transaction reference number"
          },
          "transaction_date": {
            "type": "string",
            "example": "2021-01-15 16:26:36.112",
            "minLength": 1,
            "maxLength": 19,
            "description": "Date of transactions"
          },
          "external_ref_number": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 12,
            "description": "Reference number"
          },
          "rules_data": {
            "$ref": "#/components/schemas/AccountTransactionsCustomFields"
          }
        }
      },
      "AccountTransactionsCustomFields": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "src_app_code",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag"
          },
          "value": {
            "type": "string",
            "example": "X",
            "minLength": 1,
            "maxLength": 128,
            "description": "Tag value"
          }
        }
      },
      "AccountTransactionsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ACCOUNT_TRANSACTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_ACCOUNT_TRANSACTION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountTransactionsResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "response_code",
          "status"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER/EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER or EXTD"
          },
          "response_code": {
            "type": "string",
            "example": "000",
            "minLength": 1,
            "maxLength": 3,
            "description": "Return code"
          },
          "status": {
            "type": "string",
            "example": "Waiting",
            "minLength": 1,
            "maxLength": 50,
            "description": "Posting Status"
          }
        }
      },
      "P2PTransferHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "6546126",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_P2P_TRANSFER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -                 REQ_P2P_TRANSFER"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "P2PTransferBody": {
        "required": [
          "source_identifier_id",
          "source_identifier_type",
          "target_identifier_id",
          "target_identifier_type",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "source_identifier_id": {
            "type": "string",
            "example": "99985100130368965685",
            "minLength": 1,
            "maxLength": 32,
            "description": "source identifier"
          },
          "source_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER or EXID"
          },
          "target_identifier_id": {
            "type": "string",
            "example": "99985100130368965685",
            "minLength": 1,
            "maxLength": 32,
            "description": "target identifier"
          },
          "target_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER or EXID"
          },
          "transaction": {
            "$ref": "#/components/schemas/P2PTransactions"
          }
        }
      },
      "P2PTransactions": {
        "required": [
          "transaction_code",
          "amount",
          "currency",
          "transaction_ref_number"
        ],
        "type": "object",
        "properties": {
          "transaction_code": {
            "type": "string",
            "example": "PT-NQ-OP-P2P",
            "minLength": 1,
            "maxLength": 32,
            "description": "Transaction code\nFor Payment- PAYCC\nFor Reversal- PAYACC-REV\nFor Debit- DEBITCC\nFor Debit  Reversal- DEBITCC-REV"
          },
          "amount": {
            "type": "string",
            "example": 50000,
            "minLength": 1,
            "maxLength": 20,
            "description": "Amount"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency"
          },
          "description": {
            "type": "string",
            "example": "Payment",
            "minLength": 1,
            "maxLength": 255,
            "description": "Transaction description"
          },
          "billing_amount": {
            "type": "string",
            "example": 50000,
            "minLength": 1,
            "maxLength": 20,
            "description": "Billing Amount"
          },
          "billing_currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Billing Currency"
          },
          "auth_code": {
            "type": "string",
            "example": "123456",
            "minLength": 1,
            "maxLength": 6,
            "description": "Auth Code"
          },
          "country": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Country"
          },
          "city": {
            "type": "string",
            "example": "Dubai",
            "minLength": 1,
            "maxLength": 200,
            "description": "City"
          },
          "counter_party_number": {
            "type": "string",
            "example": 500,
            "minLength": 1,
            "maxLength": 20,
            "description": "Source Number"
          },
          "transaction_ref_number": {
            "type": "string",
            "example": "787686809930",
            "minLength": 1,
            "maxLength": 12,
            "description": "Transaction reference number"
          },
          "transaction_date": {
            "type": "string",
            "example": "2021-01-15 16:26:36.112",
            "minLength": 1,
            "maxLength": 19,
            "description": "Date of transactions"
          },
          "external_ref_number": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 12,
            "description": "Reference number"
          },
          "transfer_network": {
            "type": "string",
            "example": "fi/hierarchy/network_code",
            "minLength": 1,
            "maxLength": 40,
            "description": "Network"
          },
          "rules_data": {
            "$ref": "#/components/schemas/P2PTransferCustomFields"
          }
        }
      },
      "P2PTransferCustomFields": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "src_app_code",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag"
          },
          "value": {
            "type": "string",
            "example": "X",
            "minLength": 1,
            "maxLength": 128,
            "description": "Tag value"
          }
        }
      },
      "P2PTransferResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_P2P_TRANSFER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_P2P_TRANSFER"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "P2PTransferResBody": {
        "required": [
          "tranCode",
          "source",
          "dest",
          "extendedHeader",
          "response_record_version",
          "score_count",
          "decision_count",
          "scoring_server_id",
          "decisions",
          "scores"
        ],
        "type": "object",
        "properties": {
          "tranCode": {
            "type": "string",
            "example": "999",
            "minLength": 1,
            "maxLength": 3,
            "description": "The transaction code.\n101 for auth; \n102 for advice; \n108 for profile maturation"
          },
          "source": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Name of source application."
          },
          "dest": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 20,
            "description": "Name of destination application."
          },
          "extendedHeader": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Extended header."
          },
          "response_record_version": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 1,
            "description": "The response_record_version specifies the version of the scoring response layout."
          },
          "score_count": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 2,
            "description": "The number of scores in the response message and has values from 0 to 8."
          },
          "decision_count": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 2,
            "description": "The number of decisions in the response message and has values from 0 to 10."
          },
          "scoring_server_id": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 4,
            "description": "unique identifier for the Scoring Server host."
          },
          "warning": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 50,
            "description": "warning"
          },
          "decisions": {
            "$ref": "#/components/schemas/P2PTranferDecisions"
          },
          "scores": {
            "$ref": "#/components/schemas/P2PTranferScores"
          }
        }
      },
      "P2PTranferDecisions": {
        "required": [
          "decision_type",
          "decision_code"
        ],
        "type": "object",
        "properties": {
          "decision_type": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Stores the decision type of a type/code pair created by Falcon Rule Expert functions that generate type/code pairs"
          },
          "decision_code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Stores the decision code of a type/code"
          }
        }
      },
      "P2PTranferScores": {
        "required": [
          "score",
          "error_code",
          "segment_ID",
          "score_name",
          "reason_1",
          "reason_2",
          "reason_3"
        ],
        "type": "object",
        "properties": {
          "score": {
            "type": "string",
            "example": "9999",
            "minLength": 1,
            "maxLength": 4,
            "description": "the score returned from the model"
          },
          "error_code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 4,
            "description": "This is the error code generated by the model during its processing of the transaction to generate a score. A value of 0 or blank indicates no error.   "
          },
          "segment_ID": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 8,
            "description": "This field contains the segment ID of the score in the score_1 field"
          },
          "score_name": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 22,
            "description": "Identifier for the score."
          },
          "reason_1": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 4,
            "description": "Reason the score was generated"
          },
          "reason_2": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 4,
            "description": "Reason the score was generated"
          },
          "reason_3": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 4,
            "description": "Reason the score was generated"
          }
        }
      },
      "CardBalanceHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_BALANCE_ENQUIRY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CARD_BALANCE_ENQUIRYâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "PCMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardBalanceBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2310",
            "minLength": 1,
            "maxLength": 4,
            "description": "Expiry Format YYMM"
          },
          "card_sequence_number": {
            "type": "string",
            "example": "01",
            "minLength": 1,
            "maxLength": 2,
            "description": "Sample Values 01, 02 etc For C+ only"
          }
        }
      },
      "CardBalancesResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_CARD_BALANCE_ENQUIRY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default RES_CARD_BALANCE_ENQUIRY"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardBalancesResBody": {
        "required": [
          "account_number",
          "card_expiry_date",
          "card_identifier_id",
          "card_identifier_type",
          "cardholder_name",
          "customer_id",
          "institution_id"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "institution_id": {
            "type": "string",
            "example": "982",
            "minLength": 1,
            "maxLength": 5,
            "description": "institution id is the code that is created for each bank or FI(it is the same value as bank code), 982 value is just used as an example in Sandbox"
          },
          "card_identifier_id": {
            "type": "string",
            "example": "9998410014XX297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2310",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM Ex: 2310"
          },
          "cardholder_name": {
            "type": "string",
            "example": "JOHN DOE",
            "minLength": 1,
            "maxLength": 21,
            "description": "Cardholder Name"
          },
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/balances"
            }
          }
        }
      },
      "AccountBalanceHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ACCOUNT_BALANCE_ENQUIRY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_ACCOUNT_BALANCE_ENQUIRYâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "PCMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountBalanceBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "balance_list": {
            "type": "string",
            "example": "AVAILABLE",
            "minLength": 1,
            "maxLength": 15,
            "description": "Sample Values 'AVAILABLE', 'BLOCKED', 'TOTAL_BALANCE' etc"
          }
        }
      },
      "AccountBalancesResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ACCOUNT_BALANCE_ENQUIRY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_ACCOUNT_BALANCE_ENQUIRY"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountBalancesResBody": {
        "required": [
          "parent_account_number"
        ],
        "type": "object",
        "properties": {
          "parent_account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/balances"
            }
          }
        }
      },
      "CardStatementSummaryHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_STATEMENT_SUMMARY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_CARD_STATEMENT_SUMMARY"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "PCMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardStatementSummaryBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "statement_period"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "statement_period": {
            "type": "string",
            "example": "0323",
            "minLength": 1,
            "maxLength": 4,
            "description": "Card statement period format. (Maximum statement is 12 months from the current date)"
          }
        }
      },
      "CardStatementSummaryResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_CARD_STATEMENT_SUMMARY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -   RES_CARD_STATEMENT_SUMMARY"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardStatementSummaryResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "statement_period"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER/EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "statement_period": {
            "type": "string",
            "example": "0323",
            "minLength": 1,
            "maxLength": 4,
            "description": "Statement period for the card statement summary ..Maximum statement is 12 months from the current date"
          },
          "statement_details": {
            "$ref": "#/components/schemas/statement_details"
          }
        }
      },
      "GetLimitUsageDetailsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_GET_LIMITER_USAGE_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be â€œREP_GET_LIMITER_USAGE_DETAILSâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetLimitUsageDetailsResBody": {
        "type": "object",
        "properties": {
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/limits_GetLimitUsageDetails"
            }
          }
        }
      },
      "limits_GetLimitUsageDetails": {
        "type": "object",
        "properties": {
          "limit_type": {
            "type": "string",
            "example": "DAILY",
            "minLength": 1,
            "maxLength": 100,
            "description": "Card Usage Limit."
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency."
          },
          "max_amount": {
            "type": "string",
            "example": 5000,
            "minLength": 1,
            "maxLength": 18,
            "description": "Maximum amount that can be used."
          },
          "current_amount": {
            "type": "string",
            "example": 2000,
            "minLength": 1,
            "maxLength": 18,
            "description": "Amount that is currently been used."
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "This flag indicates to identify if the usage limit is active or not."
          }
        }
      },
      "GetLimitUsageDetailsHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_LIMITER_USAGE_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be â€œREQ_GET_LIMITER_USAGE_DETAILSâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "CARD_CONTROL",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetLimitUsageDetailsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "filter": {
            "type": "string",
            "example": "D365_PAYM_A_TOTAL",
            "minLength": 1,
            "maxLength": 255,
            "description": "limit type can be list of usage codes (comma separated)"
          }
        }
      },
      "UpdateLimitUsageDetailsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_UPDATE_USAGE_LIMITER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_UPDATE_USAGE_LIMITER"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "UpdateLimitUsageDetailsHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_UPDATE_USAGE_LIMITER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_UPDATE_USAGE_LIMITERâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "CMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "UpdateLimitUsageDetailsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "limit": {
            "$ref": "#/components/schemas/update_limits"
          }
        }
      },
      "GetRestrictionsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_GET_RESTRICTION_USAGE_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_GET_RESTRICTION_USAGE_DETAILSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€"
          }
        }
      },
      "GetRestrictionsResBody": {
        "type": "object",
        "properties": {
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/restrictions"
            }
          }
        }
      },
      "GetRestrictionsHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_RESTRICTION_USAGE_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_GET_RESTRICTION_USAGE_DETAILSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetRestrictionsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "filter": {
            "type": "string",
            "example": "D365_PAYM_A_TOTAL",
            "minLength": 1,
            "maxLength": 255,
            "description": "limit type can be list of usage codes (comma separated)"
          }
        }
      },
      "SwitchRestrictionsUsageDetailsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ENABLE_DISABLE_RESTRICTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_ENABLE_DISABLE_RESTRICTIONâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "SwitchRestrictionsUsageDetailsHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "The msg_id sent in the request will be sent back in response in this field"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ENABLE_DISABLE_RESTRICTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_ENABLE_DISABLE_RESTRICTION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "CMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "SwitchRestrictionsUsageDetailsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "restriction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/switch_restriction"
            }
          }
        }
      },
      "GetPlanListHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_PLAN_LIST",
            "minLength": 1,
            "maxLength": 50,
            "description": "name to be used Default  REQ_GET_PLAN_LIST"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "Target application name Ex  WAY4 or DCMS or PCMS"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "GetPlanListBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          }
        }
      },
      "GetPlanListResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "RES_GET_PLAN_LIST",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default RES_GET_PLAN_LIST"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "GetPlanListResBody": {
        "type": "object",
        "properties": {
          "instalments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instalments"
            }
          }
        }
      },
      "GetPlanDetailsByIDHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_PLAN_DETAILS_BYID",
            "minLength": 1,
            "maxLength": 50,
            "description": "name to be used Default  REQ_GET_PLAN_DETAILS_BYID"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "Target application name Ex  WAY4 or DCMS or PCMS"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetPlanDetailsByIDBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "instalment_id"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "instalment_id": {
            "type": "string",
            "example": "61992",
            "minLength": 1,
            "maxLength": 18,
            "description": "Instalment ID"
          }
        }
      },
      "GetPlanDetailsByIDResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_GET_PLAN_DETAILS_BYID",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_GET_PLAN_DETAILS_BYID"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetPlanDetailsByIDResBody": {
        "type": "object",
        "properties": {
          "instalments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instalments"
            }
          }
        }
      },
      "RefinanceTransactionHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_REFINANCE_TRANSACTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "name to be used Default  REQ_REFINANCE_TRANSACTION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "Target application name Ex  WAY4 or DCMS or PCMS"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "RefinanceTransactionBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "plan_number",
          "trans_id"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "454545XXXXXX1234"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "trans_id": {
            "type": "string",
            "example": "92572",
            "minLength": 1,
            "maxLength": 20,
            "description": "Transaction ID"
          },
          "plan_number": {
            "type": "string",
            "example": "41412",
            "minLength": 1,
            "maxLength": 5,
            "description": "Plan number for conversion configured by the bank."
          },
          "instalment_description": {
            "type": "string",
            "example": "IPP Booking from API",
            "minLength": 1,
            "maxLength": 255,
            "description": "IPP Plan Description"
          },
          "channel": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 12,
            "description": "channel"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BNPLOptions"
            }
          },
          "override_options": {
            "$ref": "#/components/schemas/override_options"
          }
        }
      },
      "RefinanceTransactionResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "tracking_id",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "The msg_id sent in the request will be sent back in response in this field"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_REFINANCE_TRANSACTION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REP_REFINANCE_TRANSACTION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "CMS",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "LookupCardIdentifierHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Request Type"
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_LOOKUP_CARD_IDENTIFIER",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "Target application name Ex CMS"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "LookupCardIdentifierBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": 99984100111514120000,
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "public_key": {
            "type": "string",
            "example": "947DFE575D5DAFD68A57414C46CDF039AFA",
            "minLength": 1,
            "maxLength": 500,
            "description": "X.509 Certificate encapsulating a Public Key to be used to encrypt the clear card number"
          }
        }
      },
      "LookupCardIdentifierResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "EXID"
          }
        }
      },
      "ClientUpdateHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CLIENT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_CLIENT_UPDATEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "ClientUpdateBody": {
        "required": [
          "customer_id",
          "bank_code",
          "card_name",
          "custom_fields",
          "card_type"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "bank_code": {
            "type": "string",
            "example": "982",
            "minLength": 1,
            "maxLength": 3,
            "description": "Bank code is Unique Id 3 digit number for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ â€œ982â€ is used"
          },
          "external_client_number": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "additional identifier for the client that is generated by FI system"
          },
          "card_name": {
            "type": "string",
            "example": "JAMES ROBERT",
            "minLength": 1,
            "maxLength": 21,
            "description": "Card embossing name defined on client level (Upper case)"
          },
          "card_type": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 7,
            "description": "Values are restricted PREPAID CREDIT DEBIT"
          },
          "personal_details": {
            "required": [
              "first_name",
              "last_name",
              "date_of_birth"
            ],
            "properties": {
              "gender": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 6,
                "description": "Gender"
              },
              "title": {
                "type": "string",
                "example": "Mr",
                "minLength": 1,
                "maxLength": 4,
                "description": "Title MR etc"
              },
              "first_name": {
                "type": "string",
                "example": "James",
                "minLength": 1,
                "maxLength": 255,
                "description": "First Name"
              },
              "last_name": {
                "type": "string",
                "example": "Robert",
                "minLength": 1,
                "maxLength": 255,
                "description": "Last Name"
              },
              "middle_name": {
                "type": "string",
                "example": "Ivich",
                "minLength": 1,
                "maxLength": 255,
                "description": "Middle Name"
              },
              "citizenship": {
                "type": "string",
                "example": "ARE",
                "minLength": 1,
                "maxLength": 3,
                "description": "Citizenship"
              },
              "marital_status": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 18,
                "description": "Marital status"
              },
              "date_of_birth": {
                "type": "string",
                "example": "1968-08-25",
                "minLength": 1,
                "maxLength": 10,
                "description": "Birth Date format - YYYY-MM-DD"
              },
              "place_of_birth": {
                "type": "string",
                "example": "Dubai",
                "minLength": 1,
                "maxLength": 255,
                "description": "Birth place"
              },
              "language": {
                "type": "string",
                "example": "ENG",
                "minLength": 1,
                "maxLength": 18,
                "description": "Language ISO code"
              },
              "security_name": {
                "type": "string",
                "example": "Tima",
                "minLength": 1,
                "maxLength": 255,
                "description": "This field is used by Fraud monitoring agents to validate cardholder verification on call. This is not mandatory for issuers not using Fraud monitoring service."
              }
            },
            "type": "object"
          },
          "contact_details": {
            "required": [
              "mobile_phone"
            ],
            "properties": {
              "home_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Home phone"
              },
              "work_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Work phone"
              },
              "mobile_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Mobile phone"
              },
              "email": {
                "type": "string",
                "example": "James.Robert@network.global",
                "minLength": 1,
                "maxLength": 255,
                "description": "Email Id"
              }
            },
            "type": "object"
          },
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "identity_proof_document": {
            "$ref": "#/components/schemas/identity_proof_document"
          },
          "supplementary_documents": {
            "$ref": "#/components/schemas/supplementary_documents"
          },
          "employment_details": {
            "$ref": "#/components/schemas/employment_details"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_client_create"
            }
          }
        }
      },
      "ClientUpdateResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CLIENT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_CLIENT_UPDATEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application sent in the request will be sent back in response in this field"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "ClientUpdateResBody": {
        "required": [
          "customer_id",
          "bank_code",
          "card_name"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "bank_code": {
            "type": "string",
            "example": "982",
            "minLength": 1,
            "maxLength": 3,
            "description": "Bank code is Unique Id 3 digit number for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ â€œ982â€ is used"
          },
          "client_number": {
            "type": "string",
            "example": 100000028,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "card_name": {
            "type": "string",
            "example": "JAMES ROBERT",
            "minLength": 1,
            "maxLength": 21,
            "description": "Card embossing name defined on client level (Upper case)"
          },
          "personal_details": {
            "required": [
              "first_name",
              "last_name",
              "date_of_birth",
              "citizenship"
            ],
            "properties": {
              "gender": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 6,
                "description": "Gender"
              },
              "title": {
                "type": "string",
                "example": "Mr",
                "minLength": 1,
                "maxLength": 4,
                "description": "Title MR etc"
              },
              "first_name": {
                "type": "string",
                "example": "James",
                "minLength": 1,
                "maxLength": 255,
                "description": "First Name"
              },
              "last_name": {
                "type": "string",
                "example": "Robert",
                "minLength": 1,
                "maxLength": 255,
                "description": "Last Name"
              },
              "middle_name": {
                "type": "string",
                "example": "Ivich",
                "minLength": 1,
                "maxLength": 255,
                "description": "Middle Name"
              },
              "citizenship": {
                "type": "string",
                "example": "ARE",
                "minLength": 1,
                "maxLength": 3,
                "description": "Citizenship"
              },
              "marital_status": {
                "type": "string",
                "example": "M",
                "minLength": 1,
                "maxLength": 18,
                "description": "Marital status"
              },
              "date_of_birth": {
                "type": "string",
                "example": "1968-08-25",
                "minLength": 1,
                "maxLength": 10,
                "description": "Birth Date"
              },
              "place_of_birth": {
                "type": "string",
                "example": "Dubai",
                "minLength": 1,
                "maxLength": 255,
                "description": "Birth place"
              },
              "language": {
                "type": "string",
                "example": "ENG",
                "minLength": 1,
                "maxLength": 18,
                "description": "Language ISO code"
              },
              "security_name": {
                "type": "string",
                "example": "Tima",
                "minLength": 1,
                "maxLength": 255,
                "description": "This field is used by Fraud monitoring agents to validate cardholder verification on call. This is not mandatory for issuers not using Fraud monitoring service."
              }
            },
            "type": "object"
          },
          "contact_details": {
            "properties": {
              "home_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Home phone"
              },
              "work_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Work phone"
              },
              "mobile_phone": {
                "type": "string",
                "example": "919702310992",
                "minLength": 1,
                "maxLength": 32,
                "description": "Mobile phone"
              },
              "email": {
                "type": "string",
                "example": "James.Robert@network.global",
                "minLength": 1,
                "maxLength": 255,
                "description": "Email Id"
              }
            },
            "type": "object"
          },
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "identity_proof_document": {
            "$ref": "#/components/schemas/identity_proof_document"
          },
          "supplementary_documents": {
            "$ref": "#/components/schemas/supplementary_documents"
          },
          "employment_details": {
            "$ref": "#/components/schemas/employment_details"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields"
            }
          }
        }
      },
      "CardActivationHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_ACTIVATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_CARD_ACTIVATION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardActivationBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "This defines the card Identifier Id, this is the sample value please use the newly created card created by card create API. any given card can be actived only once. If we use the same card identifer id multiple times for card activation, the API will be errored out saying - â€œCard Status Not Allowed for Activationâ€ ."
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_sequence_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 2,
            "description": "Sample 01,02 etc"
          },
          "card_expiry_date": {
            "type": "string",
            "example": 2310,
            "minLength": 1,
            "maxLength": 4,
            "description": "Card's expiry date"
          }
        }
      },
      "CardActivationResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_ACTIVATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static value - REP_CARD_ACTIVATION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardStatusChangeHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_STATUS_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be â€œREQ_CARD_STATUS_CHANGEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardStatusChangeBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "status"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "card Identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": 2310,
            "minLength": 1,
            "maxLength": 4,
            "description": "CARD EXPIRY DATE"
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_card_status"
            }
          }
        }
      },
      "CardStatusChangeResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "msg_type can hold 2 values TRANSACTION or ENQUIRY, the value must be sent as it is mentioned in the request"
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_STATUS_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_CARD_STATUS_CHANGE"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountStatusChangeHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ACCOUNT_STATUS_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be â€œREQ_ACCOUNT_STATUS_CHANGEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountStatusChangeBody": {
        "required": [
          "account_identifier_id",
          "account_identifier_type",
          "status"
        ],
        "type": "object",
        "properties": {
          "account_identifier_id": {
            "type": "string",
            "example": "0003621110000000183",
            "minLength": 1,
            "maxLength": 32,
            "description": "account Identifier"
          },
          "account_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER"
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account_status"
            }
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields_card_status"
            }
          }
        }
      },
      "AccountStatusChangeResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "msg_type can hold 2 values TRANSACTION or ENQUIRY, the value must be sent as it is mentioned in the request"
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ACCOUNT_STATUS_CHANGE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_ACCOUNT_STATUS_CHANGE"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "NotificationServiceHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_SEND_NOTIFICATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be â€œREQ_SEND_NOTIFICATIONâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "NotificationServiceBody": {
        "required": [
          "identifier_id",
          "identifier_type"
        ],
        "type": "object",
        "properties": {
          "identifier_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 32,
            "description": "Identifier"
          },
          "identifier_type": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER or EXID"
          },
          "email": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "sms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sms"
            }
          }
        }
      },
      "NotificationServiceResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "msg_type can hold 2 values TRANSACTION or ENQUIRY, the value must be sent as it is mentioned in the request"
          },
          "msg_function": {
            "type": "string",
            "example": "REP_SEND_NOTIFICATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_SEND_NOTIFICATION"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "ReleasePendingAuthHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_REL_PENDING_AUTH_TRANSACTIONS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be â€œREQ_REL_PENDING_AUTH_TRANSACTIONSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "ReleasePendingAuthBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "trans_id"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "9998510079786318",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER or EXID"
          },
          "trans_id": {
            "type": "string",
            "example": "123456",
            "minLength": 1,
            "maxLength": 20
          },
          "reason": {
            "type": "string",
            "example": "Any Reason",
            "minLength": 1,
            "maxLength": 255
          }
        }
      },
      "ReleasePendingAuthResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "msg_type can hold 2 values TRANSACTION or ENQUIRY, the value must be sent as it is mentioned in the request"
          },
          "msg_function": {
            "type": "string",
            "example": "REP_REL_PENDING_AUTH_TRANSACTIONS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_REL_PENDING_AUTH_TRANSACTIONS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "PinTriesCounterResetHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_PIN_RETRIES_COUNTER_RESET",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_PIN_RETRIES_COUNTER_RESETâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "PinTriesCounterResetBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_sequence_number": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 2,
            "description": ""
          },
          "card_expiry_date": {
            "type": "string",
            "example": 1412,
            "minLength": 1,
            "maxLength": 5,
            "description": "Expiry date of the card"
          }
        }
      },
      "PinTriesCounterResetResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_PIN_RETRIES_COUNTER_RESET",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_PIN_RETRIES_COUNTER_RESETâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardSetPinHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_SET_PIN",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_CARD_SET_PIN"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardSetPinBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "card_expiry_date",
          "encrypted_pin",
          "encryption_method"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_sequence_number": {
            "type": "string",
            "example": "01",
            "minLength": 1,
            "maxLength": 2,
            "description": "Sample 01"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2704",
            "minLength": 1,
            "maxLength": 4,
            "description": "2605"
          },
          "encrypted_pin": {
            "type": "string",
            "example": "F41AB9C3974FE7A9",
            "minLength": 1,
            "maxLength": 20,
            "description": "Encrypted Pin block of the pin to be set. Ex: 7B47D3321D4A5F63"
          },
          "encryption_method": {
            "type": "string",
            "example": "SYMMETRIC",
            "minLength": 1,
            "maxLength": 20,
            "description": "Encryption Method to be used for the encryption of the pin"
          }
        }
      },
      "CardSetPinResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_SET_PIN",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static value - REP_CARD_SET_PIN"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetCardTransactionsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_CARD_TRANSACTIONS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_GET_CARD_TRANSACTIONSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetCardTransactionsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "transaction_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "transaction_type": {
            "type": "string",
            "example": "authorized",
            "minLength": 1,
            "maxLength": 16,
            "description": "authorized, time_based/posted, statemented"
          },
          "date_from": {
            "type": "string",
            "example": "01/12/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format DD/MM/YYYY. Maximum interval is 90days. Conditional for posted."
          },
          "date_to": {
            "type": "string",
            "example": "29/12/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format DD/MM/YYYY. Maximum interval is 90days.Conditional for posted"
          },
          "statement_period": {
            "type": "string",
            "example": "0123",
            "minLength": 1,
            "maxLength": 4,
            "description": "Format YYMM (Maximum statement is 12 months from the current date)."
          },
          "no_of_transactions_requested": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 2,
            "description": "Maximum number of transactions to be fetched in a request. Value should be between 1 and 99 default is 50       "
          },
          "requested_page_no": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 4,
            "description": "Page number of the current request, could be from 1 to 99."
          },
          "return_mcc_group": {
            "type": "string",
            "example": "true",
            "minLength": 1,
            "maxLength": 4,
            "description": "To retrun MCC group"
          }
        }
      },
      "GetCardTransactionsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_GET_CARD_TRANSACTIONS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_GET_CARD_TRANSACTIONSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetCardTransactionsResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "transaction_type",
          "transaction",
          "no_of_transactions_returned"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "card identifier"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "transaction_type": {
            "type": "string",
            "example": "authorized",
            "minLength": 1,
            "maxLength": 16,
            "description": "Type of the card transaction the expected values are - authorized, time_based/posted, statemented"
          },
          "date_from": {
            "type": "string",
            "example": "2021-02-02T00:00:00.000Z",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format YYYY-MM-DD Conditional for posted"
          },
          "date_to": {
            "type": "string",
            "example": "2021-10-02T00:00:00.000Z",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format YYYY-MM-DD Conditional for posted"
          },
          "statement_period": {
            "type": "string",
            "example": 312,
            "minLength": 1,
            "maxLength": 4,
            "description": "Format YYMM Conditional Mandatory for statemented"
          },
          "no_of_transactions_returned": {
            "type": "string",
            "example": "019",
            "minLength": 1,
            "maxLength": 3,
            "description": "Number of transactions"
          },
          "no_of_transactions_requested": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 2,
            "description": "Maximum number of transactions to be fetched in a request. Value should be between 1 and 99 default is 50       "
          },
          "requested_page_no": {
            "type": "string",
            "example": "55",
            "minLength": 1,
            "maxLength": 4,
            "description": "Page number of the current request, could be from 1 to 99."
          },
          "total_no_of_pages": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 2,
            "description": "Total number of requests"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transactions"
          }
        }
      },
      "GetAccountTransactionsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_ACCOUNT_TRANSACTIONS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_GET_ACCOUNT_TRANSACTIONSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetAccountTransactionsBody": {
        "required": [
          "account_identifier_id",
          "account_identifier_type",
          "transaction_type"
        ],
        "type": "object",
        "properties": {
          "account_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "Account Identifier"
          },
          "account_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER/RBS_NUMBER",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER/RBS_NUMBER"
          },
          "transaction_type": {
            "type": "string",
            "example": "posted",
            "minLength": 1,
            "maxLength": 16,
            "description": "authorized, time_based/posted, statemented"
          },
          "date_from": {
            "type": "string",
            "example": "01/12/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format DD/MM/YYYY. Maximum interval is 90days. Conditional for posted."
          },
          "date_to": {
            "type": "string",
            "example": "29/12/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format DD/MM/YYYY. Maximum interval is 90days.Conditional for posted"
          },
          "statement_period": {
            "type": "string",
            "example": "0123",
            "minLength": 1,
            "maxLength": 4,
            "description": "Format YYMM (Maximum statement is 12 months from the current date)."
          },
          "no_of_transactions_requested": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 2,
            "description": "Maximum number of transactions to be fetched in a request. Value should be between 1 and 99 default is 50       "
          },
          "requested_page_no": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 4,
            "description": "Page number of the current request, could be from 1 to 99."
          },
          "return_mcc_group": {
            "type": "string",
            "example": "true",
            "minLength": 1,
            "maxLength": 4,
            "description": "To retrun MCC group"
          }
        }
      },
      "GetAccountTransactionsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "timestamp",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_GET_ACCOUNT_TRANSACTIONS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_GET_CARD_TRANSACTIONSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Date & time Format  DD/MM/YYYY HH:MM:SS"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetAccountTransactionsResBody": {
        "required": [
          "account_identifier_id",
          "account_identifier_type",
          "transaction_type",
          "transaction",
          "no_of_transactions_returned"
        ],
        "type": "object",
        "properties": {
          "account_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "Account identifier"
          },
          "account_identifier_type": {
            "type": "string",
            "example": "CONTRACT_NUMBER or EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER or EXID"
          },
          "transaction_type": {
            "type": "string",
            "example": "authorized",
            "minLength": 1,
            "maxLength": 16,
            "description": "Type of the Account transaction the expected values are - authorized, time_based/posted, statemented"
          },
          "date_from": {
            "type": "string",
            "example": "2021-02-02T00:00:00.000Z",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format YYYY-MM-DD Conditional for posted"
          },
          "date_to": {
            "type": "string",
            "example": "2021-10-02T00:00:00.000Z",
            "minLength": 1,
            "maxLength": 10,
            "description": "Format YYYY-MM-DD Conditional for posted"
          },
          "statement_period": {
            "type": "string",
            "example": 312,
            "minLength": 1,
            "maxLength": 4,
            "description": "Format YYMM Conditional Mandatory for statemented"
          },
          "no_of_transactions_returned": {
            "type": "string",
            "example": "019",
            "minLength": 1,
            "maxLength": 3,
            "description": "Number of transactions"
          },
          "no_of_transactions_requested": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 2,
            "description": "Maximum number of transactions to be fetched in a request. Value should be between 1 and 99 default is 50       "
          },
          "requested_page_no": {
            "type": "string",
            "example": "55",
            "minLength": 1,
            "maxLength": 4,
            "description": "Page number of the current request, could be from 1 to 99."
          },
          "total_no_of_pages": {
            "type": "string",
            "example": 55,
            "minLength": 1,
            "maxLength": 2,
            "description": "Total number of requests"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transactions"
          }
        }
      },
      "CustomerDetailsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GENERIC_CUSTOMER_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_GENERIC_CUSTOMER_DETAILS\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CustomerDetailsBody": {
        "required": [
          "customer_id"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Either Customer ID or Card Identifier Id"
          },
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS."
          },
          "additional_qualifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/additionalQualifiers"
            }
          }
        }
      },
      "additionalQualifiers": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PAN_LAST"
            ],
            "default": "PAN_LAST",
            "minLength": 1,
            "maxLength": 32,
            "description": "Additional qualifier works as additional qualifier with card_identifier_type example: searching by mobile number and last X digits of the card,card_identifier_type= MOBILE, and  additionalQualifiers.type= PAN_LAST"
          },
          "value": {
            "type": "string",
            "example": 9892,
            "minLength": 1,
            "maxLength": 128,
            "description": "Additional qualifier works as additional qualifier with card_identifier_id based on the type"
          }
        }
      },
      "CustomerDetailsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "bank_id",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_GENERIC_CUSTOMER_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \" REP_GENERIC_CUSTOMER_DETAILS\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CustomerDetailsResBody": {
        "required": [
          "customer_id",
          "bank_code",
          "card_name"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "bank_code": {
            "type": "string",
            "example": "928",
            "minLength": 1,
            "maxLength": 5,
            "description": "Bank code is Unique Id 3 digit number for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ â€œ982â€ is used"
          },
          "client_number": {
            "type": "string",
            "example": "000003548435901",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number Ex: 000003548435901 "
          },
          "card_name": {
            "type": "string",
            "example": "JAMES ROBERT",
            "minLength": 1,
            "maxLength": 21,
            "description": "Card embossing name defined on client level (Upper case)"
          },
          "personal_details": {
            "$ref": "#/components/schemas/personal_details"
          },
          "contact_details": {
            "$ref": "#/components/schemas/contact_details"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/addresses"
            }
          },
          "identity_proof_document": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/identity_proof_document"
            }
          },
          "supplementary_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/supplementary_documents"
            }
          },
          "employment_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/employment_details"
            }
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields"
            }
          }
        }
      },
      "CustomerDetailsUpdateHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CUSTOMER_DEMOGRAPHIC_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_CUSTOMER_DEMOGRAPHIC_UPDATE\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CustomerDetailsUpdateBody": {
        "required": [
          "customer_id",
          "bank_code",
          "card_name"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "000003548435901",
            "minLength": 1,
            "maxLength": 20,
            "description": "CIF Id"
          },
          "bank_code": {
            "type": "string",
            "example": "928",
            "minLength": 1,
            "maxLength": 5,
            "description": "Bank specific code Ex:928"
          },
          "card_name": {
            "type": "string",
            "example": "IVAN IVANOVV",
            "minLength": 1,
            "maxLength": 50,
            "description": "Card Holder's Name"
          },
          "client_number": {
            "type": "string",
            "example": "000003548435901",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number"
          },
          "reg_number": {
            "type": "string",
            "example": "000003548435901",
            "minLength": 1,
            "maxLength": 20,
            "description": "Registration number"
          },
          "personal_details": {
            "$ref": "#/components/schemas/personal_details"
          },
          "contact_details": {
            "$ref": "#/components/schemas/contact_details"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/addresses"
            }
          },
          "identity_proof_document": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/identity_proof_document"
            }
          },
          "supplementary_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/supplementary_documents"
            }
          },
          "employment_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/employment_details"
            }
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields"
            }
          }
        }
      },
      "CustomerDetailsUpdateResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "target_application",
          "bank_id",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CUSTOMER_DEMOGRAPHIC_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \" REP_CUSTOMER_DEMOGRAPHIC_UPDATE\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardDetailsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_CARD_DETAILS\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardDetailsEnquiryBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100111514120378",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2812",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM"
          },
          "card_sequence_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 2,
            "description": "Sample Values 01"
          }
        }
      },
      "CardDetailsResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REP_CARD_DETAILS\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the resopnse - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardDetailsResBody": {
        "required": [
          "account_number",
          "institution_id",
          "card_activation_date",
          "card_date_open",
          "card_expiry_date",
          "card_identifier_id",
          "card_identifier_type",
          "card_role",
          "cardholder_name",
          "currency",
          "customer_id",
          "due_date",
          "last_statement_date",
          "next_statement_date",
          "masked_pan",
          "card_virtual_indicator"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": 100000027,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "institution_id": {
            "type": "string",
            "example": 982,
            "minLength": 1,
            "maxLength": 5,
            "description": "institution id is the code that is created for each bank or FI(it is the same value as bank code), 982 value is just used as an example in Sandbox"
          },
          "card_identifier_id": {
            "type": "string",
            "example": 99984100111514120000,
            "minLength": 1,
            "maxLength": 32,
            "description": "Card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "RBS_number": {
            "type": "string",
            "example": 123456789,
            "minLength": 1,
            "maxLength": 64,
            "description": "RBS is Core banking system number"
          },
          "masked_pan": {
            "type": "string",
            "example": "999841XXXXXX5605",
            "minLength": 1,
            "maxLength": 16,
            "description": "Masked PAN of the card"
          },
          "clear_pan": {
            "type": "string",
            "example": "9998410029355605",
            "minLength": 1,
            "maxLength": 16,
            "description": "Clear card no of the card"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "3001",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM Ex: 2310"
          },
          "cardholder_name": {
            "type": "string",
            "example": "JOHN DOE",
            "minLength": 1,
            "maxLength": 26,
            "description": "Card holder's name"
          },
          "account_number": {
            "type": "string",
            "example": "0009821110000000049",
            "minLength": 1,
            "maxLength": 50,
            "description": "Account number"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_002_P",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product group"
          },
          "product_group": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product group"
          },
          "product_short_code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product short code"
          },
          "product_name": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product name"
          },
          "product_profile": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 7,
            "description": "Pricing Control Tables"
          },
          "card_brand": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card brand"
          },
          "card_role": {
            "type": "string",
            "example": "P",
            "minLength": 1,
            "maxLength": 1,
            "description": "P (Primary) / S (Supplementary)"
          },
          "last_statement_date": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Last Statement Date"
          },
          "next_statement_date": {
            "type": "string",
            "example": "15/01/2025",
            "minLength": 1,
            "maxLength": 10,
            "description": "Next Statement Date"
          },
          "due_date": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Due date - This is applicable only for the credit cards"
          },
          "card_date_open": {
            "type": "string",
            "example": "01/01/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Card open date"
          },
          "card_activation_date": {
            "type": "string",
            "example": "01/01/2025",
            "minLength": 1,
            "maxLength": 10,
            "description": "Card activation date"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency , Example - AED"
          },
          "card_virtual_indicator": {
            "type": "string",
            "example": "V",
            "minLength": 1,
            "maxLength": 1,
            "description": "P for Physical, V for virtual"
          },
          "current_pin_attempt": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 3,
            "description": "Current pin attempt"
          },
          "max_pin_attempt": {
            "type": "string",
            "example": 2,
            "minLength": 1,
            "maxLength": 3,
            "description": "Max pin attempt"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statuses"
            }
          },
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/limits"
            }
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/balances"
            }
          }
        }
      },
      "CardVerificationHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_VERIFICATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_CARD_DETAILS\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardVerificationBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "card_expiry_date"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100111514120378",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2812",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM"
          }
        }
      },
      "CardVerificationResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_VERIFICATION",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REP_CARD_VERIFICATION\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the resopnse - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardInsuranceProductHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_INSURANCE_PRODUCT",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_CARD_INSURANCE_PRODUCT\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardInsuranceProductBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100111514120378",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          }
        }
      },
      "CardInsuranceProductResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_INSURANCE_PRODUCT",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REP_CARD_INSURANCE_PRODUCT\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the resopnse - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardInsuranceProductResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "insurance_products"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": 99984100111514120000,
            "minLength": 1,
            "maxLength": 32,
            "description": "Card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "insurance_products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/insurance_products"
            }
          }
        }
      },
      "CardInsuranceProductUpdateHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_INSURANCE_PRODUCT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_CARD_INSURANCE_PRODUCT_UPDATE\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardInsuranceProductUpdateBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "is_active",
          "requested_by"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100111514120378",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "is_active": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "CANCELLED/ACTIVE"
          },
          "requested_by": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "null/CARDHOLDER/UNDERWRITER"
          }
        }
      },
      "CardInsuranceProductUpdateResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_INSURANCE_PRODUCT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REP_CARD_INSURANCE_PRODUCT_UPDATE\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the resopnse - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardDirectDebitHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_DIRECT_DEBIT",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_CARD_DIRECT_DEBIT\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardDirectDebitBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100111514120378",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CM"
          }
        }
      },
      "CardDirectDebitResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_DIRECT_DEBIT",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REP_CARD_DIRECT_DEBIT\""
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the resopnse - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardDirectDebitResBody": {
        "required": [
          "dd_day",
          "dd_number",
          "dd_percentage",
          "dd_enrolment",
          "dd_member"
        ],
        "type": "object",
        "properties": {
          "dd_day": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 2,
            "description": "Direct debit day"
          },
          "dd_number": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 17,
            "description": "Direct debit number"
          },
          "dd_percentage": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 3,
            "description": "Direct debit percentage"
          },
          "dd_enrolment": {
            "type": "string",
            "example": "Y",
            "minLength": 1,
            "maxLength": 32,
            "description": "Direct debit enrolment flag, Possible values: Y,N,F"
          },
          "dd_member": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Direct debit member id"
          }
        }
      },
      "CardDirectDebitUpdateHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_DIRECT_DEBIT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REQ_CARD_DIRECT_DEBIT_UPDATE\""
          },
          "src_application": {
            "type": "string",
            "example": "SSP",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "CardDirectDebitUpdateBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "branch_code"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100111514120378",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CM"
          },
          "branch_code": {
            "type": "string",
            "example": "031",
            "minLength": 1,
            "maxLength": 10,
            "description": "Branch code e.g. â€œXXXXâ€"
          },
          "dd_day": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 2,
            "description": "Direct debit day"
          },
          "dd_number": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 17,
            "description": "Direct debit number"
          },
          "dd_percentage": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 3,
            "description": "Direct debit percentage"
          },
          "dd_enrolment": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Direct debit enrolment flag, Possible values: Y,N,F"
          },
          "dd_member": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Direct debit member id"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields"
            }
          }
        }
      },
      "CardDirectDebitUpdateResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_DIRECT_DEBIT_UPDATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be \"REP_CARD_DIRECT_DEBIT_UPDATE\""
          },
          "src_application": {
            "type": "string",
            "example": "SSP",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T06:49:02.366Z",
            "minLength": 1,
            "maxLength": 15,
            "description": "Timestamp of the resopnse - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "insurance_products": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Credit Shield",
            "minLength": 1,
            "maxLength": 255,
            "description": "Name of the insurance (E.g. Credit Shield)"
          },
          "code": {
            "type": "string",
            "example": "01",
            "minLength": 1,
            "maxLength": 2,
            "description": "Code of the insurance - From 01 to 12"
          },
          "is_active": {
            "type": "string",
            "example": "CANCELLED",
            "minLength": 1,
            "maxLength": 32,
            "description": "Business Reference of Status (CANCELLED|ACTIVE)"
          },
          "status_code": {
            "type": "string",
            "example": "R",
            "minLength": 1,
            "maxLength": 10,
            "description": "Status Code of the insurance (F,R,U,etc.)"
          },
          "status_name": {
            "type": "string",
            "example": "Canceled at the request of the insured party",
            "minLength": 1,
            "maxLength": 255,
            "description": "Status name (Enrolled, Cancelled by User, etc.)"
          },
          "activation_date": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Activation Date"
          },
          "deactivation_date": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Deactivation Date"
          },
          "reinstatement_date": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Reinstatement Date"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/insurance_products_parameters"
            }
          }
        }
      },
      "insurance_products_parameters": {
        "type": "object",
        "properties": {
          "insurance_company": {
            "type": "string",
            "example": "CS",
            "minLength": 1,
            "maxLength": 2,
            "description": "Insurance company code"
          },
          "grace_period_duration": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 2,
            "description": "Duration of grace period"
          },
          "grace_period_type": {
            "type": "string",
            "example": "M",
            "minLength": 1,
            "maxLength": 2,
            "description": "Type of grace period"
          },
          "dlq_cancel_auto_reinstate": {
            "type": "string",
            "example": "3",
            "minLength": 1,
            "maxLength": 2,
            "description": "Number of auto-reinstatements after delay"
          },
          "dlq_cancel_man_reinstate": {
            "type": "string",
            "example": "4",
            "minLength": 1,
            "maxLength": 2,
            "description": "Number of manual reinstatements after delay"
          },
          "allow_zero_coverage": {
            "type": "string",
            "example": "N",
            "minLength": 1,
            "maxLength": 1,
            "description": "Allow zero coverage"
          },
          "max_coverage_behavior": {
            "type": "string",
            "example": "A",
            "minLength": 1,
            "maxLength": 1,
            "description": "Max coverage behavior"
          },
          "minimum_fee": {
            "type": "string",
            "example": "5",
            "minLength": 1,
            "maxLength": 10,
            "description": "Minimum fee"
          },
          "base_fee": {
            "type": "string",
            "example": "0",
            "minLength": 1,
            "maxLength": 10,
            "description": "Base fee"
          },
          "percentage": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 5,
            "description": "Percentage"
          },
          "max_coverage": {
            "type": "string",
            "example": "7000",
            "minLength": 1,
            "maxLength": 10,
            "description": "Maximum coverage"
          },
          "max_age": {
            "type": "string",
            "example": "51",
            "minLength": 1,
            "maxLength": 3,
            "description": "Maximum age for coverage"
          }
        }
      },
      "balances": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Type of the balance"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency"
          },
          "amount": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 20,
            "description": "Balance ammount"
          }
        }
      },
      "plans": {
        "required": [
          "interest",
          "number_of_portions",
          "plan_number"
        ],
        "type": "object",
        "properties": {
          "plan_number": {
            "type": "string",
            "example": "60006",
            "minLength": 1,
            "maxLength": 5,
            "description": "Plan number"
          },
          "number_of_portions": {
            "type": "string",
            "example": "18",
            "minLength": 1,
            "maxLength": 18,
            "description": "Number of portions"
          },
          "interest": {
            "type": "string",
            "example": "2",
            "minLength": 1,
            "maxLength": 1,
            "description": "Interest"
          }
        }
      },
      "statement_details": {
        "required": [
          "last_statement_date",
          "statement_available_balance",
          "statement_closing_balance",
          "statement_date",
          "statement_opening_balance"
        ],
        "type": "object",
        "properties": {
          "statement_date": {
            "type": "string",
            "example": "15/12/2021",
            "minLength": 1,
            "maxLength": 10,
            "description": "Billing Date"
          },
          "last_statement_date": {
            "type": "string",
            "example": "15/05/2021",
            "minLength": 1,
            "maxLength": 3,
            "description": "Last billing date"
          },
          "statement_opening_balance": {
            "type": "string",
            "example": "0.00",
            "minLength": 1,
            "maxLength": 20,
            "description": "Statement Opening balance"
          },
          "statement_closing_balance": {
            "type": "string",
            "example": "6000.00",
            "minLength": 1,
            "maxLength": 20,
            "description": "Statement Closing balance"
          },
          "due_amount": {
            "type": "string",
            "example": "900.00",
            "minLength": 1,
            "maxLength": 20,
            "description": "Due amount"
          },
          "due_date": {
            "type": "string",
            "example": "05/01/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Statement due date in format YYYY-MM-DD"
          },
          "full_payment_amount": {
            "type": "string",
            "example": "6000.00",
            "minLength": 1,
            "maxLength": 20,
            "description": "Full payment amount/interest free amount"
          },
          "interest_this_statement": {
            "type": "string",
            "example": "500.00",
            "minLength": 1,
            "maxLength": 20,
            "description": "Interest amount in selected statement"
          },
          "statement_available_balance": {
            "type": "string",
            "example": "5000",
            "minLength": 1,
            "maxLength": 20,
            "description": "Available amount at the time of statement"
          },
          "reward_programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/reward_programs"
            }
          }
        }
      },
      "Transactions": {
        "required": [
          "card_identifier_type",
          "card_identifier_id",
          "masked_pan",
          "trans_date",
          "post_date",
          "debit_credit_flag",
          "response_code",
          "description",
          "transaction_ref_number",
          "currency",
          "amount",
          "source_currency",
          "source_amount"
        ],
        "type": "object",
        "properties": {
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 32,
            "description": "card_identifier_id"
          },
          "masked_pan": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 16,
            "description": "Pan in Masked form"
          },
          "trans_date": {
            "type": "string",
            "example": "01/12/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Transaction date & the format is DD/MM/YYYY"
          },
          "post_date": {
            "type": "string",
            "example": "04/12/2022",
            "minLength": 1,
            "maxLength": 10,
            "description": "Posting date & the format is  DD/MM/YYYY"
          },
          "debit_credit_flag": {
            "type": "string",
            "example": "D",
            "minLength": 1,
            "maxLength": 1,
            "description": "Type of direction"
          },
          "response_code": {
            "type": "string",
            "example": "00",
            "minLength": 1,
            "maxLength": 3,
            "description": "Return code"
          },
          "description": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 255,
            "description": "Transaction description"
          },
          "transaction_ref_number": {
            "type": "string",
            "example": "00",
            "minLength": 1,
            "maxLength": 12,
            "description": "Transaction reference number"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency code Ex: AED"
          },
          "amount": {
            "type": "string",
            "example": "210.00",
            "minLength": 1,
            "maxLength": 20,
            "description": "Amount"
          },
          "source_currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Transaction Currency"
          },
          "source_amount": {
            "type": "string",
            "example": "210.00",
            "minLength": 1,
            "maxLength": 20,
            "description": "Transaction amount"
          },
          "auth_code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Authorization code"
          },
          "merchant_id": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Merchant ID number"
          },
          "merchant_category_code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 4,
            "description": "SIC"
          },
          "merchant_name": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 64,
            "description": "Merchant Name"
          },
          "merchant_city": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 64,
            "description": "Merchant City"
          },
          "merchant_country": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 64,
            "description": "Merchant Country"
          },
          "transaction_code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Transaction code"
          },
          "merchant_category_group": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 20,
            "description": "Category Group"
          },
          "trans_id": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 20,
            "description": "Transaction Id"
          },
          "balance_type": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 20,
            "description": "RETAIL"
          }
        }
      },
      "reward_programs": {
        "type": "object",
        "properties": {
          "reward_type": {
            "type": "string",
            "example": "C55",
            "minLength": 1,
            "maxLength": 3,
            "description": "Reward type"
          },
          "reward_open_balance": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 3,
            "description": "Reward open balance"
          },
          "reward_balance": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 20,
            "description": "Reward balance on the current billing cycle"
          },
          "reward_earned": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 20,
            "description": "Reward earned points on the current billing cycle"
          },
          "reward_redeemed": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 20,
            "description": "Reward redeemed points on the current billing cycle"
          },
          "reward_adjust": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 20,
            "description": "Reward adjust points on the current billing cycle"
          },
          "reward_total_earned": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 20,
            "description": "Reward earned points on the current billing cycle"
          }
        }
      },
      "instalments": {
        "required": [
          "close_date",
          "creation_date",
          "currency",
          "due_amount",
          "fee",
          "first_payment_date",
          "instalment_id",
          "overdue_amount",
          "paid_amount",
          "plan_number",
          "portion_fee",
          "portion_principal",
          "portion_total",
          "principal",
          "total_amount",
          "written_off_amount"
        ],
        "type": "object",
        "properties": {
          "instalment_id": {
            "type": "string"
          },
          "plan_number": {
            "type": "string"
          },
          "creation_date": {
            "type": "string"
          },
          "first_payment_date": {
            "type": "string"
          },
          "close_date": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "total_amount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "paid_amount": {
            "type": "string"
          },
          "due_amount": {
            "type": "string"
          },
          "overdue_amount": {
            "type": "string"
          },
          "written_off_amount": {
            "type": "string"
          },
          "portion_total": {
            "type": "string"
          },
          "portion_principal": {
            "type": "string"
          },
          "portion_fee": {
            "type": "string"
          }
        }
      },
      "restrictions": {
        "type": "object",
        "properties": {
          "restriction_type": {
            "type": "string",
            "example": "PURCHASE",
            "minLength": 1,
            "maxLength": 100,
            "description": "Type of restrictions\nRestriction Type\n MOTO - Mail Order Telephone Order\n\n INTERNATIONAL - International Transaction\n \n ECOM - e-Commerce\n \n PERS_RESTR_CONTACTLESS - Contactless Transaction\n \n NFC - controls POS transactions only\n \n ATM - ATM Transaction\n \n ANY - Any Debit Transaction\n \n PURCHASE - Purchase Transactions\n \n INTERNATIONAL_SPECIFIC_COUNTRIES - foreign specific countries"
          },
          "isAllowed": {
            "type": "boolean",
            "example": "true",
            "description": "Is Allowed - The values expected - true/false"
          },
          "end_date": {
            "type": "string",
            "example": "2023-09-01T00:00:00.000Z",
            "minLength": 1,
            "maxLength": 10,
            "description": "End date"
          },
          "allowed_values": {
            "type": "string",
            "example": "2023-09-01T00:00:00.000Z",
            "minLength": 1,
            "maxLength": 100,
            "description": "Allowed values (in case of Restriction-type = INTERNATIONAL_SPECIFIC_COUNTRIES, please input comma seperated list of country codes here)"
          }
        }
      },
      "limits": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "FIN_LIMIT",
            "minLength": 1,
            "maxLength": 32,
            "description": "Credit limit typapplicable only for credit card products"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Credit limit currency - applicable only for credit card products"
          },
          "value": {
            "type": "string",
            "example": "55000",
            "minLength": 1,
            "maxLength": 20,
            "description": "Credit limit value - applicable only for credit card products"
          }
        }
      },
      "card": {
        "required": [
          "branch_code",
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "branch_code": {
            "type": "string",
            "example": "982",
            "minLength": 1,
            "maxLength": 10,
            "description": "Branch Code, if no branches are used, the code must be same as bank_code"
          },
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card_update_custom_fields"
            }
          }
        }
      },
      "status": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "BCC-CARD-982",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status Type"
          },
          "value": {
            "type": "string",
            "example": "T",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status value"
          }
        }
      },
      "account_status": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "BCC-ACC2-982",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status Type"
          },
          "value": {
            "type": "string",
            "example": "T",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status value"
          }
        }
      },
      "email": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "example": "abc@email.com",
            "minLength": 1,
            "maxLength": 32,
            "description": "reciever email"
          },
          "CC": {
            "type": "string",
            "example": "abc@email.com",
            "minLength": 1,
            "maxLength": 32,
            "description": "CC"
          },
          "subject": {
            "type": "string",
            "example": "SMS Notification Service",
            "minLength": 1,
            "maxLength": 20,
            "description": "Email Subject line"
          },
          "body": {
            "type": "string",
            "example": "B",
            "minLength": 1,
            "maxLength": 255,
            "description": "Body of the email"
          },
          "header": {
            "type": "string",
            "example": "header details",
            "minLength": 1,
            "maxLength": 255,
            "description": "Any header to be added"
          },
          "footer": {
            "type": "string",
            "example": "footer details",
            "minLength": 1,
            "maxLength": 255,
            "description": "Any footer to be added"
          }
        }
      },
      "sms": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "details ",
            "minLength": 1,
            "maxLength": 255,
            "description": "SMS Details"
          },
          "mobile_number": {
            "type": "string",
            "example": "97155XXXXXXX",
            "minLength": 1,
            "maxLength": 32,
            "description": "Mobile Number"
          },
          "language_indicator": {
            "type": "string",
            "example": "ENG/ARA/E/A",
            "minLength": 1,
            "maxLength": 3,
            "description": "any of the value of ENG/ARA"
          }
        }
      },
      "override_options": {
        "type": "object",
        "properties": {
          "waive_fee": {
            "type": "string",
            "example": "Y",
            "minLength": 1,
            "maxLength": 1,
            "description": "Processing Fee Waiver"
          },
          "ad-hoc_fee_type": {
            "type": "string",
            "example": "F",
            "minLength": 1,
            "maxLength": 1,
            "description": "Ad-hoc Fee type: P - percentage, F - fixed"
          },
          "ad-hoc_fee": {
            "type": "string",
            "example": "25.26",
            "minLength": 1,
            "maxLength": 18,
            "description": "Ad-hoc Fee value: the number will be treated as percentage or amount, depending on the AH_FEE_TYPE"
          },
          "interest_rate": {
            "type": "string",
            "example": "15.45",
            "minLength": 1,
            "maxLength": 3,
            "description": "Instalment fee rate"
          },
          "portion_amount": {
            "type": "string",
            "example": "50000.0",
            "minLength": 1,
            "maxLength": 18,
            "description": "Desired maximum amount on the portion"
          },
          "number_of_portions": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 4,
            "description": "Number of portions"
          },
          "grace_period": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 3,
            "description": "Number of cycles to shift before billing the first portion."
          },
          "free_period_number": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 3,
            "description": "Number of portions to apply zero fee rate to. The period starts with the first portion."
          }
        }
      },
      "cards": {
        "required": [
          "card_identifier_type",
          "card_identifier_id",
          "masked_pan",
          "card_display_name",
          "CIF_number",
          "card_expiry_date",
          "card_role",
          "account_number",
          "product_code",
          "card_virtual_indicator"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100130233802017",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "contract_name": {
            "type": "string",
            "example": "999841XXXXXX3382",
            "minLength": 1,
            "maxLength": 100,
            "description": "Contract name"
          },
          "masked_pan": {
            "type": "string",
            "example": "999841XXXXXX3382",
            "minLength": 1,
            "maxLength": 16,
            "description": "Masked PAN"
          },
          "card_display_name": {
            "type": "string",
            "example": "JOHN DOE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Embossed Name"
          },
          "CIF_number": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "CIF Number"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "3001",
            "minLength": 1,
            "maxLength": 4,
            "description": "YYMM Ex 2310"
          },
          "card_role": {
            "type": "string",
            "example": "P",
            "minLength": 1,
            "maxLength": 1,
            "description": "Card Role Primary/Supplementary"
          },
          "account_number": {
            "type": "string",
            "example": "0009821110000000049",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_002_P",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product code"
          },
          "product_group": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product Group"
          },
          "product_short_code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product short code"
          },
          "product_name": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product name"
          },
          "card_brand": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card brand"
          },
          "card_virtual_indicator": {
            "type": "string",
            "example": "V",
            "minLength": 1,
            "maxLength": 1,
            "description": "P/V"
          },
          "current_pin_attempt": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 3,
            "description": "Current pin attempt"
          },
          "max_pin_attempt": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 3,
            "description": "Max pin attempt"
          },
          "set_pin_indicator": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 3,
            "description": "Additional flag to identify if PIN set was done"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statuses"
            }
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listofcardsbalances"
            }
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_fields"
            }
          }
        }
      },
      "listofcardsbalances": {
        "required": [
          "type",
          "currency"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "AVAILABLE",
            "minLength": 1,
            "maxLength": 32,
            "description": "Balance type"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 5,
            "description": "Currency"
          },
          "amount": {
            "type": "string",
            "example": "55000",
            "minLength": 1,
            "maxLength": 20,
            "description": "Balance Amount"
          }
        }
      },
      "personal_details": {
        "required": [
          "first_name",
          "last_name",
          "citizenship",
          "date_of_birth"
        ],
        "properties": {
          "gender": {
            "type": "string",
            "example": "M",
            "minLength": 1,
            "maxLength": 6,
            "description": "Gender"
          },
          "title": {
            "type": "string",
            "example": "Mr",
            "minLength": 1,
            "maxLength": 5,
            "description": "Title"
          },
          "first_name": {
            "type": "string",
            "example": "James",
            "minLength": 1,
            "maxLength": 255,
            "description": "First Name"
          },
          "last_name": {
            "type": "string",
            "example": "Robert",
            "minLength": 1,
            "maxLength": 255,
            "description": "Last Name"
          },
          "middle_name": {
            "type": "string",
            "example": "Robert",
            "minLength": 1,
            "maxLength": 255,
            "description": "Middle_name"
          },
          "citizenship": {
            "type": "string",
            "example": "ARE",
            "minLength": 1,
            "maxLength": 3,
            "description": "citizenship"
          },
          "marital_status": {
            "type": "string",
            "example": "M",
            "minLength": 1,
            "maxLength": 18,
            "description": "Marital status"
          },
          "date_of_birth": {
            "type": "string",
            "example": "1993-07-31",
            "minLength": 1,
            "maxLength": 15,
            "description": "Date of birth"
          },
          "place_of_birth": {
            "type": "string",
            "example": "Dubai",
            "minLength": 1,
            "maxLength": 255,
            "description": "Place of birth"
          },
          "language": {
            "type": "string",
            "example": "ENG",
            "minLength": 1,
            "maxLength": 3,
            "description": "Language ISO code"
          },
          "security_name": {
            "type": "string",
            "example": "Tima",
            "minLength": 1,
            "maxLength": 255,
            "description": "This field is used by Fraud monitoring agents to validate cardholder verification on call This is not mandatory for issuers not using Fraud monitoring service"
          }
        },
        "type": "object"
      },
      "contact_details": {
        "properties": {
          "home_phone": {
            "type": "string",
            "example": "919702310992",
            "minLength": 1,
            "maxLength": 32,
            "description": "Home Phone Number"
          },
          "work_phone": {
            "type": "string",
            "example": "919702310992",
            "minLength": 1,
            "maxLength": 32,
            "description": "Mobile Number"
          },
          "mobile_phone": {
            "type": "string",
            "example": "919702310992",
            "minLength": 1,
            "maxLength": 32,
            "description": "Mobile Number"
          },
          "email": {
            "type": "string",
            "example": "James.Robert@network.global",
            "minLength": 1,
            "maxLength": 255,
            "description": "Email address"
          }
        },
        "type": "object"
      },
      "custom_fields": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 128,
            "description": "Client type Tag"
          },
          "value": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 128,
            "description": "Tag value"
          }
        }
      },
      "identity_proof_document": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "example": "R589856",
            "minLength": 1,
            "maxLength": 20,
            "description": "An identity number can be any valid id number which is provided by government that may be used to prove a person's identity."
          },
          "type": {
            "type": "string",
            "example": "Passport",
            "minLength": 1,
            "maxLength": 20,
            "description": "An identity document's type the expected document types are passport,nationalId,driving licence"
          },
          "expiry_date": {
            "type": "string",
            "example": "2025-05-20",
            "minLength": 1,
            "maxLength": 10,
            "description": "The identity document's expiry date the format should be - YYYY-MM-DD"
          }
        }
      },
      "supplementary_documents": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "example": "R589856",
            "minLength": 1,
            "maxLength": 20,
            "description": "Supplemental documents are supporting materials"
          },
          "type": {
            "type": "string",
            "example": "Passport",
            "minLength": 1,
            "maxLength": 20,
            "description": "Supplemental documents are supporting materials"
          },
          "expiry_date": {
            "type": "string",
            "example": "2025-05-20",
            "minLength": 1,
            "maxLength": 10,
            "description": "YYYY-MM-DD"
          }
        }
      },
      "employment_details": {
        "type": "object",
        "properties": {
          "employer_name": {
            "type": "string",
            "example": "ABC Pvt Ltd",
            "minLength": 1,
            "maxLength": 64,
            "description": "Company Name of the client"
          },
          "income": {
            "type": "string",
            "example": "20000",
            "minLength": 1,
            "maxLength": 64,
            "description": "Income of the client"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer",
            "minLength": 1,
            "maxLength": 64,
            "description": "Occupation/Trade"
          }
        }
      },
      "addresses": {
        "required": [
          "address_type",
          "address_line_1",
          "city",
          "country"
        ],
        "type": "object",
        "properties": {
          "address_type": {
            "type": "string",
            "example": "PERMANENT",
            "minLength": 1,
            "maxLength": 20,
            "description": "The type of the address, just like multiple phone number types, we can have multiple addresses type . Ex PERMANENT/PRESENT/WORK/HOME"
          },
          "address_line_1": {
            "type": "string",
            "example": "Al Mahata Towers",
            "minLength": 1,
            "maxLength": 255,
            "description": "Building Name of the address"
          },
          "address_line_2": {
            "type": "string",
            "example": "LandLord",
            "minLength": 1,
            "maxLength": 255,
            "description": "This defines wheather the address belongs to the Landlord or the Tenant."
          },
          "address_line_3": {
            "type": "string",
            "example": "House no - 1105",
            "minLength": 1,
            "maxLength": 255,
            "description": "House Name or House Number of the address"
          },
          "address_line_4": {
            "type": "string",
            "example": "Al Qasmia",
            "minLength": 1,
            "maxLength": 255,
            "description": "Street Name of the address"
          },
          "email": {
            "type": "string",
            "example": "James.Robert@network.global",
            "minLength": 1,
            "maxLength": 255,
            "description": "Valid email address of the client"
          },
          "phone": {
            "type": "string",
            "example": 919702310992,
            "minLength": 1,
            "maxLength": 32,
            "description": "Phone number"
          },
          "city": {
            "type": "string",
            "example": "Dubai",
            "minLength": 1,
            "maxLength": 255,
            "description": "City name"
          },
          "country": {
            "type": "string",
            "example": "ARE",
            "minLength": 1,
            "maxLength": 255,
            "description": "Country Code Ex SAU"
          },
          "zip": {
            "type": "string",
            "example": "24537",
            "minLength": 1,
            "maxLength": 32,
            "description": "Zip Code"
          },
          "state": {
            "type": "string",
            "example": "Dubai",
            "minLength": 1,
            "maxLength": 32,
            "description": "State"
          }
        }
      },
      "statuses": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "BCC-CARD-982",
            "minLength": 1,
            "maxLength": 10,
            "description": "Status type"
          },
          "value": {
            "type": "string",
            "example": "_",
            "minLength": 1,
            "maxLength": 10,
            "description": "Status value"
          },
          "changed_date": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 10,
            "description": "Date of status change"
          },
          "description": {
            "type": "string",
            "example": "SPACE",
            "minLength": 1,
            "maxLength": 100,
            "description": "Brief description"
          }
        }
      },
      "custom_fields_card_create": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "contract_idt_scheme",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag e.g. contract_idt_scheme"
          },
          "value": {
            "type": "string",
            "example": "CONTRACT_NUMBER",
            "minLength": 1,
            "maxLength": 128,
            "description": "Custom Tag value"
          }
        }
      },
      "instant_issuance": {
        "type": "object",
        "properties": {
          "online_embossing": {
            "type": "string",
            "example": "Y",
            "minLength": 1,
            "maxLength": 1,
            "description": "This will tag the physical card for online embossing"
          },
          "embossing_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/embossing_tags"
            }
          }
        }
      },
      "embossing_tags": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "EF.TAG1",
            "minLength": 1,
            "maxLength": 128,
            "description": "Key of custom information can be provided as part of this field. These tags are only informational purpose and can be viewed at card plastic info screen"
          },
          "value": {
            "type": "string",
            "example": "A1B2C3D4E5",
            "minLength": 1,
            "maxLength": 128,
            "description": "Value of custom information can be provided as part of this field. These tags are only informational purpose and can be viewed at card plastic info screen"
          }
        }
      },
      "switch_restriction": {
        "type": "object",
        "properties": {
          "isAllowed": {
            "type": "boolean",
            "example": "true",
            "description": "true/false"
          },
          "restriction_type": {
            "type": "string",
            "example": "MOTO",
            "minLength": 1,
            "maxLength": 100,
            "description": "Restriction Type\n\n MOTO - Mail Order Telephone Order\n \n INTERNATIONAL - International Transaction\n \n ECOM - e-Commerce\n \n PERS_RESTR_CONTACTLESS - Contactless Transaction\n \n NFC - controls POS transactions only\n \n ATM - ATM Transaction\n \n ANY - Any Debit Transaction\n \n PURCHASE - Purchase Transactions\n \n INTERNATIONAL_SPECIFIC_COUNTRIES - to allow specific countries "
          },
          "end_date": {
            "type": "string",
            "example": "2023-09-01",
            "minLength": 1,
            "maxLength": 10,
            "description": "End Date"
          },
          "allowed_values": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 100,
            "description": "Allowed values (in case of Restriction-type = INTERNATIONAL_SPECIFIC_COUNTRIES, please input comma seperated list of country codes here)"
          }
        }
      },
      "update_limits": {
        "type": "object",
        "properties": {
          "limit_type": {
            "type": "string",
            "example": "DAILY",
            "minLength": 1,
            "maxLength": 100,
            "description": "Period"
          },
          "max_amount": {
            "type": "string",
            "example": "1000",
            "minLength": 1,
            "maxLength": 18,
            "description": "Maximum overall limit"
          }
        }
      },
      "card_update_custom_fields": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "CN-CONTRACT_NAME",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag e.g. CN-CONTRACT_NAME"
          },
          "value": {
            "type": "string",
            "example": "John doe",
            "minLength": 1,
            "maxLength": 128,
            "description": "Custom Tag value"
          }
        }
      },
      "custom_fields_card_status": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "bc_channel",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag e.g. bc_channel"
          },
          "value": {
            "type": "string",
            "example": "TIB2",
            "minLength": 1,
            "maxLength": 128,
            "description": "Custom Tag value"
          }
        }
      },
      "custom_fields_card_replacement": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "preemb",
            "minLength": 1,
            "maxLength": 32,
            "description": "Custom Tag e.g. preemb"
          },
          "value": {
            "type": "string",
            "example": "N",
            "minLength": 1,
            "maxLength": 128,
            "description": "Custom Tag value"
          }
        }
      },
      "NISrvRequestCardContactDetails": {
        "required": [
          "NISrvRequest"
        ],
        "type": "object",
        "properties": {
          "NISrvRequest": {
            "$ref": "#/components/schemas/CardContactDetailsReq"
          }
        }
      },
      "CardContactDetailsReq": {
        "required": [
          "request_card_contact_details"
        ],
        "type": "object",
        "properties": {
          "request_card_contact_details": {
            "$ref": "#/components/schemas/request_card_contact_details"
          }
        }
      },
      "request_card_contact_details": {
        "required": [
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardContactDetailsHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CardContactDetailsBody"
          }
        }
      },
      "CardContactDetailsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_CONTACT_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_CARD_CONTACT_DETAILS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "The bank_id sent in the request will be sent back in response in this field Eg ABCD"
          }
        }
      },
      "CardContactDetailsBody": {
        "required": [
          "card_identifier_id"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          }
        }
      },
      "NISrvResponseCardContactDetails": {
        "required": [
          "NISrvResponse"
        ],
        "type": "object",
        "properties": {
          "NISrvResponse": {
            "$ref": "#/components/schemas/CardContactDetailsRes"
          }
        }
      },
      "CardContactDetailsRes": {
        "required": [
          "response_card_contact_details"
        ],
        "type": "object",
        "properties": {
          "response_card_contact_details": {
            "$ref": "#/components/schemas/response_card_contact_details"
          }
        }
      },
      "response_card_contact_details": {
        "required": [
          "exception_details",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/CardContactDetailsResHeader"
          },
          "exception_details": {
            "$ref": "#/components/schemas/exception_details"
          },
          "body": {
            "$ref": "#/components/schemas/CardContactDetailsResBody"
          }
        }
      },
      "CardContactDetailsResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "The msg_id sent in the request will be sent back in response in this field"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_CONTACT_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REP_CARD_CONTACT_DETAILS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank code is Unique Id 3 digit number for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ â€œ982â€ is used"
          }
        }
      },
      "CardContactDetailsResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 20,
            "description": "Card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 32,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "contact_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card_contact_details"
            }
          }
        }
      },
      "card_contact_details": {
        "type": "object",
        "properties": {
          "mobile_phone": {
            "type": "string",
            "example": "919702310992",
            "minLength": 1,
            "maxLength": 20,
            "description": "Mobile Number"
          },
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "email": {
            "type": "string",
            "example": "vikas.mane@network.global",
            "minLength": 1,
            "maxLength": 20,
            "description": "Email address"
          },
          "language": {
            "type": "string",
            "example": "ENG",
            "minLength": 1,
            "maxLength": 5,
            "description": "Language ISO code"
          }
        }
      },
      "GetTariffDetailsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_CARD_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Static Value -  REQ_CARD_DETAILS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "GetTariffDetailsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984100148297467162",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "tariff_key": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tariff_key"
            }
          }
        }
      },
      "tariff_key": {
        "type": "object",
        "properties": {
          "CP_REPL": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Type of the balance"
          },
          "CP_REPL_NOFEE": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Limit currency"
          }
        }
      },
      "tariff_details": {
        "required": [
          "code",
          "currency"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Type of the balance"
          },
          "fee_base": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Limit currency"
          },
          "fee_min": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Type of the balance"
          },
          "fee_max": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Limit currency"
          },
          "fee_pcnt": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Limit currency"
          },
          "is_personal": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Type of the balance"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Currency code Ex: AED"
          }
        }
      },
      "GetTariffDetailsResHeader": {
        "required": [
          "msg_id",
          "msg_type",
          "msg_function",
          "src_application",
          "bank_id"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Unique Source Message ID eg ada123456fdsf"
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_CARD_DETAILS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Default REP_CARD_DETAILS"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "tracking_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 15,
            "description": "Transaction Tracking Id"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          },
          "instance_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 10,
            "description": "instance_id"
          }
        }
      },
      "GetTariffDetailsResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "454545XXXXXX1234",
            "minLength": 1,
            "maxLength": 20,
            "description": "Card identifier id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 32,
            "description": "CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "tariff_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tariff_details"
            }
          }
        }
      },
      "AccountHierarchyEnquiryHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ACCOUNT_HIERARCHY_ENQUIRY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_ACCOUNT_HIERARCHY_ENQUIRYâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountHierarchyEnquiryBody": {
        "required": [
          "customer_id",
          "account_identifier_id",
          "account_identifier_type"
        ],
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "100000027",
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "account_identifier_id": {
            "type": "string",
            "example": 652589,
            "minLength": 1,
            "maxLength": 32,
            "description": "Account Identifer ID should be passed if customer_id is not sent as part of the request"
          },
          "account_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "level_down": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 1,
            "description": "It is applicable for corporate hierarchy value can be from 1 to 5"
          },
          "client_type": {
            "type": "string",
            "example": "C",
            "minLength": 1,
            "maxLength": 10,
            "description": "It is applicable for corporate hierarchy -\nValues: Commercial â†’ C \nPrivate â†’ P "
          },
          "balance_list": {
            "type": "string",
            "example": "AVAILABLE",
            "minLength": 1,
            "maxLength": 512,
            "description": "The values can be - AVAILABLE,BLOCKED,TOTAL_BALANCE"
          }
        }
      },
      "AccountHierarchyEnquiryResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ACCOUNT_HIERARCHY_ENQUIRY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_ACCOUNT_HIERARCHY_ENQUIRYâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "AccountHierarchyEnquiryResBody": {
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/accounts"
          }
        }
      },
      "BulkCardCreateHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_BULK_CARD_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_BULK_CARD_CREATEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BulkCardCreateBody": {
        "required": [
          "product_code",
          "number_of_cards",
          "card_name"
        ],
        "type": "object",
        "properties": {
          "client_number": {
            "type": "string",
            "example": "112233719988744606",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number/Customer Id or CIF the card will be created under it"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_001_BULK",
            "minLength": 1,
            "maxLength": 50,
            "description": "Product code"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "2803",
            "minLength": 1,
            "maxLength": 4,
            "description": "Card expiry date\n\nformat YYMM"
          },
          "number_of_cards": {
            "type": "string",
            "example": "10",
            "minLength": 1,
            "maxLength": 4,
            "description": "Number of cards needs to be generated"
          },
          "card_design_flag": {
            "type": "string",
            "example": "01",
            "minLength": 1,
            "maxLength": 2,
            "description": "Card design flag"
          },
          "batch_size": {
            "type": "string",
            "example": "2",
            "minLength": 1,
            "maxLength": 4,
            "description": "batch size is number between 2 and 1000 \n\n When this parameter is provided, the generated cards will be split in multiple batches. \n\n Suffix '-<counter>' will be appended to the batch_idt saved in the cards. Example: 'myfirstbatch-001', 'myfirstbatch-002' etc. \n\n If dividing the number_of_cards by batch_size results in more than 999 batches, the request will be declined."
          },
          "card_name": {
            "type": "string",
            "example": "EMB NAME",
            "minLength": 1,
            "maxLength": 21,
            "description": "Embossing name applied to all the cards"
          },
          "company_name": {
            "type": "string",
            "example": "NI",
            "minLength": 1,
            "maxLength": 21,
            "description": "Embossing company name applied to all the cards"
          },
          "batch_idt": {
            "type": "string",
            "example": "BT20240703111111",
            "minLength": 1,
            "maxLength": 60,
            "description": "batch id, is an Id managed by FI system and no uniqueness checking on it from our side, if this was not provided, we will generate it."
          },
          "request_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/request_details"
            }
          }
        }
      },
      "BulkCardCreateResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_BULK_CARD_CREATE",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_BULK_CARD_CREATEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BulkCardCreateResBody": {
        "required": [
          "appl_reg_number"
        ],
        "type": "object",
        "properties": {
          "appl_reg_number": {
            "type": "string",
            "example": "BULK_ISS_240314020101",
            "minLength": 1,
            "maxLength": 60,
            "description": "Unique batch code that can be used to query bulk card list to get all cards created as part of this application request "
          }
        }
      },
      "BulkListOfCardsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_LIST_OF_BULK_CARD",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_BULK_CARD_LISTâ€"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BulkListOfCardsBody": {
        "type": "object",
        "properties": {
          "client_number": {
            "type": "string",
            "example": "112233719988744606",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number/Customer Id or CIF linked to the card"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_001_BULK",
            "minLength": 1,
            "maxLength": 50,
            "description": "Product Code"
          },
          "product_code_tgt": {
            "type": "string",
            "example": "982_AED_001",
            "minLength": 1,
            "maxLength": 50,
            "description": "Code of the client card-level product for which this bulk card is suitable"
          },
          "contr_status_code": {
            "type": "string",
            "example": "BULK_IN_PROGRESS",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status of the card in the bulk batch"
          },
          "appl_reg_number": {
            "type": "string",
            "example": "BULK_ISS_240314020101",
            "minLength": 1,
            "maxLength": 60,
            "description": "Unique batch id genereted by NI system"
          },
          "batch_idt": {
            "type": "string",
            "example": "BT20240703111111",
            "minLength": 1,
            "maxLength": 60,
            "description": "batch Idt"
          },
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          }
        }
      },
      "BulkListOfCardsResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_LIST_OF_BULK_CARD",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_BULK_CARD_LISTâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BulkListOfCardsResBody": {
        "required": [
          "branches"
        ],
        "type": "object",
        "properties": {
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/branches_bulk_card_list"
            }
          }
        }
      },
      "BulkListOfCardsStatusResBody": {
        "type": "object",
        "properties": {
          "appl_resp_code": {
            "type": "string",
            "example": "0",
            "minLength": 1,
            "maxLength": 3,
            "description": "Application response code"
          },
          "appl_resp_text": {
            "type": "string",
            "example": "Adv Application Accept action completed successfully",
            "minLength": 1,
            "maxLength": 255,
            "description": "Application response text"
          },
          "appl_posting_status": {
            "type": "string",
            "example": "Waiting",
            "minLength": 1,
            "maxLength": 20,
            "description": "Application posting status"
          }
        }
      },
      "branches_bulk_card_list": {
        "type": "object",
        "properties": {
          "client_number": {
            "type": "string",
            "example": "112233719988744606",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number/Customer Id or CIF linked to the card"
          },
          "client_short_name": {
            "type": "string",
            "example": "NI",
            "minLength": 1,
            "maxLength": 255,
            "description": "Client short name "
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/products_bulk_card_list"
            }
          }
        }
      },
      "products_bulk_card_list": {
        "type": "object",
        "properties": {
          "batch_idt": {
            "type": "string",
            "example": "BT20240703111111",
            "minLength": 1,
            "maxLength": 60,
            "description": "batch Idt"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cards_bulk_card_list"
            }
          }
        }
      },
      "cards_bulk_card_list": {
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "pan": {
            "type": "string",
            "example": "9998510116139070",
            "minLength": 1,
            "maxLength": 16,
            "description": "card number"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_001_BULK",
            "minLength": 1,
            "maxLength": 50,
            "description": "Product code"
          },
          "product_name": {
            "type": "string",
            "example": "982-PS AED Visa Classic - Bulk",
            "minLength": 1,
            "maxLength": 100,
            "description": "Product name"
          },
          "date_open": {
            "type": "string",
            "example": "2022-01-01",
            "minLength": 1,
            "maxLength": 10,
            "description": "Date of card creation"
          },
          "date_closed": {
            "type": "string",
            "example": "2022-01-01",
            "minLength": 1,
            "maxLength": 10,
            "description": "Date of closing the card"
          },
          "contr_status_code": {
            "type": "string",
            "example": "BULK_IN_PROGRESS",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status of the card in the bulk batch"
          },
          "production_status": {
            "type": "string",
            "example": "M",
            "minLength": 1,
            "maxLength": 1,
            "description": "Card production status, M: Marked for embossing, L: Locked"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "0528",
            "minLength": 1,
            "maxLength": 4,
            "description": "Card's expiry date the Format is YYMM"
          },
          "card_name": {
            "type": "string",
            "example": "JAMES ROBERT",
            "minLength": 1,
            "maxLength": 21,
            "description": "Card embossing name defined on client level should be in Upper case"
          },
          "company_name": {
            "type": "string",
            "example": "NI",
            "minLength": 1,
            "maxLength": 21,
            "description": "Embossing company name applied to all the cards"
          }
        }
      },
      "request_details": {
        "type": "object",
        "properties": {
          "src_app_code": {
            "type": "string",
            "example": "test_app",
            "minLength": 1,
            "maxLength": 32,
            "description": "Free text sent by the you, to identify the calling application. Optimized for machine-readable processing like grouping and filtering."
          },
          "src_app_name": {
            "type": "string",
            "example": "App Name",
            "minLength": 1,
            "maxLength": 64,
            "description": "Additional tag, repeating the src_app_code, but with a value optimized for direct display."
          },
          "ext_user_id": {
            "type": "string",
            "example": "user1",
            "minLength": 1,
            "maxLength": 32,
            "description": "Free text sent by the bank, to identify the external systemâ€™s user."
          }
        }
      },
      "BulkCardSummaryHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_BULK_CARD_SUMMARY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_BULK_CARD_SUMMARYâ€"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BulkCardSummaryBody": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string",
            "example": "982_AED_001_BULK",
            "minLength": 1,
            "maxLength": 50,
            "description": "Product Code"
          },
          "product_code_tgt": {
            "type": "string",
            "example": "982_AED_001",
            "minLength": 1,
            "maxLength": 50,
            "description": "Code of the client card-level product for which this bulk card is suitable"
          },
          "client_number": {
            "type": "string",
            "example": "112233719988744606",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number/Customer Id or CIF the card will be created under it"
          },
          "contr_status_code": {
            "type": "string",
            "example": "BULK_IN_PROGRESS",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status of the card in the bulk batch"
          }
        }
      },
      "BulkCardSummaryResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_BULK_CARD_SUMMARY",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_BULK_CARD_SUMMARYâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BulkCardSummaryResBody": {
        "required": [
          "summary"
        ],
        "type": "object",
        "properties": {
          "summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/summary_bulk_card_summary"
            }
          }
        }
      },
      "summary_bulk_card_summary": {
        "required": [
          "product_code",
          "product_name",
          "contr_status_code",
          "production_status",
          "number_of_cards"
        ],
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string",
            "example": "982_AED_001_BULK",
            "minLength": 1,
            "maxLength": 50,
            "description": "Product code"
          },
          "product_name": {
            "type": "string",
            "example": "982-PS AED Visa Classic - Bulk",
            "minLength": 1,
            "maxLength": 100,
            "description": "Product name"
          },
          "client_number": {
            "type": "string",
            "example": "112233719988744606",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number/Customer Id or CIF linked to the card"
          },
          "client_short_name": {
            "type": "string",
            "example": "NI",
            "minLength": 1,
            "maxLength": 255,
            "description": "Client short name "
          },
          "contr_status_code": {
            "type": "string",
            "example": "BULK_IN_PROGRESS",
            "minLength": 1,
            "maxLength": 32,
            "description": "Status of the card in the bulk batch"
          },
          "production_status": {
            "type": "string",
            "example": "M",
            "minLength": 1,
            "maxLength": 1,
            "description": "Card production status, M: Marked for embossing, L: Locked"
          },
          "number_of_cards": {
            "type": "string",
            "example": "10",
            "minLength": 1,
            "maxLength": 4,
            "description": "Number of cards"
          }
        }
      },
      "BulkMoveCardsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_MOVE_BULK_CARDS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_BULK_MOVE_CARDSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "BulkMoveCardsBody": {
        "required": [
          "client_number_from",
          "client_number_to",
          "number_of_cards",
          "request_details"
        ],
        "type": "object",
        "properties": {
          "client_number_from": {
            "type": "string",
            "example": "112233719988744606",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number/Customer Id or CIF from which the cards will be moved from"
          },
          "client_number_to": {
            "type": "string",
            "example": "112233719988744607",
            "minLength": 1,
            "maxLength": 20,
            "description": "Client number/Customer Id or CIF from which the cards will be moved to"
          },
          "number_of_cards": {
            "type": "string",
            "example": "10",
            "minLength": 1,
            "maxLength": 4,
            "description": "Number of cards needs to be generated"
          },
          "batch_idt": {
            "type": "string",
            "example": "BT20240703111111",
            "minLength": 1,
            "maxLength": 60,
            "description": "batch id, is an Id managed by FI system and no uniqueness checking on it from our side, if this was not provided, we will generate it."
          },
          "bulk_preemb_idt_list": {
            "type": "string",
            "example": "9984100116414979716,99984100129858230678,99984100195464865918",
            "minLength": 1,
            "maxLength": 3000,
            "description": "Contain comma-separated list of clear card number or EXIDs of the cards to be moved."
          },
          "bulk_preemb_idt_scheme": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "request_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/request_details"
            }
          }
        }
      },
      "BulkMoveCardsResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_MOVE_BULK_CARDS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_BULK_CARD_CREATEâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "SwitchMCCHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€"
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ENABLE_DISABLE_MCC",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_ENABLE_DISABLE_MCCâ€"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "SwitchMCCBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984104111610175918",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifer ID"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "mcc_allowed_group_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC groups will be permitted, while all others will be restricted"
                }
              }
            }
          },
          "mcc_blocked_group_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC groups will be restricted, while all others will be permitted"
                }
              }
            }
          },
          "mcc_allowed_code_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC codes will be permitted, while all others will be restricted"
                }
              }
            }
          },
          "mcc_block_code_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC codes will be restricted, while all others will be permitted"
                }
              }
            }
          }
        }
      },
      "SwitchMCCResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTION â€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ENABLE_DISABLE_MCC",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_ENABLE_DISABLE_MCCâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetMCCControlsHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRYâ€"
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_GET_MCC_CONTROLS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_GET_MCC_CONTROLSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetMCCControlsBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984104111610175918",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifer ID"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          }
        }
      },
      "GetMCCControlsResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "ENQUIRY",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œENQUIRY â€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_GET_MCC_CONTROLS",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_GET_MCC_CONTROLSâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "GetMCCControlsResBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984104111610175918",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifer ID"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "mcc_allowed_group_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC groups will be permitted, while all others will be restricted"
                }
              }
            }
          },
          "mcc_blocked_group_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC groups will be restricted, while all others will be permitted"
                }
              }
            }
          },
          "mcc_allowed_code_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC codes will be permitted, while all others will be restricted"
                }
              }
            }
          },
          "mcc_block_code_list": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "",
                  "minLength": 1,
                  "maxLength": 30,
                  "description": "By specifying this array of codes, only the designated MCC codes will be restricted, while all others will be permitted"
                }
              }
            }
          }
        }
      },
      "OnlineEmbossingHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTIONâ€"
          },
          "msg_function": {
            "type": "string",
            "example": "REQ_ONLINE_EMBOSSING",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREQ_ONLINE_EMBOSSINGâ€"
          },
          "src_application": {
            "type": "string",
            "example": "BNK",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the request - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "OnlineEmbossingBody": {
        "required": [
          "card_identifier_id",
          "card_identifier_type",
          "card_expiry_date"
        ],
        "type": "object",
        "properties": {
          "card_identifier_id": {
            "type": "string",
            "example": "99984104111610175918",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifer ID"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "YYMM",
            "minLength": 1,
            "maxLength": 4,
            "description": "card expiry date."
          },
          "card_sequence_number": {
            "type": "string",
            "example": "1",
            "minLength": 1,
            "maxLength": 2,
            "description": "card sequence number."
          },
          "request_id": {
            "type": "string",
            "example": "EMB98201011970000001B154B5A2B",
            "minLength": 1,
            "maxLength": 29,
            "description": "Request Id in the below format EMB - constant XXX - bank code DDMMYYYYHH24MISS YYYYYYYYY - AN random value example: EMB36001011970000001NB1D2B5A2B\nif request_id was not sent, tibco to generate it, and if it was sent tibco to reject if length is not 29 and not starting with EMB and bank code"
          }
        }
      },
      "OnlineEmbossingResHeader": {
        "required": [
          "bank_id",
          "msg_function",
          "msg_id",
          "msg_type",
          "src_application",
          "target_application",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "example": "236001",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message ID, this field should be unique id for each Api call. This will be generated from client side. \n\n If the same message ID is used the system will decline the API call with Error Description â€œDuplicate Message IDâ€ "
          },
          "msg_type": {
            "type": "string",
            "example": "TRANSACTION",
            "minLength": 1,
            "maxLength": 12,
            "description": "Message Type â€“ This can have either â€œTRANSACTIONâ€ or â€œENQUIRYâ€ \n\n As for this API the value expected is â€œTRANSACTION â€ "
          },
          "msg_function": {
            "type": "string",
            "example": "REP_ONLINE_EMBOSSING",
            "minLength": 1,
            "maxLength": 50,
            "description": "Message functions: Should be  â€œREP_ONLINE_EMBOSSINGâ€"
          },
          "src_application": {
            "type": "string",
            "example": "IVR",
            "minLength": 1,
            "maxLength": 10,
            "description": "Source Application: This is a free Text and the client can populate the source system from where the API is Initiated \n\n Example: IVR, IB, MB \n\n No Validations of these are kept at Network Systems"
          },
          "target_application": {
            "type": "string",
            "example": "WAY4",
            "minLength": 1,
            "maxLength": 10,
            "description": "The target_application can hold any value from FI side, this can be used by FI to check the target system of the API call"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-07-20T10:49:02.366+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response - Format  YYYY-MM-DDtHH:MM:SS.SSS+04:00"
          },
          "bank_id": {
            "type": "string",
            "example": "NIC",
            "minLength": 1,
            "maxLength": 4,
            "description": "Bank Id is Unique Id 4 digit code for each client and the same will be provided once the client setup is completed in our core system. \n\n For sandbox testing â€“ Please use â€œNICâ€ "
          }
        }
      },
      "OnlineEmbossingResBody": {
        "required": [
          "request_id"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "example": "EMB98201011970000001B154B5A2B",
            "minLength": 1,
            "maxLength": 32,
            "description": "Request Id in the below format EMB - constant XXX - bank code DDMMYYYYHH24MISS YYYYYYYYY - AN random value example: EMB36001011970000001NB1D2B5A2B\nif request_id was not sent, tibco to generate it, and if it was sent tibco to reject if length is not 29 and not starting with EMB and bank code"
          }
        }
      },
      "accounts": {
        "required": [
          "account_number",
          "customer_id",
          "product_code"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "customer_id": {
            "type": "string",
            "example": 100000027,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "rbs_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 512,
            "description": "RBS Number which is the number used to link NI System with Core System"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_045_C_2",
            "minLength": 1,
            "maxLength": 32,
            "description": "This code is generated by CMS after creating the product. This code is FI specific code."
          },
          "balances": {
            "$ref": "#/components/schemas/balances"
          },
          "sub_accounts": {
            "$ref": "#/components/schemas/sub_accounts"
          }
        }
      },
      "sub_accounts": {
        "required": [
          "account_number",
          "customer_id",
          "product_code"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "customer_id": {
            "type": "string",
            "example": 7876790,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "rbs_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 512,
            "description": "RBS Number which is the number used to link NI System with Core System"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_045_C_2",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product Code"
          },
          "balances": {
            "$ref": "#/components/schemas/balances"
          },
          "sub_accounts": {
            "$ref": "#/components/schemas/sub_accounts1"
          }
        }
      },
      "sub_accounts1": {
        "required": [
          "account_number",
          "customer_id",
          "product_code"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "customer_id": {
            "type": "string",
            "example": 7876790,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "rbs_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 512,
            "description": "RBS Number which is the number used to link NI System with Core System"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_045_C_2",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product Code"
          },
          "balances": {
            "$ref": "#/components/schemas/balances"
          },
          "sub_accounts": {
            "$ref": "#/components/schemas/sub_accounts2"
          }
        }
      },
      "sub_accounts2": {
        "required": [
          "account_number",
          "customer_id",
          "product_code"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "customer_id": {
            "type": "string",
            "example": 7876790,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "rbs_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 512,
            "description": "RBS Number which is the number used to link NI System with Core System"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_045_C_2",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_045_C_2 is just used as an example in Sandbox"
          },
          "balances": {
            "$ref": "#/components/schemas/balances"
          },
          "sub_accounts": {
            "$ref": "#/components/schemas/sub_accounts3"
          }
        }
      },
      "sub_accounts3": {
        "required": [
          "account_number",
          "customer_id",
          "product_code"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "customer_id": {
            "type": "string",
            "example": 7876790,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "rbs_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 512,
            "description": "RBS Number which is the number used to link NI System with Core System"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_045_C_2",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_045_C_2 is just used as an example in Sandbox"
          },
          "balances": {
            "$ref": "#/components/schemas/balances"
          },
          "sub_accounts": {
            "$ref": "#/components/schemas/sub_accounts4"
          }
        }
      },
      "sub_accounts4": {
        "required": [
          "account_number",
          "customer_id",
          "product_code"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "0009821110000000008",
            "minLength": 1,
            "maxLength": 64,
            "description": "Account number"
          },
          "customer_id": {
            "type": "string",
            "example": 7876790,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "rbs_number": {
            "type": "string",
            "example": 1,
            "minLength": 1,
            "maxLength": 512,
            "description": "RBS Number which is the number used to link NI System with Core System"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_045_C_2",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_045_C_2 is just used as an example in Sandbox"
          },
          "balances": {
            "$ref": "#/components/schemas/balances"
          },
          "cards": {
            "$ref": "#/components/schemas/cards_account_hierarchy"
          }
        }
      },
      "cards_account_hierarchy": {
        "required": [
          "masked_card_number",
          "card_identifier_id",
          "card_identifier_type",
          "card_expiry_date",
          "cardholder_name",
          "product_code"
        ],
        "properties": {
          "masked_card_number": {
            "type": "string",
            "example": "999851XXXXXX8349",
            "minLength": 1,
            "maxLength": 16,
            "description": "Masked PAN"
          },
          "customer_id": {
            "type": "string",
            "example": 100000027,
            "minLength": 1,
            "maxLength": 20,
            "description": "Customer ID: Customer Identification number \n\n This should be a unique number"
          },
          "card_identifier_id": {
            "type": "string",
            "example": "99985101161390700708",
            "minLength": 1,
            "maxLength": 32,
            "description": "Card Identifier Id"
          },
          "card_identifier_type": {
            "type": "string",
            "example": "EXID",
            "minLength": 1,
            "maxLength": 20,
            "description": "CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS"
          },
          "card_expiry_date": {
            "type": "string",
            "example": "0528",
            "minLength": 1,
            "maxLength": 4,
            "description": "Card's expiry date the Format is YYMM"
          },
          "cardholder_name": {
            "type": "string",
            "example": "JOHN DOE",
            "minLength": 1,
            "maxLength": 21,
            "description": "Cardholder's name"
          },
          "product_code": {
            "type": "string",
            "example": "982_AED_002_A",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_002_A is just used as an example in Sandbox"
          },
          "product_name": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 32,
            "description": "Product Name"
          },
          "brand": {
            "type": "string",
            "example": "VISA",
            "minLength": 1,
            "maxLength": 10,
            "description": "Card Brand example: MC , Visa"
          },
          "card_virtual_indicator": {
            "type": "string",
            "example": "V",
            "minLength": 1,
            "maxLength": 1,
            "description": "V - Virtual P - Physical"
          },
          "statuses": {
            "$ref": "#/components/schemas/statuses"
          },
          "balances": {
            "$ref": "#/components/schemas/balances"
          }
        }
      },
      "dictionaries_product": {
        "required": [
          "dictionaries_product"
        ],
        "properties": {
          "dictionaries_product": {
            "$ref": "#/components/schemas/products"
          }
        }
      },
      "products": {
        "$ref": "#/components/schemas/product"
      },
      "product": {
        "required": [
          "code",
          "currency",
          "name",
          "cardBrand",
          "productType",
          "productContract"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "982_AED_007_A",
            "minLength": 1,
            "maxLength": 50,
            "description": "Product code"
          },
          "currency": {
            "type": "string",
            "example": "AED",
            "minLength": 1,
            "maxLength": 3,
            "description": "Product currency "
          },
          "parentProductCode": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 50,
            "description": "Parent product code used for corporate and multi-currency products "
          },
          "shortCode": {
            "type": "string",
            "example": "007",
            "minLength": 1,
            "maxLength": 3,
            "description": "product short code example: 001 "
          },
          "name": {
            "type": "string",
            "example": "982-PM AED MC Platinum",
            "minLength": 1,
            "maxLength": 100,
            "description": "Product name "
          },
          "cardBrand": {
            "type": "string",
            "example": "MC",
            "minLength": 1,
            "maxLength": 4,
            "description": "product brand Visa, MC"
          },
          "productCategory": {
            "type": "string",
            "example": "CREDIT",
            "minLength": 1,
            "maxLength": 20,
            "description": "Product category PREPAID,CREDIT,DEBIT,MULTICURRENCY"
          },
          "productType": {
            "type": "string",
            "example": "Consume",
            "minLength": 1,
            "maxLength": 20,
            "description": "Product type Commercial, Consume"
          },
          "level": {
            "type": "string",
            "example": "",
            "minLength": 1,
            "maxLength": 1,
            "description": "level used for corporate products"
          },
          "productContract": {
            "type": "string",
            "example": "Account",
            "minLength": 1,
            "maxLength": 20,
            "description": "product contract Account, Card"
          }
        }
      },
      "dictionaries_mcc": {
        "required": [
          "dictionaries_mcc"
        ],
        "properties": {
          "dictionaries_mcc": {
            "$ref": "#/components/schemas/mcc_list"
          }
        }
      },
      "mcc_list": {
        "properties": {
          "group_name": {
            "type": "string",
            "example": "Entertainment",
            "minLength": 1,
            "maxLength": 50,
            "description": "MCC Group Name"
          },
          "group_code": {
            "type": "string",
            "example": "ENTERTAINMENT",
            "minLength": 1,
            "maxLength": 50,
            "description": "MCC Group Code"
          },
          "mcc_list": {
            "$ref": "#/components/schemas/mcc"
          }
        }
      },
      "mcc": {
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "7996",
            "minLength": 1,
            "maxLength": 4,
            "description": "MCC Code"
          },
          "name": {
            "type": "string",
            "example": "7996 Amusement Parks,circuses",
            "minLength": 1,
            "maxLength": 255,
            "description": "MCC Name"
          }
        }
      },
      "exception_details": {
        "required": [
          "application_name",
          "date_time",
          "status",
          "error_code",
          "error_description"
        ],
        "properties": {
          "application_name": {
            "type": "string",
            "example": "TCC-ADP",
            "minLength": 1,
            "maxLength": 20,
            "description": "Application Name"
          },
          "date_time": {
            "type": "string",
            "example": "2023-02-01T16:39:47.314+04:00",
            "minLength": 1,
            "maxLength": 30,
            "description": "Timestamp of the response Format â€œYYYY-MM-DD  HH:MM:SSâ€"
          },
          "status": {
            "type": "string",
            "example": "S",
            "minLength": 1,
            "maxLength": 1,
            "description": "Status of the request (S/F)"
          },
          "error_code": {
            "type": "string",
            "example": "000",
            "minLength": 1,
            "maxLength": 4,
            "description": "EAI Internal Error Code (Check error codes section for the complete list of error codes and error code descriptions)"
          },
          "error_description": {
            "type": "string",
            "example": "Success",
            "minLength": 1,
            "maxLength": 100,
            "description": "Error Description (Check error codes section for the complete list of error codes and error code descriptions)"
          },
          "transaction_ref_id": {
            "type": "string",
            "example": 236001,
            "minLength": 1,
            "maxLength": 20,
            "description": "The tracking_id sent in the request will be sent back in response in this field."
          }
        }
      }
    }
  }
}
